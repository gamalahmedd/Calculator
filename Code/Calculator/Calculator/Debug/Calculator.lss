
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003e4a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011e  00800060  00003e4a  00003ebe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00003fdc  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  000046a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 000001c0  00000000  00000000  00004730  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002121  00000000  00000000  000048f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008b1  00000000  00000000  00006a11  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e2d  00000000  00000000  000072c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002ec  00000000  00000000  000080f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000048a  00000000  00000000  000083dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002e9a  00000000  00000000  00008866  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000b700  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea e4       	ldi	r30, 0x4A	; 74
      68:	fe e3       	ldi	r31, 0x3E	; 62
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 37       	cpi	r26, 0x7E	; 126
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae e7       	ldi	r26, 0x7E	; 126
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ae 37       	cpi	r26, 0x7E	; 126
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 49 00 	call	0x92	; 0x92 <main>
      8a:	0c 94 23 1f 	jmp	0x3e46	; 0x3e46 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "LCD.h"
#define F_CPU 8000000UL
#include <util/delay.h>;

int main(void)
{
      92:	cf 93       	push	r28
      94:	df 93       	push	r29
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
      9a:	60 97       	sbiw	r28, 0x10	; 16
      9c:	0f b6       	in	r0, 0x3f	; 63
      9e:	f8 94       	cli
      a0:	de bf       	out	0x3e, r29	; 62
      a2:	0f be       	out	0x3f, r0	; 63
      a4:	cd bf       	out	0x3d, r28	; 61
	LCD_vInit();
      a6:	0e 94 49 11 	call	0x2292	; 0x2292 <LCD_vInit>
	KEYPAD_vInit('D');
      aa:	84 e4       	ldi	r24, 0x44	; 68
      ac:	0e 94 9d 10 	call	0x213a	; 0x213a <KEYPAD_vInit>
	unsigned long value1, value2;
	unsigned read_value;
	unsigned char operation;
	unsigned long long result = 0;
      b0:	19 82       	std	Y+1, r1	; 0x01
      b2:	1a 82       	std	Y+2, r1	; 0x02
      b4:	1b 82       	std	Y+3, r1	; 0x03
      b6:	1c 82       	std	Y+4, r1	; 0x04
      b8:	1d 82       	std	Y+5, r1	; 0x05
      ba:	1e 82       	std	Y+6, r1	; 0x06
      bc:	1f 82       	std	Y+7, r1	; 0x07
      be:	18 86       	std	Y+8, r1	; 0x08
	unsigned char counter;
    while(1)
    {
		counter = 0;
      c0:	99 24       	eor	r9, r9
						break;
					case '/':
						result = value1/value2;
						break;
				}
				if(result >= 1000000000 && result <= 10000000000)
      c2:	33 24       	eor	r3, r3
      c4:	33 94       	inc	r3
			} 
			while (read_value == NOTPRESSED);
			if(read_value == '+' || read_value == '-' || read_value == '/' || read_value == '*')
			{
				LCD_vSendChar(read_value);
				value1 = 0;
      c6:	22 24       	eor	r2, r2
      c8:	1b 86       	std	Y+11, r1	; 0x0b
      ca:	1c 86       	std	Y+12, r1	; 0x0c
      cc:	1d 86       	std	Y+13, r1	; 0x0d
	unsigned char operation;
	unsigned long long result = 0;
	unsigned char counter;
    while(1)
    {
		counter = 0;
      ce:	09 2d       	mov	r16, r9
		value1 = 0;
      d0:	aa 24       	eor	r10, r10
      d2:	bb 24       	eor	r11, r11
      d4:	65 01       	movw	r12, r10
		read_value = NOTPRESSED;
		while(counter < 5 && read_value != 'A' && read_value != '=')
		{
			do 
			{
				read_value = KEYPAD_u8Read('D');
      d6:	84 e4       	ldi	r24, 0x44	; 68
      d8:	0e 94 b8 10 	call	0x2170	; 0x2170 <KEYPAD_u8Read>
      dc:	18 2f       	mov	r17, r24
      de:	68 2e       	mov	r6, r24
      e0:	77 24       	eor	r7, r7
			} 
			while (read_value == NOTPRESSED);
      e2:	2f ef       	ldi	r18, 0xFF	; 255
      e4:	62 16       	cp	r6, r18
      e6:	71 04       	cpc	r7, r1
      e8:	b1 f3       	breq	.-20     	; 0xd6 <main+0x44>
		read_value = NOTPRESSED;
		while(counter < 5 && read_value != 'A' && read_value != '=')
		{
			do 
			{
				read_value = KEYPAD_u8Read('D');
      ea:	73 01       	movw	r14, r6
			} 
			while (read_value == NOTPRESSED);
			if(counter == 0)
      ec:	00 23       	and	r16, r16
      ee:	11 f4       	brne	.+4      	; 0xf4 <main+0x62>
			{
				LCD_vClearScreen();
      f0:	0e 94 ce 11 	call	0x239c	; 0x239c <LCD_vClearScreen>
			}
			if(read_value == '+' || read_value == '-' || read_value == '/' || read_value == '*')
      f4:	3b e2       	ldi	r19, 0x2B	; 43
      f6:	e3 16       	cp	r14, r19
      f8:	f1 04       	cpc	r15, r1
      fa:	79 f0       	breq	.+30     	; 0x11a <main+0x88>
      fc:	4d e2       	ldi	r20, 0x2D	; 45
      fe:	e4 16       	cp	r14, r20
     100:	f1 04       	cpc	r15, r1
     102:	71 f0       	breq	.+28     	; 0x120 <main+0x8e>
     104:	5f e2       	ldi	r21, 0x2F	; 47
     106:	e5 16       	cp	r14, r21
     108:	f1 04       	cpc	r15, r1
     10a:	69 f0       	breq	.+26     	; 0x126 <main+0x94>
     10c:	6a e2       	ldi	r22, 0x2A	; 42
     10e:	e6 16       	cp	r14, r22
     110:	f1 04       	cpc	r15, r1
     112:	61 f5       	brne	.+88     	; 0x16c <main+0xda>
     114:	73 01       	movw	r14, r6
		read_value = NOTPRESSED;
		while(counter < 5 && read_value != 'A' && read_value != '=')
		{
			do 
			{
				read_value = KEYPAD_u8Read('D');
     116:	c3 01       	movw	r24, r6
     118:	08 c0       	rjmp	.+16     	; 0x12a <main+0x98>
     11a:	73 01       	movw	r14, r6
     11c:	c3 01       	movw	r24, r6
     11e:	05 c0       	rjmp	.+10     	; 0x12a <main+0x98>
     120:	73 01       	movw	r14, r6
     122:	c3 01       	movw	r24, r6
     124:	02 c0       	rjmp	.+4      	; 0x12a <main+0x98>
     126:	73 01       	movw	r14, r6
     128:	c3 01       	movw	r24, r6
			}
			LCD_vSendChar(read_value);
			value1 = (value1 * 10) + (read_value - 48);
			counter++;
		}	
		while(read_value != '+' && read_value != '-' && read_value != '/' && read_value != '*' && read_value != 'A' && read_value != '=')
     12a:	8b 32       	cpi	r24, 0x2B	; 43
     12c:	91 05       	cpc	r25, r1
     12e:	09 f4       	brne	.+2      	; 0x132 <main+0xa0>
     130:	5f c0       	rjmp	.+190    	; 0x1f0 <main+0x15e>
     132:	81 2e       	mov	r8, r17
     134:	c7 01       	movw	r24, r14
     136:	05 c0       	rjmp	.+10     	; 0x142 <main+0xb0>
     138:	73 01       	movw	r14, r6
    {
		counter = 0;
		value1 = 0;
		value2 = 0;
		read_value = NOTPRESSED;
		while(counter < 5 && read_value != 'A' && read_value != '=')
     13a:	c3 01       	movw	r24, r6
     13c:	02 c0       	rjmp	.+4      	; 0x142 <main+0xb0>
     13e:	73 01       	movw	r14, r6
     140:	c3 01       	movw	r24, r6
			}
			LCD_vSendChar(read_value);
			value1 = (value1 * 10) + (read_value - 48);
			counter++;
		}	
		while(read_value != '+' && read_value != '-' && read_value != '/' && read_value != '*' && read_value != 'A' && read_value != '=')
     142:	8d 32       	cpi	r24, 0x2D	; 45
     144:	91 05       	cpc	r25, r1
     146:	09 f4       	brne	.+2      	; 0x14a <main+0xb8>
     148:	56 c0       	rjmp	.+172    	; 0x1f6 <main+0x164>
     14a:	8f 32       	cpi	r24, 0x2F	; 47
     14c:	91 05       	cpc	r25, r1
     14e:	09 f4       	brne	.+2      	; 0x152 <main+0xc0>
     150:	54 c0       	rjmp	.+168    	; 0x1fa <main+0x168>
     152:	8a 32       	cpi	r24, 0x2A	; 42
     154:	91 05       	cpc	r25, r1
     156:	09 f4       	brne	.+2      	; 0x15a <main+0xc8>
     158:	52 c0       	rjmp	.+164    	; 0x1fe <main+0x16c>
     15a:	81 34       	cpi	r24, 0x41	; 65
     15c:	91 05       	cpc	r25, r1
     15e:	09 f4       	brne	.+2      	; 0x162 <main+0xd0>
     160:	50 c0       	rjmp	.+160    	; 0x202 <main+0x170>
     162:	8d 33       	cpi	r24, 0x3D	; 61
     164:	91 05       	cpc	r25, r1
     166:	41 f5       	brne	.+80     	; 0x1b8 <main+0x126>
     168:	c7 01       	movw	r24, r14
     16a:	4c c0       	rjmp	.+152    	; 0x204 <main+0x172>
			if(read_value == '+' || read_value == '-' || read_value == '/' || read_value == '*')
			{
				operation = read_value;
				break;
			}
			LCD_vSendChar(read_value);
     16c:	81 2f       	mov	r24, r17
     16e:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
			value1 = (value1 * 10) + (read_value - 48);
     172:	c6 01       	movw	r24, r12
     174:	b5 01       	movw	r22, r10
     176:	2a e0       	ldi	r18, 0x0A	; 10
     178:	30 e0       	ldi	r19, 0x00	; 0
     17a:	40 e0       	ldi	r20, 0x00	; 0
     17c:	50 e0       	ldi	r21, 0x00	; 0
     17e:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
     182:	ab 01       	movw	r20, r22
     184:	bc 01       	movw	r22, r24
     186:	c7 01       	movw	r24, r14
     188:	c0 97       	sbiw	r24, 0x30	; 48
     18a:	a0 e0       	ldi	r26, 0x00	; 0
     18c:	b0 e0       	ldi	r27, 0x00	; 0
     18e:	5c 01       	movw	r10, r24
     190:	6d 01       	movw	r12, r26
     192:	a4 0e       	add	r10, r20
     194:	b5 1e       	adc	r11, r21
     196:	c6 1e       	adc	r12, r22
     198:	d7 1e       	adc	r13, r23
			counter++;
     19a:	0f 5f       	subi	r16, 0xFF	; 255
    {
		counter = 0;
		value1 = 0;
		value2 = 0;
		read_value = NOTPRESSED;
		while(counter < 5 && read_value != 'A' && read_value != '=')
     19c:	05 30       	cpi	r16, 0x05	; 5
     19e:	61 f2       	breq	.-104    	; 0x138 <main+0xa6>
     1a0:	71 e4       	ldi	r23, 0x41	; 65
     1a2:	e7 16       	cp	r14, r23
     1a4:	f1 04       	cpc	r15, r1
     1a6:	59 f2       	breq	.-106    	; 0x13e <main+0xac>
     1a8:	8d e3       	ldi	r24, 0x3D	; 61
     1aa:	e8 16       	cp	r14, r24
     1ac:	f1 04       	cpc	r15, r1
     1ae:	09 f0       	breq	.+2      	; 0x1b2 <main+0x120>
     1b0:	92 cf       	rjmp	.-220    	; 0xd6 <main+0x44>
     1b2:	73 01       	movw	r14, r6
     1b4:	c3 01       	movw	r24, r6
     1b6:	c5 cf       	rjmp	.-118    	; 0x142 <main+0xb0>
			value1 = (value1 * 10) + (read_value - 48);
			counter++;
		}	
		while(read_value != '+' && read_value != '-' && read_value != '/' && read_value != '*' && read_value != 'A' && read_value != '=')
		{
			read_value = KEYPAD_u8Read('D');
     1b8:	84 e4       	ldi	r24, 0x44	; 68
     1ba:	0e 94 b8 10 	call	0x2170	; 0x2170 <KEYPAD_u8Read>
     1be:	28 2f       	mov	r18, r24
     1c0:	30 e0       	ldi	r19, 0x00	; 0
			}
			LCD_vSendChar(read_value);
			value1 = (value1 * 10) + (read_value - 48);
			counter++;
		}	
		while(read_value != '+' && read_value != '-' && read_value != '/' && read_value != '*' && read_value != 'A' && read_value != '=')
     1c2:	2b 32       	cpi	r18, 0x2B	; 43
     1c4:	31 05       	cpc	r19, r1
     1c6:	11 f1       	breq	.+68     	; 0x20c <main+0x17a>
     1c8:	2d 32       	cpi	r18, 0x2D	; 45
     1ca:	31 05       	cpc	r19, r1
     1cc:	11 f1       	breq	.+68     	; 0x212 <main+0x180>
     1ce:	2f 32       	cpi	r18, 0x2F	; 47
     1d0:	31 05       	cpc	r19, r1
     1d2:	11 f1       	breq	.+68     	; 0x218 <main+0x186>
     1d4:	2a 32       	cpi	r18, 0x2A	; 42
     1d6:	31 05       	cpc	r19, r1
     1d8:	11 f1       	breq	.+68     	; 0x21e <main+0x18c>
     1da:	21 34       	cpi	r18, 0x41	; 65
     1dc:	31 05       	cpc	r19, r1
     1de:	11 f4       	brne	.+4      	; 0x1e4 <main+0x152>
     1e0:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__stack+0x1225>
     1e4:	2d 33       	cpi	r18, 0x3D	; 61
     1e6:	31 05       	cpc	r19, r1
     1e8:	39 f7       	brne	.-50     	; 0x1b8 <main+0x126>
     1ea:	79 01       	movw	r14, r18
     1ec:	88 2e       	mov	r8, r24
     1ee:	19 c0       	rjmp	.+50     	; 0x222 <main+0x190>
     1f0:	81 2e       	mov	r8, r17
     1f2:	c7 01       	movw	r24, r14
     1f4:	07 c0       	rjmp	.+14     	; 0x204 <main+0x172>
     1f6:	c7 01       	movw	r24, r14
     1f8:	05 c0       	rjmp	.+10     	; 0x204 <main+0x172>
     1fa:	c7 01       	movw	r24, r14
     1fc:	03 c0       	rjmp	.+6      	; 0x204 <main+0x172>
     1fe:	c7 01       	movw	r24, r14
     200:	01 c0       	rjmp	.+2      	; 0x204 <main+0x172>
     202:	c7 01       	movw	r24, r14
		{
			read_value = KEYPAD_u8Read('D');
			operation = read_value;
		}		
		if(read_value != 'A' && read_value != '=')
     204:	81 34       	cpi	r24, 0x41	; 65
     206:	91 05       	cpc	r25, r1
     208:	a9 f0       	breq	.+42     	; 0x234 <main+0x1a2>
     20a:	0b c0       	rjmp	.+22     	; 0x222 <main+0x190>
     20c:	79 01       	movw	r14, r18
     20e:	88 2e       	mov	r8, r24
     210:	08 c0       	rjmp	.+16     	; 0x222 <main+0x190>
     212:	79 01       	movw	r14, r18
     214:	88 2e       	mov	r8, r24
     216:	05 c0       	rjmp	.+10     	; 0x222 <main+0x190>
     218:	79 01       	movw	r14, r18
     21a:	88 2e       	mov	r8, r24
     21c:	02 c0       	rjmp	.+4      	; 0x222 <main+0x190>
     21e:	79 01       	movw	r14, r18
     220:	88 2e       	mov	r8, r24
     222:	9d e3       	ldi	r25, 0x3D	; 61
     224:	e9 16       	cp	r14, r25
     226:	f1 04       	cpc	r15, r1
     228:	11 f4       	brne	.+4      	; 0x22e <main+0x19c>
     22a:	0c 94 34 0d 	jmp	0x1a68	; 0x1a68 <__stack+0x1209>
		{
			LCD_vSendChar(read_value);
     22e:	8e 2d       	mov	r24, r14
     230:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
		}		
		counter = 0;
		while(read_value != '=' && read_value != 'A' && counter < 5)
     234:	a1 e4       	ldi	r26, 0x41	; 65
     236:	ea 16       	cp	r14, r26
     238:	f1 04       	cpc	r15, r1
     23a:	11 f4       	brne	.+4      	; 0x240 <main+0x1ae>
     23c:	0c 94 39 0d 	jmp	0x1a72	; 0x1a72 <__stack+0x1213>
     240:	f9 2c       	mov	r15, r9
     242:	44 24       	eor	r4, r4
     244:	55 24       	eor	r5, r5
     246:	32 01       	movw	r6, r4
		{
			do 
			{
				read_value = KEYPAD_u8Read('D');
     248:	84 e4       	ldi	r24, 0x44	; 68
     24a:	0e 94 b8 10 	call	0x2170	; 0x2170 <KEYPAD_u8Read>
     24e:	08 2f       	mov	r16, r24
     250:	10 e0       	ldi	r17, 0x00	; 0
     252:	18 8b       	std	Y+16, r17	; 0x10
     254:	0f 87       	std	Y+15, r16	; 0x0f
			} 
			while (read_value == NOTPRESSED);
     256:	0f 3f       	cpi	r16, 0xFF	; 255
     258:	11 05       	cpc	r17, r1
     25a:	b1 f3       	breq	.-20     	; 0x248 <main+0x1b6>
			if(read_value == '+' || read_value == '-' || read_value == '/' || read_value == '*')
     25c:	0b 32       	cpi	r16, 0x2B	; 43
     25e:	11 05       	cpc	r17, r1
     260:	49 f0       	breq	.+18     	; 0x274 <main+0x1e2>
     262:	0d 32       	cpi	r16, 0x2D	; 45
     264:	11 05       	cpc	r17, r1
     266:	31 f0       	breq	.+12     	; 0x274 <main+0x1e2>
     268:	0f 32       	cpi	r16, 0x2F	; 47
     26a:	11 05       	cpc	r17, r1
     26c:	19 f0       	breq	.+6      	; 0x274 <main+0x1e2>
     26e:	0a 32       	cpi	r16, 0x2A	; 42
     270:	11 05       	cpc	r17, r1
     272:	39 f4       	brne	.+14     	; 0x282 <main+0x1f0>
			{
				LCD_vSendChar(read_value);
     274:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
				value1 = 0;
     278:	a2 2c       	mov	r10, r2
     27a:	bb 84       	ldd	r11, Y+11	; 0x0b
     27c:	cc 84       	ldd	r12, Y+12	; 0x0c
     27e:	dd 84       	ldd	r13, Y+13	; 0x0d
     280:	2c c0       	rjmp	.+88     	; 0x2da <main+0x248>
				continue;
			}
			else if(read_value == 'A' || read_value == '=')
     282:	01 34       	cpi	r16, 0x41	; 65
     284:	11 05       	cpc	r17, r1
     286:	09 f1       	breq	.+66     	; 0x2ca <main+0x238>
     288:	0d 33       	cpi	r16, 0x3D	; 61
     28a:	11 05       	cpc	r17, r1
     28c:	e9 f1       	breq	.+122    	; 0x308 <main+0x276>
			{
				break;
			}
			LCD_vSendChar(read_value);
     28e:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
			value2 = (value2 * 10) + (read_value - 48);
     292:	c3 01       	movw	r24, r6
     294:	b2 01       	movw	r22, r4
     296:	2a e0       	ldi	r18, 0x0A	; 10
     298:	30 e0       	ldi	r19, 0x00	; 0
     29a:	40 e0       	ldi	r20, 0x00	; 0
     29c:	50 e0       	ldi	r21, 0x00	; 0
     29e:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
     2a2:	ab 01       	movw	r20, r22
     2a4:	bc 01       	movw	r22, r24
     2a6:	c8 01       	movw	r24, r16
     2a8:	c0 97       	sbiw	r24, 0x30	; 48
     2aa:	2c 01       	movw	r4, r24
     2ac:	66 24       	eor	r6, r6
     2ae:	77 24       	eor	r7, r7
     2b0:	44 0e       	add	r4, r20
     2b2:	55 1e       	adc	r5, r21
     2b4:	66 1e       	adc	r6, r22
     2b6:	77 1e       	adc	r7, r23
			counter++;
     2b8:	f3 94       	inc	r15
     2ba:	0f c0       	rjmp	.+30     	; 0x2da <main+0x248>
     2bc:	ef 84       	ldd	r14, Y+15	; 0x0f
     2be:	f8 88       	ldd	r15, Y+16	; 0x10
		counter = 0;
		while(read_value != '=' && read_value != 'A' && counter < 5)
		{
			do 
			{
				read_value = KEYPAD_u8Read('D');
     2c0:	c7 01       	movw	r24, r14
			}
			LCD_vSendChar(read_value);
			value2 = (value2 * 10) + (read_value - 48);
			counter++;
		}		
		while(read_value != '=' && read_value != 'A')
     2c2:	8d 33       	cpi	r24, 0x3D	; 61
     2c4:	91 05       	cpc	r25, r1
     2c6:	19 f4       	brne	.+6      	; 0x2ce <main+0x23c>
     2c8:	21 c0       	rjmp	.+66     	; 0x30c <main+0x27a>
     2ca:	ef 84       	ldd	r14, Y+15	; 0x0f
     2cc:	f8 88       	ldd	r15, Y+16	; 0x10
     2ce:	11 e4       	ldi	r17, 0x41	; 65
     2d0:	e1 16       	cp	r14, r17
     2d2:	f1 04       	cpc	r15, r1
     2d4:	69 f4       	brne	.+26     	; 0x2f0 <main+0x25e>
     2d6:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__stack+0x121d>
		if(read_value != 'A' && read_value != '=')
		{
			LCD_vSendChar(read_value);
		}		
		counter = 0;
		while(read_value != '=' && read_value != 'A' && counter < 5)
     2da:	01 34       	cpi	r16, 0x41	; 65
     2dc:	11 05       	cpc	r17, r1
     2de:	71 f3       	breq	.-36     	; 0x2bc <main+0x22a>
     2e0:	24 e0       	ldi	r18, 0x04	; 4
     2e2:	2f 15       	cp	r18, r15
     2e4:	08 f0       	brcs	.+2      	; 0x2e8 <main+0x256>
     2e6:	b0 cf       	rjmp	.-160    	; 0x248 <main+0x1b6>
     2e8:	ef 84       	ldd	r14, Y+15	; 0x0f
     2ea:	f8 88       	ldd	r15, Y+16	; 0x10
		{
			do 
			{
				read_value = KEYPAD_u8Read('D');
     2ec:	c7 01       	movw	r24, r14
     2ee:	e9 cf       	rjmp	.-46     	; 0x2c2 <main+0x230>
			value2 = (value2 * 10) + (read_value - 48);
			counter++;
		}		
		while(read_value != '=' && read_value != 'A')
		{
			read_value = KEYPAD_u8Read('D');
     2f0:	84 e4       	ldi	r24, 0x44	; 68
     2f2:	0e 94 b8 10 	call	0x2170	; 0x2170 <KEYPAD_u8Read>
     2f6:	90 e0       	ldi	r25, 0x00	; 0
			}
			LCD_vSendChar(read_value);
			value2 = (value2 * 10) + (read_value - 48);
			counter++;
		}		
		while(read_value != '=' && read_value != 'A')
     2f8:	8d 33       	cpi	r24, 0x3D	; 61
     2fa:	91 05       	cpc	r25, r1
     2fc:	61 f0       	breq	.+24     	; 0x316 <main+0x284>
     2fe:	81 34       	cpi	r24, 0x41	; 65
     300:	91 05       	cpc	r25, r1
     302:	b1 f7       	brne	.-20     	; 0x2f0 <main+0x25e>
     304:	0c 94 3e 0d 	jmp	0x1a7c	; 0x1a7c <__stack+0x121d>
     308:	ef 84       	ldd	r14, Y+15	; 0x0f
     30a:	f8 88       	ldd	r15, Y+16	; 0x10
		}
		if (read_value == 'A')
		{
			LCD_vClearScreen();
		}
		if(read_value == '=')
     30c:	3d e3       	ldi	r19, 0x3D	; 61
     30e:	e3 16       	cp	r14, r19
     310:	f1 04       	cpc	r15, r1
     312:	09 f0       	breq	.+2      	; 0x316 <main+0x284>
     314:	dc ce       	rjmp	.-584    	; 0xce <main+0x3c>
		{
			if(value1 == 0 || value2 == 0)
     316:	a1 14       	cp	r10, r1
     318:	b1 04       	cpc	r11, r1
     31a:	c1 04       	cpc	r12, r1
     31c:	d1 04       	cpc	r13, r1
     31e:	29 f0       	breq	.+10     	; 0x32a <main+0x298>
     320:	41 14       	cp	r4, r1
     322:	51 04       	cpc	r5, r1
     324:	61 04       	cpc	r6, r1
     326:	71 04       	cpc	r7, r1
     328:	91 f4       	brne	.+36     	; 0x34e <main+0x2bc>
			{
				LCD_vClearScreen();
     32a:	0e 94 ce 11 	call	0x239c	; 0x239c <LCD_vClearScreen>
				LCD_vSendString("Syntax	Error!");
     32e:	80 e6       	ldi	r24, 0x60	; 96
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 bf 11 	call	0x237e	; 0x237e <LCD_vSendString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     336:	4f ef       	ldi	r20, 0xFF	; 255
     338:	59 e6       	ldi	r21, 0x69	; 105
     33a:	68 e1       	ldi	r22, 0x18	; 24
     33c:	41 50       	subi	r20, 0x01	; 1
     33e:	50 40       	sbci	r21, 0x00	; 0
     340:	60 40       	sbci	r22, 0x00	; 0
     342:	e1 f7       	brne	.-8      	; 0x33c <main+0x2aa>
     344:	00 c0       	rjmp	.+0      	; 0x346 <main+0x2b4>
     346:	00 00       	nop
				_delay_ms(1000);
				LCD_vClearScreen();
     348:	0e 94 ce 11 	call	0x239c	; 0x239c <LCD_vClearScreen>
     34c:	c0 ce       	rjmp	.-640    	; 0xce <main+0x3c>
			}
			else
			{
				LCD_vSendChar('=');
     34e:	8d e3       	ldi	r24, 0x3D	; 61
     350:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
				switch(operation)
     354:	5b e2       	ldi	r21, 0x2B	; 43
     356:	85 16       	cp	r8, r21
     358:	79 f0       	breq	.+30     	; 0x378 <main+0x2e6>
     35a:	58 15       	cp	r21, r8
     35c:	28 f0       	brcs	.+10     	; 0x368 <main+0x2d6>
     35e:	6a e2       	ldi	r22, 0x2A	; 42
     360:	86 16       	cp	r8, r22
     362:	09 f0       	breq	.+2      	; 0x366 <main+0x2d4>
     364:	6a c0       	rjmp	.+212    	; 0x43a <main+0x3a8>
     366:	2e c0       	rjmp	.+92     	; 0x3c4 <main+0x332>
     368:	7d e2       	ldi	r23, 0x2D	; 45
     36a:	87 16       	cp	r8, r23
     36c:	b9 f0       	breq	.+46     	; 0x39c <main+0x30a>
     36e:	8f e2       	ldi	r24, 0x2F	; 47
     370:	88 16       	cp	r8, r24
     372:	09 f0       	breq	.+2      	; 0x376 <main+0x2e4>
     374:	62 c0       	rjmp	.+196    	; 0x43a <main+0x3a8>
     376:	4e c0       	rjmp	.+156    	; 0x414 <main+0x382>
				{
					case '+':
						result = value1 + value2;
     378:	4a 0c       	add	r4, r10
     37a:	5b 1c       	adc	r5, r11
     37c:	6c 1c       	adc	r6, r12
     37e:	7d 1c       	adc	r7, r13
     380:	63 01       	movw	r12, r6
     382:	52 01       	movw	r10, r4
     384:	ee 24       	eor	r14, r14
     386:	ff 24       	eor	r15, r15
     388:	87 01       	movw	r16, r14
     38a:	49 82       	std	Y+1, r4	; 0x01
     38c:	ba 82       	std	Y+2, r11	; 0x02
     38e:	cb 82       	std	Y+3, r12	; 0x03
     390:	dc 82       	std	Y+4, r13	; 0x04
     392:	ed 82       	std	Y+5, r14	; 0x05
     394:	fe 82       	std	Y+6, r15	; 0x06
     396:	0f 83       	std	Y+7, r16	; 0x07
     398:	18 87       	std	Y+8, r17	; 0x08
						break;
     39a:	4f c0       	rjmp	.+158    	; 0x43a <main+0x3a8>
					case '-':
						result = value1 - value2;
     39c:	d6 01       	movw	r26, r12
     39e:	c5 01       	movw	r24, r10
     3a0:	84 19       	sub	r24, r4
     3a2:	95 09       	sbc	r25, r5
     3a4:	a6 09       	sbc	r26, r6
     3a6:	b7 09       	sbc	r27, r7
     3a8:	6c 01       	movw	r12, r24
     3aa:	7d 01       	movw	r14, r26
     3ac:	00 e0       	ldi	r16, 0x00	; 0
     3ae:	10 e0       	ldi	r17, 0x00	; 0
     3b0:	98 01       	movw	r18, r16
     3b2:	89 83       	std	Y+1, r24	; 0x01
     3b4:	da 82       	std	Y+2, r13	; 0x02
     3b6:	eb 82       	std	Y+3, r14	; 0x03
     3b8:	fc 82       	std	Y+4, r15	; 0x04
     3ba:	0d 83       	std	Y+5, r16	; 0x05
     3bc:	1e 83       	std	Y+6, r17	; 0x06
     3be:	2f 83       	std	Y+7, r18	; 0x07
     3c0:	38 87       	std	Y+8, r19	; 0x08
						break;
     3c2:	3b c0       	rjmp	.+118    	; 0x43a <main+0x3a8>
					case '*':
						result = (long long) value1 * value2;
     3c4:	a3 01       	movw	r20, r6
     3c6:	92 01       	movw	r18, r4
     3c8:	60 e0       	ldi	r22, 0x00	; 0
     3ca:	70 e0       	ldi	r23, 0x00	; 0
     3cc:	cb 01       	movw	r24, r22
     3ce:	49 82       	std	Y+1, r4	; 0x01
     3d0:	3a 83       	std	Y+2, r19	; 0x02
     3d2:	4b 83       	std	Y+3, r20	; 0x03
     3d4:	5c 83       	std	Y+4, r21	; 0x04
     3d6:	6d 83       	std	Y+5, r22	; 0x05
     3d8:	7e 83       	std	Y+6, r23	; 0x06
     3da:	8f 83       	std	Y+7, r24	; 0x07
     3dc:	98 87       	std	Y+8, r25	; 0x08
     3de:	2a 2d       	mov	r18, r10
     3e0:	3b 2d       	mov	r19, r11
     3e2:	4c 2d       	mov	r20, r12
     3e4:	5d 2d       	mov	r21, r13
     3e6:	69 2d       	mov	r22, r9
     3e8:	79 2d       	mov	r23, r9
     3ea:	89 2d       	mov	r24, r9
     3ec:	99 2d       	mov	r25, r9
     3ee:	a9 80       	ldd	r10, Y+1	; 0x01
     3f0:	ba 80       	ldd	r11, Y+2	; 0x02
     3f2:	cb 80       	ldd	r12, Y+3	; 0x03
     3f4:	dc 80       	ldd	r13, Y+4	; 0x04
     3f6:	e9 2c       	mov	r14, r9
     3f8:	f9 2c       	mov	r15, r9
     3fa:	09 2d       	mov	r16, r9
     3fc:	19 2d       	mov	r17, r9
     3fe:	0e 94 f5 11 	call	0x23ea	; 0x23ea <__muldi3>
     402:	29 83       	std	Y+1, r18	; 0x01
     404:	3a 83       	std	Y+2, r19	; 0x02
     406:	4b 83       	std	Y+3, r20	; 0x03
     408:	5c 83       	std	Y+4, r21	; 0x04
     40a:	6d 83       	std	Y+5, r22	; 0x05
     40c:	7e 83       	std	Y+6, r23	; 0x06
     40e:	8f 83       	std	Y+7, r24	; 0x07
     410:	98 87       	std	Y+8, r25	; 0x08
						break;
     412:	13 c0       	rjmp	.+38     	; 0x43a <main+0x3a8>
					case '/':
						result = value1/value2;
     414:	c6 01       	movw	r24, r12
     416:	b5 01       	movw	r22, r10
     418:	a3 01       	movw	r20, r6
     41a:	92 01       	movw	r18, r4
     41c:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
     420:	59 01       	movw	r10, r18
     422:	6a 01       	movw	r12, r20
     424:	ee 24       	eor	r14, r14
     426:	ff 24       	eor	r15, r15
     428:	87 01       	movw	r16, r14
     42a:	29 83       	std	Y+1, r18	; 0x01
     42c:	ba 82       	std	Y+2, r11	; 0x02
     42e:	cb 82       	std	Y+3, r12	; 0x03
     430:	dc 82       	std	Y+4, r13	; 0x04
     432:	ed 82       	std	Y+5, r14	; 0x05
     434:	fe 82       	std	Y+6, r15	; 0x06
     436:	0f 83       	std	Y+7, r16	; 0x07
     438:	18 87       	std	Y+8, r17	; 0x08
						break;
				}
				if(result >= 1000000000 && result <= 10000000000)
     43a:	e9 81       	ldd	r30, Y+1	; 0x01
     43c:	5a 81       	ldd	r21, Y+2	; 0x02
     43e:	5a 5c       	subi	r21, 0xCA	; 202
     440:	93 2d       	mov	r25, r3
     442:	ba 80       	ldd	r11, Y+2	; 0x02
     444:	5b 15       	cp	r21, r11
     446:	08 f0       	brcs	.+2      	; 0x44a <main+0x3b8>
     448:	99 2d       	mov	r25, r9
     44a:	99 29       	or	r25, r9
     44c:	8b 81       	ldd	r24, Y+3	; 0x03
     44e:	8b 59       	subi	r24, 0x9B	; 155
     450:	23 2d       	mov	r18, r3
     452:	cb 80       	ldd	r12, Y+3	; 0x03
     454:	8c 15       	cp	r24, r12
     456:	08 f0       	brcs	.+2      	; 0x45a <main+0x3c8>
     458:	29 2d       	mov	r18, r9
     45a:	98 0f       	add	r25, r24
     45c:	33 2d       	mov	r19, r3
     45e:	98 17       	cp	r25, r24
     460:	08 f0       	brcs	.+2      	; 0x464 <main+0x3d2>
     462:	39 2d       	mov	r19, r9
     464:	23 2b       	or	r18, r19
     466:	89 2f       	mov	r24, r25
     468:	9c 81       	ldd	r25, Y+4	; 0x04
     46a:	9c 53       	subi	r25, 0x3C	; 60
     46c:	33 2d       	mov	r19, r3
     46e:	dc 80       	ldd	r13, Y+4	; 0x04
     470:	9d 15       	cp	r25, r13
     472:	08 f0       	brcs	.+2      	; 0x476 <main+0x3e4>
     474:	39 2d       	mov	r19, r9
     476:	29 0f       	add	r18, r25
     478:	43 2d       	mov	r20, r3
     47a:	29 17       	cp	r18, r25
     47c:	08 f0       	brcs	.+2      	; 0x480 <main+0x3ee>
     47e:	49 2d       	mov	r20, r9
     480:	34 2b       	or	r19, r20
     482:	92 2f       	mov	r25, r18
     484:	2d 81       	ldd	r18, Y+5	; 0x05
     486:	21 50       	subi	r18, 0x01	; 1
     488:	43 2d       	mov	r20, r3
     48a:	ed 80       	ldd	r14, Y+5	; 0x05
     48c:	2e 15       	cp	r18, r14
     48e:	08 f0       	brcs	.+2      	; 0x492 <main+0x400>
     490:	49 2d       	mov	r20, r9
     492:	32 0f       	add	r19, r18
     494:	63 2d       	mov	r22, r3
     496:	32 17       	cp	r19, r18
     498:	08 f0       	brcs	.+2      	; 0x49c <main+0x40a>
     49a:	69 2d       	mov	r22, r9
     49c:	46 2b       	or	r20, r22
     49e:	23 2f       	mov	r18, r19
     4a0:	3e 81       	ldd	r19, Y+6	; 0x06
     4a2:	31 50       	subi	r19, 0x01	; 1
     4a4:	63 2d       	mov	r22, r3
     4a6:	fe 80       	ldd	r15, Y+6	; 0x06
     4a8:	3f 15       	cp	r19, r15
     4aa:	08 f0       	brcs	.+2      	; 0x4ae <main+0x41c>
     4ac:	69 2d       	mov	r22, r9
     4ae:	43 0f       	add	r20, r19
     4b0:	73 2d       	mov	r23, r3
     4b2:	43 17       	cp	r20, r19
     4b4:	08 f0       	brcs	.+2      	; 0x4b8 <main+0x426>
     4b6:	79 2d       	mov	r23, r9
     4b8:	67 2b       	or	r22, r23
     4ba:	34 2f       	mov	r19, r20
     4bc:	4f 81       	ldd	r20, Y+7	; 0x07
     4be:	41 50       	subi	r20, 0x01	; 1
     4c0:	73 2d       	mov	r23, r3
     4c2:	0f 81       	ldd	r16, Y+7	; 0x07
     4c4:	40 17       	cp	r20, r16
     4c6:	08 f0       	brcs	.+2      	; 0x4ca <main+0x438>
     4c8:	79 2d       	mov	r23, r9
     4ca:	64 0f       	add	r22, r20
     4cc:	f3 2d       	mov	r31, r3
     4ce:	64 17       	cp	r22, r20
     4d0:	08 f0       	brcs	.+2      	; 0x4d4 <main+0x442>
     4d2:	f9 2d       	mov	r31, r9
     4d4:	7f 2b       	or	r23, r31
     4d6:	46 2f       	mov	r20, r22
     4d8:	68 85       	ldd	r22, Y+8	; 0x08
     4da:	61 50       	subi	r22, 0x01	; 1
     4dc:	67 0f       	add	r22, r23
     4de:	09 f0       	breq	.+2      	; 0x4e2 <main+0x450>
     4e0:	6f c1       	rjmp	.+734    	; 0x7c0 <main+0x72e>
     4e2:	66 23       	and	r22, r22
     4e4:	09 f5       	brne	.+66     	; 0x528 <main+0x496>
     4e6:	44 23       	and	r20, r20
     4e8:	09 f0       	breq	.+2      	; 0x4ec <main+0x45a>
     4ea:	6a c1       	rjmp	.+724    	; 0x7c0 <main+0x72e>
     4ec:	44 23       	and	r20, r20
     4ee:	e1 f4       	brne	.+56     	; 0x528 <main+0x496>
     4f0:	33 23       	and	r19, r19
     4f2:	09 f0       	breq	.+2      	; 0x4f6 <main+0x464>
     4f4:	65 c1       	rjmp	.+714    	; 0x7c0 <main+0x72e>
     4f6:	33 23       	and	r19, r19
     4f8:	b9 f4       	brne	.+46     	; 0x528 <main+0x496>
     4fa:	23 30       	cpi	r18, 0x03	; 3
     4fc:	08 f0       	brcs	.+2      	; 0x500 <main+0x46e>
     4fe:	60 c1       	rjmp	.+704    	; 0x7c0 <main+0x72e>
     500:	22 30       	cpi	r18, 0x02	; 2
     502:	91 f4       	brne	.+36     	; 0x528 <main+0x496>
     504:	99 31       	cpi	r25, 0x19	; 25
     506:	08 f0       	brcs	.+2      	; 0x50a <main+0x478>
     508:	5b c1       	rjmp	.+694    	; 0x7c0 <main+0x72e>
     50a:	98 31       	cpi	r25, 0x18	; 24
     50c:	69 f4       	brne	.+26     	; 0x528 <main+0x496>
     50e:	82 37       	cpi	r24, 0x72	; 114
     510:	08 f0       	brcs	.+2      	; 0x514 <main+0x482>
     512:	56 c1       	rjmp	.+684    	; 0x7c0 <main+0x72e>
     514:	81 37       	cpi	r24, 0x71	; 113
     516:	41 f4       	brne	.+16     	; 0x528 <main+0x496>
     518:	5b 31       	cpi	r21, 0x1B	; 27
     51a:	08 f0       	brcs	.+2      	; 0x51e <main+0x48c>
     51c:	51 c1       	rjmp	.+674    	; 0x7c0 <main+0x72e>
     51e:	5a 31       	cpi	r21, 0x1A	; 26
     520:	19 f4       	brne	.+6      	; 0x528 <main+0x496>
     522:	ee 23       	and	r30, r30
     524:	09 f0       	breq	.+2      	; 0x528 <main+0x496>
     526:	4c c1       	rjmp	.+664    	; 0x7c0 <main+0x72e>
				{
					LCD_vSendChar((result / 1000000000) + 48);
     528:	29 81       	ldd	r18, Y+1	; 0x01
     52a:	3a 81       	ldd	r19, Y+2	; 0x02
     52c:	4b 81       	ldd	r20, Y+3	; 0x03
     52e:	5c 81       	ldd	r21, Y+4	; 0x04
     530:	6d 81       	ldd	r22, Y+5	; 0x05
     532:	7e 81       	ldd	r23, Y+6	; 0x06
     534:	8f 81       	ldd	r24, Y+7	; 0x07
     536:	98 85       	ldd	r25, Y+8	; 0x08
     538:	a9 2c       	mov	r10, r9
     53a:	0f 2e       	mov	r0, r31
     53c:	fa ec       	ldi	r31, 0xCA	; 202
     53e:	bf 2e       	mov	r11, r31
     540:	f0 2d       	mov	r31, r0
     542:	0f 2e       	mov	r0, r31
     544:	fa e9       	ldi	r31, 0x9A	; 154
     546:	cf 2e       	mov	r12, r31
     548:	f0 2d       	mov	r31, r0
     54a:	0f 2e       	mov	r0, r31
     54c:	fb e3       	ldi	r31, 0x3B	; 59
     54e:	df 2e       	mov	r13, r31
     550:	f0 2d       	mov	r31, r0
     552:	e9 2c       	mov	r14, r9
     554:	f9 2c       	mov	r15, r9
     556:	09 2d       	mov	r16, r9
     558:	19 2d       	mov	r17, r9
     55a:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     55e:	82 2f       	mov	r24, r18
     560:	80 5d       	subi	r24, 0xD0	; 208
     562:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 1000000000) / 100000000) + 48);
     566:	29 81       	ldd	r18, Y+1	; 0x01
     568:	3a 81       	ldd	r19, Y+2	; 0x02
     56a:	4b 81       	ldd	r20, Y+3	; 0x03
     56c:	5c 81       	ldd	r21, Y+4	; 0x04
     56e:	6d 81       	ldd	r22, Y+5	; 0x05
     570:	7e 81       	ldd	r23, Y+6	; 0x06
     572:	8f 81       	ldd	r24, Y+7	; 0x07
     574:	98 85       	ldd	r25, Y+8	; 0x08
     576:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     57a:	2e 87       	std	Y+14, r18	; 0x0e
     57c:	3f 87       	std	Y+15, r19	; 0x0f
     57e:	74 2e       	mov	r7, r20
     580:	65 2e       	mov	r6, r21
     582:	56 2e       	mov	r5, r22
     584:	47 2e       	mov	r4, r23
     586:	89 87       	std	Y+9, r24	; 0x09
     588:	9a 87       	std	Y+10, r25	; 0x0a
     58a:	56 2d       	mov	r21, r6
     58c:	65 2d       	mov	r22, r5
     58e:	74 2d       	mov	r23, r4
     590:	0f 2e       	mov	r0, r31
     592:	f1 ee       	ldi	r31, 0xE1	; 225
     594:	bf 2e       	mov	r11, r31
     596:	f0 2d       	mov	r31, r0
     598:	0f 2e       	mov	r0, r31
     59a:	f5 ef       	ldi	r31, 0xF5	; 245
     59c:	cf 2e       	mov	r12, r31
     59e:	f0 2d       	mov	r31, r0
     5a0:	0f 2e       	mov	r0, r31
     5a2:	f5 e0       	ldi	r31, 0x05	; 5
     5a4:	df 2e       	mov	r13, r31
     5a6:	f0 2d       	mov	r31, r0
     5a8:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     5ac:	82 2f       	mov	r24, r18
     5ae:	80 5d       	subi	r24, 0xD0	; 208
     5b0:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 1000000000) % 100000000) / 10000000) + 48);
     5b4:	2e 85       	ldd	r18, Y+14	; 0x0e
     5b6:	3f 85       	ldd	r19, Y+15	; 0x0f
     5b8:	47 2d       	mov	r20, r7
     5ba:	56 2d       	mov	r21, r6
     5bc:	65 2d       	mov	r22, r5
     5be:	74 2d       	mov	r23, r4
     5c0:	89 85       	ldd	r24, Y+9	; 0x09
     5c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     5c4:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     5c8:	2e 87       	std	Y+14, r18	; 0x0e
     5ca:	3f 87       	std	Y+15, r19	; 0x0f
     5cc:	74 2e       	mov	r7, r20
     5ce:	65 2e       	mov	r6, r21
     5d0:	56 2e       	mov	r5, r22
     5d2:	47 2e       	mov	r4, r23
     5d4:	89 87       	std	Y+9, r24	; 0x09
     5d6:	9a 87       	std	Y+10, r25	; 0x0a
     5d8:	56 2d       	mov	r21, r6
     5da:	65 2d       	mov	r22, r5
     5dc:	74 2d       	mov	r23, r4
     5de:	0f 2e       	mov	r0, r31
     5e0:	f0 e8       	ldi	r31, 0x80	; 128
     5e2:	af 2e       	mov	r10, r31
     5e4:	f0 2d       	mov	r31, r0
     5e6:	0f 2e       	mov	r0, r31
     5e8:	f6 e9       	ldi	r31, 0x96	; 150
     5ea:	bf 2e       	mov	r11, r31
     5ec:	f0 2d       	mov	r31, r0
     5ee:	0f 2e       	mov	r0, r31
     5f0:	f8 e9       	ldi	r31, 0x98	; 152
     5f2:	cf 2e       	mov	r12, r31
     5f4:	f0 2d       	mov	r31, r0
     5f6:	d9 2c       	mov	r13, r9
     5f8:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     5fc:	82 2f       	mov	r24, r18
     5fe:	80 5d       	subi	r24, 0xD0	; 208
     600:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((result % 1000000000) % 100000000) % 10000000) / 1000000) + 48);
     604:	2e 85       	ldd	r18, Y+14	; 0x0e
     606:	3f 85       	ldd	r19, Y+15	; 0x0f
     608:	47 2d       	mov	r20, r7
     60a:	56 2d       	mov	r21, r6
     60c:	65 2d       	mov	r22, r5
     60e:	74 2d       	mov	r23, r4
     610:	89 85       	ldd	r24, Y+9	; 0x09
     612:	9a 85       	ldd	r25, Y+10	; 0x0a
     614:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     618:	2e 87       	std	Y+14, r18	; 0x0e
     61a:	3f 87       	std	Y+15, r19	; 0x0f
     61c:	74 2e       	mov	r7, r20
     61e:	65 2e       	mov	r6, r21
     620:	56 2e       	mov	r5, r22
     622:	47 2e       	mov	r4, r23
     624:	89 87       	std	Y+9, r24	; 0x09
     626:	9a 87       	std	Y+10, r25	; 0x0a
     628:	56 2d       	mov	r21, r6
     62a:	65 2d       	mov	r22, r5
     62c:	74 2d       	mov	r23, r4
     62e:	aa 24       	eor	r10, r10
     630:	68 94       	set
     632:	a6 f8       	bld	r10, 6
     634:	0f 2e       	mov	r0, r31
     636:	f2 e4       	ldi	r31, 0x42	; 66
     638:	bf 2e       	mov	r11, r31
     63a:	f0 2d       	mov	r31, r0
     63c:	0f 2e       	mov	r0, r31
     63e:	ff e0       	ldi	r31, 0x0F	; 15
     640:	cf 2e       	mov	r12, r31
     642:	f0 2d       	mov	r31, r0
     644:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     648:	82 2f       	mov	r24, r18
     64a:	80 5d       	subi	r24, 0xD0	; 208
     64c:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((result % 1000000000) % 100000000) % 10000000) % 1000000) / 100000) + 48);
     650:	2e 85       	ldd	r18, Y+14	; 0x0e
     652:	3f 85       	ldd	r19, Y+15	; 0x0f
     654:	47 2d       	mov	r20, r7
     656:	56 2d       	mov	r21, r6
     658:	65 2d       	mov	r22, r5
     65a:	74 2d       	mov	r23, r4
     65c:	89 85       	ldd	r24, Y+9	; 0x09
     65e:	9a 85       	ldd	r25, Y+10	; 0x0a
     660:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     664:	2e 87       	std	Y+14, r18	; 0x0e
     666:	3f 87       	std	Y+15, r19	; 0x0f
     668:	74 2e       	mov	r7, r20
     66a:	65 2e       	mov	r6, r21
     66c:	56 2e       	mov	r5, r22
     66e:	47 2e       	mov	r4, r23
     670:	89 87       	std	Y+9, r24	; 0x09
     672:	9a 87       	std	Y+10, r25	; 0x0a
     674:	56 2d       	mov	r21, r6
     676:	65 2d       	mov	r22, r5
     678:	74 2d       	mov	r23, r4
     67a:	0f 2e       	mov	r0, r31
     67c:	f0 ea       	ldi	r31, 0xA0	; 160
     67e:	af 2e       	mov	r10, r31
     680:	f0 2d       	mov	r31, r0
     682:	0f 2e       	mov	r0, r31
     684:	f6 e8       	ldi	r31, 0x86	; 134
     686:	bf 2e       	mov	r11, r31
     688:	f0 2d       	mov	r31, r0
     68a:	c3 2c       	mov	r12, r3
     68c:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     690:	82 2f       	mov	r24, r18
     692:	80 5d       	subi	r24, 0xD0	; 208
     694:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((result % 1000000000) % 100000000) % 10000000) % 1000000) % 100000) / 10000) + 48);
     698:	2e 85       	ldd	r18, Y+14	; 0x0e
     69a:	3f 85       	ldd	r19, Y+15	; 0x0f
     69c:	47 2d       	mov	r20, r7
     69e:	56 2d       	mov	r21, r6
     6a0:	65 2d       	mov	r22, r5
     6a2:	74 2d       	mov	r23, r4
     6a4:	89 85       	ldd	r24, Y+9	; 0x09
     6a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     6a8:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     6ac:	2e 87       	std	Y+14, r18	; 0x0e
     6ae:	3f 87       	std	Y+15, r19	; 0x0f
     6b0:	74 2e       	mov	r7, r20
     6b2:	65 2e       	mov	r6, r21
     6b4:	56 2e       	mov	r5, r22
     6b6:	47 2e       	mov	r4, r23
     6b8:	89 87       	std	Y+9, r24	; 0x09
     6ba:	9a 87       	std	Y+10, r25	; 0x0a
     6bc:	56 2d       	mov	r21, r6
     6be:	65 2d       	mov	r22, r5
     6c0:	74 2d       	mov	r23, r4
     6c2:	aa 24       	eor	r10, r10
     6c4:	68 94       	set
     6c6:	a4 f8       	bld	r10, 4
     6c8:	0f 2e       	mov	r0, r31
     6ca:	f7 e2       	ldi	r31, 0x27	; 39
     6cc:	bf 2e       	mov	r11, r31
     6ce:	f0 2d       	mov	r31, r0
     6d0:	c9 2c       	mov	r12, r9
     6d2:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     6d6:	82 2f       	mov	r24, r18
     6d8:	80 5d       	subi	r24, 0xD0	; 208
     6da:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((((result % 1000000000) % 100000000) % 10000000) % 1000000) % 100000) % 10000) / 1000) + 48);
     6de:	2e 85       	ldd	r18, Y+14	; 0x0e
     6e0:	3f 85       	ldd	r19, Y+15	; 0x0f
     6e2:	47 2d       	mov	r20, r7
     6e4:	56 2d       	mov	r21, r6
     6e6:	65 2d       	mov	r22, r5
     6e8:	74 2d       	mov	r23, r4
     6ea:	89 85       	ldd	r24, Y+9	; 0x09
     6ec:	9a 85       	ldd	r25, Y+10	; 0x0a
     6ee:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     6f2:	2e 87       	std	Y+14, r18	; 0x0e
     6f4:	3f 87       	std	Y+15, r19	; 0x0f
     6f6:	74 2e       	mov	r7, r20
     6f8:	65 2e       	mov	r6, r21
     6fa:	56 2e       	mov	r5, r22
     6fc:	47 2e       	mov	r4, r23
     6fe:	89 87       	std	Y+9, r24	; 0x09
     700:	9a 87       	std	Y+10, r25	; 0x0a
     702:	56 2d       	mov	r21, r6
     704:	65 2d       	mov	r22, r5
     706:	74 2d       	mov	r23, r4
     708:	0f 2e       	mov	r0, r31
     70a:	f8 ee       	ldi	r31, 0xE8	; 232
     70c:	af 2e       	mov	r10, r31
     70e:	f0 2d       	mov	r31, r0
     710:	0f 2e       	mov	r0, r31
     712:	f3 e0       	ldi	r31, 0x03	; 3
     714:	bf 2e       	mov	r11, r31
     716:	f0 2d       	mov	r31, r0
     718:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     71c:	82 2f       	mov	r24, r18
     71e:	80 5d       	subi	r24, 0xD0	; 208
     720:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((((result % 1000000000) % 100000000) % 10000000) % 1000000) % 100000) % 10000) % 1000) / 100) + 48);
     724:	2e 85       	ldd	r18, Y+14	; 0x0e
     726:	3f 85       	ldd	r19, Y+15	; 0x0f
     728:	47 2d       	mov	r20, r7
     72a:	56 2d       	mov	r21, r6
     72c:	65 2d       	mov	r22, r5
     72e:	74 2d       	mov	r23, r4
     730:	89 85       	ldd	r24, Y+9	; 0x09
     732:	9a 85       	ldd	r25, Y+10	; 0x0a
     734:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     738:	2e 87       	std	Y+14, r18	; 0x0e
     73a:	3f 87       	std	Y+15, r19	; 0x0f
     73c:	74 2e       	mov	r7, r20
     73e:	65 2e       	mov	r6, r21
     740:	56 2e       	mov	r5, r22
     742:	47 2e       	mov	r4, r23
     744:	89 87       	std	Y+9, r24	; 0x09
     746:	9a 87       	std	Y+10, r25	; 0x0a
     748:	56 2d       	mov	r21, r6
     74a:	65 2d       	mov	r22, r5
     74c:	74 2d       	mov	r23, r4
     74e:	0f 2e       	mov	r0, r31
     750:	f4 e6       	ldi	r31, 0x64	; 100
     752:	af 2e       	mov	r10, r31
     754:	f0 2d       	mov	r31, r0
     756:	b9 2c       	mov	r11, r9
     758:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     75c:	82 2f       	mov	r24, r18
     75e:	80 5d       	subi	r24, 0xD0	; 208
     760:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((((((result % 1000000000) % 100000000) % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) / 10) + 48);
     764:	2e 85       	ldd	r18, Y+14	; 0x0e
     766:	3f 85       	ldd	r19, Y+15	; 0x0f
     768:	47 2d       	mov	r20, r7
     76a:	56 2d       	mov	r21, r6
     76c:	65 2d       	mov	r22, r5
     76e:	74 2d       	mov	r23, r4
     770:	89 85       	ldd	r24, Y+9	; 0x09
     772:	9a 85       	ldd	r25, Y+10	; 0x0a
     774:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     778:	2e 87       	std	Y+14, r18	; 0x0e
     77a:	3f 87       	std	Y+15, r19	; 0x0f
     77c:	74 2e       	mov	r7, r20
     77e:	65 2e       	mov	r6, r21
     780:	56 2e       	mov	r5, r22
     782:	47 2e       	mov	r4, r23
     784:	89 87       	std	Y+9, r24	; 0x09
     786:	9a 87       	std	Y+10, r25	; 0x0a
     788:	56 2d       	mov	r21, r6
     78a:	65 2d       	mov	r22, r5
     78c:	74 2d       	mov	r23, r4
     78e:	0f 2e       	mov	r0, r31
     790:	fa e0       	ldi	r31, 0x0A	; 10
     792:	af 2e       	mov	r10, r31
     794:	f0 2d       	mov	r31, r0
     796:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     79a:	82 2f       	mov	r24, r18
     79c:	80 5d       	subi	r24, 0xD0	; 208
     79e:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((((((result % 1000000000) % 100000000) % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) % 10) + 48);
     7a2:	2e 85       	ldd	r18, Y+14	; 0x0e
     7a4:	3f 85       	ldd	r19, Y+15	; 0x0f
     7a6:	47 2d       	mov	r20, r7
     7a8:	56 2d       	mov	r21, r6
     7aa:	65 2d       	mov	r22, r5
     7ac:	74 2d       	mov	r23, r4
     7ae:	89 85       	ldd	r24, Y+9	; 0x09
     7b0:	9a 85       	ldd	r25, Y+10	; 0x0a
     7b2:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     7b6:	82 2f       	mov	r24, r18
     7b8:	80 5d       	subi	r24, 0xD0	; 208
     7ba:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
     7be:	87 cc       	rjmp	.-1778   	; 0xce <main+0x3c>
				}
				else if(result >= 100000000 && result <= 1000000000)
     7c0:	e9 81       	ldd	r30, Y+1	; 0x01
     7c2:	5a 81       	ldd	r21, Y+2	; 0x02
     7c4:	51 5e       	subi	r21, 0xE1	; 225
     7c6:	93 2d       	mov	r25, r3
     7c8:	1a 81       	ldd	r17, Y+2	; 0x02
     7ca:	51 17       	cp	r21, r17
     7cc:	08 f0       	brcs	.+2      	; 0x7d0 <main+0x73e>
     7ce:	99 2d       	mov	r25, r9
     7d0:	99 29       	or	r25, r9
     7d2:	8b 81       	ldd	r24, Y+3	; 0x03
     7d4:	86 5f       	subi	r24, 0xF6	; 246
     7d6:	23 2d       	mov	r18, r3
     7d8:	3b 81       	ldd	r19, Y+3	; 0x03
     7da:	83 17       	cp	r24, r19
     7dc:	08 f0       	brcs	.+2      	; 0x7e0 <main+0x74e>
     7de:	29 2d       	mov	r18, r9
     7e0:	98 0f       	add	r25, r24
     7e2:	33 2d       	mov	r19, r3
     7e4:	98 17       	cp	r25, r24
     7e6:	08 f0       	brcs	.+2      	; 0x7ea <main+0x758>
     7e8:	39 2d       	mov	r19, r9
     7ea:	23 2b       	or	r18, r19
     7ec:	89 2f       	mov	r24, r25
     7ee:	9c 81       	ldd	r25, Y+4	; 0x04
     7f0:	96 50       	subi	r25, 0x06	; 6
     7f2:	33 2d       	mov	r19, r3
     7f4:	4c 81       	ldd	r20, Y+4	; 0x04
     7f6:	94 17       	cp	r25, r20
     7f8:	08 f0       	brcs	.+2      	; 0x7fc <main+0x76a>
     7fa:	39 2d       	mov	r19, r9
     7fc:	29 0f       	add	r18, r25
     7fe:	43 2d       	mov	r20, r3
     800:	29 17       	cp	r18, r25
     802:	08 f0       	brcs	.+2      	; 0x806 <main+0x774>
     804:	49 2d       	mov	r20, r9
     806:	34 2b       	or	r19, r20
     808:	92 2f       	mov	r25, r18
     80a:	2d 81       	ldd	r18, Y+5	; 0x05
     80c:	21 50       	subi	r18, 0x01	; 1
     80e:	43 2d       	mov	r20, r3
     810:	6d 81       	ldd	r22, Y+5	; 0x05
     812:	26 17       	cp	r18, r22
     814:	08 f0       	brcs	.+2      	; 0x818 <main+0x786>
     816:	49 2d       	mov	r20, r9
     818:	32 0f       	add	r19, r18
     81a:	63 2d       	mov	r22, r3
     81c:	32 17       	cp	r19, r18
     81e:	08 f0       	brcs	.+2      	; 0x822 <main+0x790>
     820:	69 2d       	mov	r22, r9
     822:	46 2b       	or	r20, r22
     824:	23 2f       	mov	r18, r19
     826:	3e 81       	ldd	r19, Y+6	; 0x06
     828:	31 50       	subi	r19, 0x01	; 1
     82a:	63 2d       	mov	r22, r3
     82c:	7e 81       	ldd	r23, Y+6	; 0x06
     82e:	37 17       	cp	r19, r23
     830:	08 f0       	brcs	.+2      	; 0x834 <main+0x7a2>
     832:	69 2d       	mov	r22, r9
     834:	43 0f       	add	r20, r19
     836:	73 2d       	mov	r23, r3
     838:	43 17       	cp	r20, r19
     83a:	08 f0       	brcs	.+2      	; 0x83e <main+0x7ac>
     83c:	79 2d       	mov	r23, r9
     83e:	67 2b       	or	r22, r23
     840:	34 2f       	mov	r19, r20
     842:	4f 81       	ldd	r20, Y+7	; 0x07
     844:	41 50       	subi	r20, 0x01	; 1
     846:	73 2d       	mov	r23, r3
     848:	af 81       	ldd	r26, Y+7	; 0x07
     84a:	4a 17       	cp	r20, r26
     84c:	08 f0       	brcs	.+2      	; 0x850 <main+0x7be>
     84e:	79 2d       	mov	r23, r9
     850:	64 0f       	add	r22, r20
     852:	f3 2d       	mov	r31, r3
     854:	64 17       	cp	r22, r20
     856:	08 f0       	brcs	.+2      	; 0x85a <main+0x7c8>
     858:	f9 2d       	mov	r31, r9
     85a:	7f 2b       	or	r23, r31
     85c:	46 2f       	mov	r20, r22
     85e:	68 85       	ldd	r22, Y+8	; 0x08
     860:	61 50       	subi	r22, 0x01	; 1
     862:	67 0f       	add	r22, r23
     864:	09 f0       	breq	.+2      	; 0x868 <__stack+0x9>
     866:	48 c1       	rjmp	.+656    	; 0xaf8 <__stack+0x299>
     868:	66 23       	and	r22, r22
     86a:	09 f5       	brne	.+66     	; 0x8ae <__stack+0x4f>
     86c:	44 23       	and	r20, r20
     86e:	09 f0       	breq	.+2      	; 0x872 <__stack+0x13>
     870:	43 c1       	rjmp	.+646    	; 0xaf8 <__stack+0x299>
     872:	44 23       	and	r20, r20
     874:	e1 f4       	brne	.+56     	; 0x8ae <__stack+0x4f>
     876:	33 23       	and	r19, r19
     878:	09 f0       	breq	.+2      	; 0x87c <__stack+0x1d>
     87a:	3e c1       	rjmp	.+636    	; 0xaf8 <__stack+0x299>
     87c:	33 23       	and	r19, r19
     87e:	b9 f4       	brne	.+46     	; 0x8ae <__stack+0x4f>
     880:	22 23       	and	r18, r18
     882:	09 f0       	breq	.+2      	; 0x886 <__stack+0x27>
     884:	39 c1       	rjmp	.+626    	; 0xaf8 <__stack+0x299>
     886:	22 23       	and	r18, r18
     888:	91 f4       	brne	.+36     	; 0x8ae <__stack+0x4f>
     88a:	96 33       	cpi	r25, 0x36	; 54
     88c:	08 f0       	brcs	.+2      	; 0x890 <__stack+0x31>
     88e:	34 c1       	rjmp	.+616    	; 0xaf8 <__stack+0x299>
     890:	95 33       	cpi	r25, 0x35	; 53
     892:	69 f4       	brne	.+26     	; 0x8ae <__stack+0x4f>
     894:	85 3a       	cpi	r24, 0xA5	; 165
     896:	08 f0       	brcs	.+2      	; 0x89a <__stack+0x3b>
     898:	2f c1       	rjmp	.+606    	; 0xaf8 <__stack+0x299>
     89a:	84 3a       	cpi	r24, 0xA4	; 164
     89c:	41 f4       	brne	.+16     	; 0x8ae <__stack+0x4f>
     89e:	5a 3e       	cpi	r21, 0xEA	; 234
     8a0:	08 f0       	brcs	.+2      	; 0x8a4 <__stack+0x45>
     8a2:	2a c1       	rjmp	.+596    	; 0xaf8 <__stack+0x299>
     8a4:	59 3e       	cpi	r21, 0xE9	; 233
     8a6:	19 f4       	brne	.+6      	; 0x8ae <__stack+0x4f>
     8a8:	ee 23       	and	r30, r30
     8aa:	09 f0       	breq	.+2      	; 0x8ae <__stack+0x4f>
     8ac:	25 c1       	rjmp	.+586    	; 0xaf8 <__stack+0x299>
				{
					LCD_vSendChar((result / 100000000) + 48);
     8ae:	29 81       	ldd	r18, Y+1	; 0x01
     8b0:	3a 81       	ldd	r19, Y+2	; 0x02
     8b2:	4b 81       	ldd	r20, Y+3	; 0x03
     8b4:	5c 81       	ldd	r21, Y+4	; 0x04
     8b6:	6d 81       	ldd	r22, Y+5	; 0x05
     8b8:	7e 81       	ldd	r23, Y+6	; 0x06
     8ba:	8f 81       	ldd	r24, Y+7	; 0x07
     8bc:	98 85       	ldd	r25, Y+8	; 0x08
     8be:	a9 2c       	mov	r10, r9
     8c0:	0f 2e       	mov	r0, r31
     8c2:	f1 ee       	ldi	r31, 0xE1	; 225
     8c4:	bf 2e       	mov	r11, r31
     8c6:	f0 2d       	mov	r31, r0
     8c8:	0f 2e       	mov	r0, r31
     8ca:	f5 ef       	ldi	r31, 0xF5	; 245
     8cc:	cf 2e       	mov	r12, r31
     8ce:	f0 2d       	mov	r31, r0
     8d0:	0f 2e       	mov	r0, r31
     8d2:	f5 e0       	ldi	r31, 0x05	; 5
     8d4:	df 2e       	mov	r13, r31
     8d6:	f0 2d       	mov	r31, r0
     8d8:	e9 2c       	mov	r14, r9
     8da:	f9 2c       	mov	r15, r9
     8dc:	09 2d       	mov	r16, r9
     8de:	19 2d       	mov	r17, r9
     8e0:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     8e4:	82 2f       	mov	r24, r18
     8e6:	80 5d       	subi	r24, 0xD0	; 208
     8e8:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 100000000) / 10000000) + 48);
     8ec:	29 81       	ldd	r18, Y+1	; 0x01
     8ee:	3a 81       	ldd	r19, Y+2	; 0x02
     8f0:	4b 81       	ldd	r20, Y+3	; 0x03
     8f2:	5c 81       	ldd	r21, Y+4	; 0x04
     8f4:	6d 81       	ldd	r22, Y+5	; 0x05
     8f6:	7e 81       	ldd	r23, Y+6	; 0x06
     8f8:	8f 81       	ldd	r24, Y+7	; 0x07
     8fa:	98 85       	ldd	r25, Y+8	; 0x08
     8fc:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     900:	2e 87       	std	Y+14, r18	; 0x0e
     902:	3f 87       	std	Y+15, r19	; 0x0f
     904:	74 2e       	mov	r7, r20
     906:	65 2e       	mov	r6, r21
     908:	56 2e       	mov	r5, r22
     90a:	47 2e       	mov	r4, r23
     90c:	89 87       	std	Y+9, r24	; 0x09
     90e:	9a 87       	std	Y+10, r25	; 0x0a
     910:	56 2d       	mov	r21, r6
     912:	65 2d       	mov	r22, r5
     914:	74 2d       	mov	r23, r4
     916:	0f 2e       	mov	r0, r31
     918:	f0 e8       	ldi	r31, 0x80	; 128
     91a:	af 2e       	mov	r10, r31
     91c:	f0 2d       	mov	r31, r0
     91e:	0f 2e       	mov	r0, r31
     920:	f6 e9       	ldi	r31, 0x96	; 150
     922:	bf 2e       	mov	r11, r31
     924:	f0 2d       	mov	r31, r0
     926:	0f 2e       	mov	r0, r31
     928:	f8 e9       	ldi	r31, 0x98	; 152
     92a:	cf 2e       	mov	r12, r31
     92c:	f0 2d       	mov	r31, r0
     92e:	d9 2c       	mov	r13, r9
     930:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     934:	82 2f       	mov	r24, r18
     936:	80 5d       	subi	r24, 0xD0	; 208
     938:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 100000000) % 10000000) / 1000000) + 48);
     93c:	2e 85       	ldd	r18, Y+14	; 0x0e
     93e:	3f 85       	ldd	r19, Y+15	; 0x0f
     940:	47 2d       	mov	r20, r7
     942:	56 2d       	mov	r21, r6
     944:	65 2d       	mov	r22, r5
     946:	74 2d       	mov	r23, r4
     948:	89 85       	ldd	r24, Y+9	; 0x09
     94a:	9a 85       	ldd	r25, Y+10	; 0x0a
     94c:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     950:	2e 87       	std	Y+14, r18	; 0x0e
     952:	3f 87       	std	Y+15, r19	; 0x0f
     954:	74 2e       	mov	r7, r20
     956:	65 2e       	mov	r6, r21
     958:	56 2e       	mov	r5, r22
     95a:	47 2e       	mov	r4, r23
     95c:	89 87       	std	Y+9, r24	; 0x09
     95e:	9a 87       	std	Y+10, r25	; 0x0a
     960:	56 2d       	mov	r21, r6
     962:	65 2d       	mov	r22, r5
     964:	74 2d       	mov	r23, r4
     966:	aa 24       	eor	r10, r10
     968:	68 94       	set
     96a:	a6 f8       	bld	r10, 6
     96c:	0f 2e       	mov	r0, r31
     96e:	f2 e4       	ldi	r31, 0x42	; 66
     970:	bf 2e       	mov	r11, r31
     972:	f0 2d       	mov	r31, r0
     974:	0f 2e       	mov	r0, r31
     976:	ff e0       	ldi	r31, 0x0F	; 15
     978:	cf 2e       	mov	r12, r31
     97a:	f0 2d       	mov	r31, r0
     97c:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     980:	82 2f       	mov	r24, r18
     982:	80 5d       	subi	r24, 0xD0	; 208
     984:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((result % 100000000) % 10000000) % 1000000) / 100000) + 48);
     988:	2e 85       	ldd	r18, Y+14	; 0x0e
     98a:	3f 85       	ldd	r19, Y+15	; 0x0f
     98c:	47 2d       	mov	r20, r7
     98e:	56 2d       	mov	r21, r6
     990:	65 2d       	mov	r22, r5
     992:	74 2d       	mov	r23, r4
     994:	89 85       	ldd	r24, Y+9	; 0x09
     996:	9a 85       	ldd	r25, Y+10	; 0x0a
     998:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     99c:	2e 87       	std	Y+14, r18	; 0x0e
     99e:	3f 87       	std	Y+15, r19	; 0x0f
     9a0:	74 2e       	mov	r7, r20
     9a2:	65 2e       	mov	r6, r21
     9a4:	56 2e       	mov	r5, r22
     9a6:	47 2e       	mov	r4, r23
     9a8:	89 87       	std	Y+9, r24	; 0x09
     9aa:	9a 87       	std	Y+10, r25	; 0x0a
     9ac:	56 2d       	mov	r21, r6
     9ae:	65 2d       	mov	r22, r5
     9b0:	74 2d       	mov	r23, r4
     9b2:	0f 2e       	mov	r0, r31
     9b4:	f0 ea       	ldi	r31, 0xA0	; 160
     9b6:	af 2e       	mov	r10, r31
     9b8:	f0 2d       	mov	r31, r0
     9ba:	0f 2e       	mov	r0, r31
     9bc:	f6 e8       	ldi	r31, 0x86	; 134
     9be:	bf 2e       	mov	r11, r31
     9c0:	f0 2d       	mov	r31, r0
     9c2:	c3 2c       	mov	r12, r3
     9c4:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     9c8:	82 2f       	mov	r24, r18
     9ca:	80 5d       	subi	r24, 0xD0	; 208
     9cc:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((result % 100000000) % 10000000) % 1000000) % 100000) / 10000) + 48);
     9d0:	2e 85       	ldd	r18, Y+14	; 0x0e
     9d2:	3f 85       	ldd	r19, Y+15	; 0x0f
     9d4:	47 2d       	mov	r20, r7
     9d6:	56 2d       	mov	r21, r6
     9d8:	65 2d       	mov	r22, r5
     9da:	74 2d       	mov	r23, r4
     9dc:	89 85       	ldd	r24, Y+9	; 0x09
     9de:	9a 85       	ldd	r25, Y+10	; 0x0a
     9e0:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     9e4:	2e 87       	std	Y+14, r18	; 0x0e
     9e6:	3f 87       	std	Y+15, r19	; 0x0f
     9e8:	74 2e       	mov	r7, r20
     9ea:	65 2e       	mov	r6, r21
     9ec:	56 2e       	mov	r5, r22
     9ee:	47 2e       	mov	r4, r23
     9f0:	89 87       	std	Y+9, r24	; 0x09
     9f2:	9a 87       	std	Y+10, r25	; 0x0a
     9f4:	56 2d       	mov	r21, r6
     9f6:	65 2d       	mov	r22, r5
     9f8:	74 2d       	mov	r23, r4
     9fa:	aa 24       	eor	r10, r10
     9fc:	68 94       	set
     9fe:	a4 f8       	bld	r10, 4
     a00:	0f 2e       	mov	r0, r31
     a02:	f7 e2       	ldi	r31, 0x27	; 39
     a04:	bf 2e       	mov	r11, r31
     a06:	f0 2d       	mov	r31, r0
     a08:	c9 2c       	mov	r12, r9
     a0a:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     a0e:	82 2f       	mov	r24, r18
     a10:	80 5d       	subi	r24, 0xD0	; 208
     a12:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((result % 100000000) % 10000000) % 1000000) % 100000) % 10000) / 1000) + 48);
     a16:	2e 85       	ldd	r18, Y+14	; 0x0e
     a18:	3f 85       	ldd	r19, Y+15	; 0x0f
     a1a:	47 2d       	mov	r20, r7
     a1c:	56 2d       	mov	r21, r6
     a1e:	65 2d       	mov	r22, r5
     a20:	74 2d       	mov	r23, r4
     a22:	89 85       	ldd	r24, Y+9	; 0x09
     a24:	9a 85       	ldd	r25, Y+10	; 0x0a
     a26:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     a2a:	2e 87       	std	Y+14, r18	; 0x0e
     a2c:	3f 87       	std	Y+15, r19	; 0x0f
     a2e:	74 2e       	mov	r7, r20
     a30:	65 2e       	mov	r6, r21
     a32:	56 2e       	mov	r5, r22
     a34:	47 2e       	mov	r4, r23
     a36:	89 87       	std	Y+9, r24	; 0x09
     a38:	9a 87       	std	Y+10, r25	; 0x0a
     a3a:	56 2d       	mov	r21, r6
     a3c:	65 2d       	mov	r22, r5
     a3e:	74 2d       	mov	r23, r4
     a40:	0f 2e       	mov	r0, r31
     a42:	f8 ee       	ldi	r31, 0xE8	; 232
     a44:	af 2e       	mov	r10, r31
     a46:	f0 2d       	mov	r31, r0
     a48:	0f 2e       	mov	r0, r31
     a4a:	f3 e0       	ldi	r31, 0x03	; 3
     a4c:	bf 2e       	mov	r11, r31
     a4e:	f0 2d       	mov	r31, r0
     a50:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     a54:	82 2f       	mov	r24, r18
     a56:	80 5d       	subi	r24, 0xD0	; 208
     a58:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((((result % 100000000) % 10000000) % 1000000) % 100000) % 10000) % 1000) / 100) + 48);
     a5c:	2e 85       	ldd	r18, Y+14	; 0x0e
     a5e:	3f 85       	ldd	r19, Y+15	; 0x0f
     a60:	47 2d       	mov	r20, r7
     a62:	56 2d       	mov	r21, r6
     a64:	65 2d       	mov	r22, r5
     a66:	74 2d       	mov	r23, r4
     a68:	89 85       	ldd	r24, Y+9	; 0x09
     a6a:	9a 85       	ldd	r25, Y+10	; 0x0a
     a6c:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     a70:	2e 87       	std	Y+14, r18	; 0x0e
     a72:	3f 87       	std	Y+15, r19	; 0x0f
     a74:	74 2e       	mov	r7, r20
     a76:	65 2e       	mov	r6, r21
     a78:	56 2e       	mov	r5, r22
     a7a:	47 2e       	mov	r4, r23
     a7c:	89 87       	std	Y+9, r24	; 0x09
     a7e:	9a 87       	std	Y+10, r25	; 0x0a
     a80:	56 2d       	mov	r21, r6
     a82:	65 2d       	mov	r22, r5
     a84:	74 2d       	mov	r23, r4
     a86:	0f 2e       	mov	r0, r31
     a88:	f4 e6       	ldi	r31, 0x64	; 100
     a8a:	af 2e       	mov	r10, r31
     a8c:	f0 2d       	mov	r31, r0
     a8e:	b9 2c       	mov	r11, r9
     a90:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     a94:	82 2f       	mov	r24, r18
     a96:	80 5d       	subi	r24, 0xD0	; 208
     a98:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((((result % 100000000) % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) / 10) + 48);
     a9c:	2e 85       	ldd	r18, Y+14	; 0x0e
     a9e:	3f 85       	ldd	r19, Y+15	; 0x0f
     aa0:	47 2d       	mov	r20, r7
     aa2:	56 2d       	mov	r21, r6
     aa4:	65 2d       	mov	r22, r5
     aa6:	74 2d       	mov	r23, r4
     aa8:	89 85       	ldd	r24, Y+9	; 0x09
     aaa:	9a 85       	ldd	r25, Y+10	; 0x0a
     aac:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     ab0:	2e 87       	std	Y+14, r18	; 0x0e
     ab2:	3f 87       	std	Y+15, r19	; 0x0f
     ab4:	74 2e       	mov	r7, r20
     ab6:	65 2e       	mov	r6, r21
     ab8:	56 2e       	mov	r5, r22
     aba:	47 2e       	mov	r4, r23
     abc:	89 87       	std	Y+9, r24	; 0x09
     abe:	9a 87       	std	Y+10, r25	; 0x0a
     ac0:	56 2d       	mov	r21, r6
     ac2:	65 2d       	mov	r22, r5
     ac4:	74 2d       	mov	r23, r4
     ac6:	0f 2e       	mov	r0, r31
     ac8:	fa e0       	ldi	r31, 0x0A	; 10
     aca:	af 2e       	mov	r10, r31
     acc:	f0 2d       	mov	r31, r0
     ace:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     ad2:	82 2f       	mov	r24, r18
     ad4:	80 5d       	subi	r24, 0xD0	; 208
     ad6:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((((result % 100000000) % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) % 10) + 48);
     ada:	2e 85       	ldd	r18, Y+14	; 0x0e
     adc:	3f 85       	ldd	r19, Y+15	; 0x0f
     ade:	47 2d       	mov	r20, r7
     ae0:	56 2d       	mov	r21, r6
     ae2:	65 2d       	mov	r22, r5
     ae4:	74 2d       	mov	r23, r4
     ae6:	89 85       	ldd	r24, Y+9	; 0x09
     ae8:	9a 85       	ldd	r25, Y+10	; 0x0a
     aea:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     aee:	82 2f       	mov	r24, r18
     af0:	80 5d       	subi	r24, 0xD0	; 208
     af2:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
     af6:	eb ca       	rjmp	.-2602   	; 0xce <main+0x3c>
				} 
				else if(result >= 10000000 && result <= 100000000)
     af8:	e9 81       	ldd	r30, Y+1	; 0x01
     afa:	e0 58       	subi	r30, 0x80	; 128
     afc:	93 2d       	mov	r25, r3
     afe:	b9 81       	ldd	r27, Y+1	; 0x01
     b00:	eb 17       	cp	r30, r27
     b02:	08 f0       	brcs	.+2      	; 0xb06 <__stack+0x2a7>
     b04:	99 2d       	mov	r25, r9
     b06:	8a 81       	ldd	r24, Y+2	; 0x02
     b08:	87 59       	subi	r24, 0x97	; 151
     b0a:	23 2d       	mov	r18, r3
     b0c:	fa 81       	ldd	r31, Y+2	; 0x02
     b0e:	8f 17       	cp	r24, r31
     b10:	08 f0       	brcs	.+2      	; 0xb14 <__stack+0x2b5>
     b12:	29 2d       	mov	r18, r9
     b14:	98 0f       	add	r25, r24
     b16:	33 2d       	mov	r19, r3
     b18:	98 17       	cp	r25, r24
     b1a:	08 f0       	brcs	.+2      	; 0xb1e <__stack+0x2bf>
     b1c:	39 2d       	mov	r19, r9
     b1e:	23 2b       	or	r18, r19
     b20:	89 2f       	mov	r24, r25
     b22:	9b 81       	ldd	r25, Y+3	; 0x03
     b24:	99 59       	subi	r25, 0x99	; 153
     b26:	33 2d       	mov	r19, r3
     b28:	ab 80       	ldd	r10, Y+3	; 0x03
     b2a:	9a 15       	cp	r25, r10
     b2c:	08 f0       	brcs	.+2      	; 0xb30 <__stack+0x2d1>
     b2e:	39 2d       	mov	r19, r9
     b30:	29 0f       	add	r18, r25
     b32:	43 2d       	mov	r20, r3
     b34:	29 17       	cp	r18, r25
     b36:	08 f0       	brcs	.+2      	; 0xb3a <__stack+0x2db>
     b38:	49 2d       	mov	r20, r9
     b3a:	34 2b       	or	r19, r20
     b3c:	92 2f       	mov	r25, r18
     b3e:	2c 81       	ldd	r18, Y+4	; 0x04
     b40:	21 50       	subi	r18, 0x01	; 1
     b42:	43 2d       	mov	r20, r3
     b44:	bc 80       	ldd	r11, Y+4	; 0x04
     b46:	2b 15       	cp	r18, r11
     b48:	08 f0       	brcs	.+2      	; 0xb4c <__stack+0x2ed>
     b4a:	49 2d       	mov	r20, r9
     b4c:	32 0f       	add	r19, r18
     b4e:	53 2d       	mov	r21, r3
     b50:	32 17       	cp	r19, r18
     b52:	08 f0       	brcs	.+2      	; 0xb56 <__stack+0x2f7>
     b54:	59 2d       	mov	r21, r9
     b56:	45 2b       	or	r20, r21
     b58:	23 2f       	mov	r18, r19
     b5a:	3d 81       	ldd	r19, Y+5	; 0x05
     b5c:	31 50       	subi	r19, 0x01	; 1
     b5e:	53 2d       	mov	r21, r3
     b60:	cd 80       	ldd	r12, Y+5	; 0x05
     b62:	3c 15       	cp	r19, r12
     b64:	08 f0       	brcs	.+2      	; 0xb68 <__stack+0x309>
     b66:	59 2d       	mov	r21, r9
     b68:	43 0f       	add	r20, r19
     b6a:	63 2d       	mov	r22, r3
     b6c:	43 17       	cp	r20, r19
     b6e:	08 f0       	brcs	.+2      	; 0xb72 <__stack+0x313>
     b70:	69 2d       	mov	r22, r9
     b72:	56 2b       	or	r21, r22
     b74:	34 2f       	mov	r19, r20
     b76:	4e 81       	ldd	r20, Y+6	; 0x06
     b78:	41 50       	subi	r20, 0x01	; 1
     b7a:	63 2d       	mov	r22, r3
     b7c:	de 80       	ldd	r13, Y+6	; 0x06
     b7e:	4d 15       	cp	r20, r13
     b80:	08 f0       	brcs	.+2      	; 0xb84 <__stack+0x325>
     b82:	69 2d       	mov	r22, r9
     b84:	54 0f       	add	r21, r20
     b86:	73 2d       	mov	r23, r3
     b88:	54 17       	cp	r21, r20
     b8a:	08 f0       	brcs	.+2      	; 0xb8e <__stack+0x32f>
     b8c:	79 2d       	mov	r23, r9
     b8e:	67 2b       	or	r22, r23
     b90:	45 2f       	mov	r20, r21
     b92:	5f 81       	ldd	r21, Y+7	; 0x07
     b94:	51 50       	subi	r21, 0x01	; 1
     b96:	73 2d       	mov	r23, r3
     b98:	ef 80       	ldd	r14, Y+7	; 0x07
     b9a:	5e 15       	cp	r21, r14
     b9c:	08 f0       	brcs	.+2      	; 0xba0 <__stack+0x341>
     b9e:	79 2d       	mov	r23, r9
     ba0:	65 0f       	add	r22, r21
     ba2:	f3 2d       	mov	r31, r3
     ba4:	65 17       	cp	r22, r21
     ba6:	08 f0       	brcs	.+2      	; 0xbaa <__stack+0x34b>
     ba8:	f9 2d       	mov	r31, r9
     baa:	7f 2b       	or	r23, r31
     bac:	56 2f       	mov	r21, r22
     bae:	68 85       	ldd	r22, Y+8	; 0x08
     bb0:	61 50       	subi	r22, 0x01	; 1
     bb2:	67 0f       	add	r22, r23
     bb4:	09 f0       	breq	.+2      	; 0xbb8 <__stack+0x359>
     bb6:	20 c1       	rjmp	.+576    	; 0xdf8 <__stack+0x599>
     bb8:	66 23       	and	r22, r22
     bba:	09 f5       	brne	.+66     	; 0xbfe <__stack+0x39f>
     bbc:	55 23       	and	r21, r21
     bbe:	09 f0       	breq	.+2      	; 0xbc2 <__stack+0x363>
     bc0:	1b c1       	rjmp	.+566    	; 0xdf8 <__stack+0x599>
     bc2:	55 23       	and	r21, r21
     bc4:	e1 f4       	brne	.+56     	; 0xbfe <__stack+0x39f>
     bc6:	44 23       	and	r20, r20
     bc8:	09 f0       	breq	.+2      	; 0xbcc <__stack+0x36d>
     bca:	16 c1       	rjmp	.+556    	; 0xdf8 <__stack+0x599>
     bcc:	44 23       	and	r20, r20
     bce:	b9 f4       	brne	.+46     	; 0xbfe <__stack+0x39f>
     bd0:	33 23       	and	r19, r19
     bd2:	09 f0       	breq	.+2      	; 0xbd6 <__stack+0x377>
     bd4:	11 c1       	rjmp	.+546    	; 0xdf8 <__stack+0x599>
     bd6:	33 23       	and	r19, r19
     bd8:	91 f4       	brne	.+36     	; 0xbfe <__stack+0x39f>
     bda:	26 30       	cpi	r18, 0x06	; 6
     bdc:	08 f0       	brcs	.+2      	; 0xbe0 <__stack+0x381>
     bde:	0c c1       	rjmp	.+536    	; 0xdf8 <__stack+0x599>
     be0:	25 30       	cpi	r18, 0x05	; 5
     be2:	69 f4       	brne	.+26     	; 0xbfe <__stack+0x39f>
     be4:	9e 35       	cpi	r25, 0x5E	; 94
     be6:	08 f0       	brcs	.+2      	; 0xbea <__stack+0x38b>
     be8:	07 c1       	rjmp	.+526    	; 0xdf8 <__stack+0x599>
     bea:	9d 35       	cpi	r25, 0x5D	; 93
     bec:	41 f4       	brne	.+16     	; 0xbfe <__stack+0x39f>
     bee:	8b 34       	cpi	r24, 0x4B	; 75
     bf0:	08 f0       	brcs	.+2      	; 0xbf4 <__stack+0x395>
     bf2:	02 c1       	rjmp	.+516    	; 0xdf8 <__stack+0x599>
     bf4:	8a 34       	cpi	r24, 0x4A	; 74
     bf6:	19 f4       	brne	.+6      	; 0xbfe <__stack+0x39f>
     bf8:	e1 38       	cpi	r30, 0x81	; 129
     bfa:	08 f0       	brcs	.+2      	; 0xbfe <__stack+0x39f>
     bfc:	fd c0       	rjmp	.+506    	; 0xdf8 <__stack+0x599>
				{
					LCD_vSendChar((result / 10000000) + 48);
     bfe:	29 81       	ldd	r18, Y+1	; 0x01
     c00:	3a 81       	ldd	r19, Y+2	; 0x02
     c02:	4b 81       	ldd	r20, Y+3	; 0x03
     c04:	5c 81       	ldd	r21, Y+4	; 0x04
     c06:	6d 81       	ldd	r22, Y+5	; 0x05
     c08:	7e 81       	ldd	r23, Y+6	; 0x06
     c0a:	8f 81       	ldd	r24, Y+7	; 0x07
     c0c:	98 85       	ldd	r25, Y+8	; 0x08
     c0e:	0f 2e       	mov	r0, r31
     c10:	f0 e8       	ldi	r31, 0x80	; 128
     c12:	af 2e       	mov	r10, r31
     c14:	f0 2d       	mov	r31, r0
     c16:	0f 2e       	mov	r0, r31
     c18:	f6 e9       	ldi	r31, 0x96	; 150
     c1a:	bf 2e       	mov	r11, r31
     c1c:	f0 2d       	mov	r31, r0
     c1e:	0f 2e       	mov	r0, r31
     c20:	f8 e9       	ldi	r31, 0x98	; 152
     c22:	cf 2e       	mov	r12, r31
     c24:	f0 2d       	mov	r31, r0
     c26:	d9 2c       	mov	r13, r9
     c28:	e9 2c       	mov	r14, r9
     c2a:	f9 2c       	mov	r15, r9
     c2c:	09 2d       	mov	r16, r9
     c2e:	19 2d       	mov	r17, r9
     c30:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     c34:	82 2f       	mov	r24, r18
     c36:	80 5d       	subi	r24, 0xD0	; 208
     c38:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 10000000) / 1000000) + 48);
     c3c:	29 81       	ldd	r18, Y+1	; 0x01
     c3e:	3a 81       	ldd	r19, Y+2	; 0x02
     c40:	4b 81       	ldd	r20, Y+3	; 0x03
     c42:	5c 81       	ldd	r21, Y+4	; 0x04
     c44:	6d 81       	ldd	r22, Y+5	; 0x05
     c46:	7e 81       	ldd	r23, Y+6	; 0x06
     c48:	8f 81       	ldd	r24, Y+7	; 0x07
     c4a:	98 85       	ldd	r25, Y+8	; 0x08
     c4c:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     c50:	2e 87       	std	Y+14, r18	; 0x0e
     c52:	3f 87       	std	Y+15, r19	; 0x0f
     c54:	74 2e       	mov	r7, r20
     c56:	65 2e       	mov	r6, r21
     c58:	56 2e       	mov	r5, r22
     c5a:	47 2e       	mov	r4, r23
     c5c:	89 87       	std	Y+9, r24	; 0x09
     c5e:	9a 87       	std	Y+10, r25	; 0x0a
     c60:	56 2d       	mov	r21, r6
     c62:	65 2d       	mov	r22, r5
     c64:	74 2d       	mov	r23, r4
     c66:	aa 24       	eor	r10, r10
     c68:	68 94       	set
     c6a:	a6 f8       	bld	r10, 6
     c6c:	0f 2e       	mov	r0, r31
     c6e:	f2 e4       	ldi	r31, 0x42	; 66
     c70:	bf 2e       	mov	r11, r31
     c72:	f0 2d       	mov	r31, r0
     c74:	0f 2e       	mov	r0, r31
     c76:	ff e0       	ldi	r31, 0x0F	; 15
     c78:	cf 2e       	mov	r12, r31
     c7a:	f0 2d       	mov	r31, r0
     c7c:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     c80:	82 2f       	mov	r24, r18
     c82:	80 5d       	subi	r24, 0xD0	; 208
     c84:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 10000000) % 1000000) / 100000) + 48);
     c88:	2e 85       	ldd	r18, Y+14	; 0x0e
     c8a:	3f 85       	ldd	r19, Y+15	; 0x0f
     c8c:	47 2d       	mov	r20, r7
     c8e:	56 2d       	mov	r21, r6
     c90:	65 2d       	mov	r22, r5
     c92:	74 2d       	mov	r23, r4
     c94:	89 85       	ldd	r24, Y+9	; 0x09
     c96:	9a 85       	ldd	r25, Y+10	; 0x0a
     c98:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     c9c:	2e 87       	std	Y+14, r18	; 0x0e
     c9e:	3f 87       	std	Y+15, r19	; 0x0f
     ca0:	74 2e       	mov	r7, r20
     ca2:	65 2e       	mov	r6, r21
     ca4:	56 2e       	mov	r5, r22
     ca6:	47 2e       	mov	r4, r23
     ca8:	89 87       	std	Y+9, r24	; 0x09
     caa:	9a 87       	std	Y+10, r25	; 0x0a
     cac:	56 2d       	mov	r21, r6
     cae:	65 2d       	mov	r22, r5
     cb0:	74 2d       	mov	r23, r4
     cb2:	0f 2e       	mov	r0, r31
     cb4:	f0 ea       	ldi	r31, 0xA0	; 160
     cb6:	af 2e       	mov	r10, r31
     cb8:	f0 2d       	mov	r31, r0
     cba:	0f 2e       	mov	r0, r31
     cbc:	f6 e8       	ldi	r31, 0x86	; 134
     cbe:	bf 2e       	mov	r11, r31
     cc0:	f0 2d       	mov	r31, r0
     cc2:	c3 2c       	mov	r12, r3
     cc4:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     cc8:	82 2f       	mov	r24, r18
     cca:	80 5d       	subi	r24, 0xD0	; 208
     ccc:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((result % 10000000) % 1000000) % 100000) / 10000) + 48);
     cd0:	2e 85       	ldd	r18, Y+14	; 0x0e
     cd2:	3f 85       	ldd	r19, Y+15	; 0x0f
     cd4:	47 2d       	mov	r20, r7
     cd6:	56 2d       	mov	r21, r6
     cd8:	65 2d       	mov	r22, r5
     cda:	74 2d       	mov	r23, r4
     cdc:	89 85       	ldd	r24, Y+9	; 0x09
     cde:	9a 85       	ldd	r25, Y+10	; 0x0a
     ce0:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     ce4:	2e 87       	std	Y+14, r18	; 0x0e
     ce6:	3f 87       	std	Y+15, r19	; 0x0f
     ce8:	74 2e       	mov	r7, r20
     cea:	65 2e       	mov	r6, r21
     cec:	56 2e       	mov	r5, r22
     cee:	47 2e       	mov	r4, r23
     cf0:	89 87       	std	Y+9, r24	; 0x09
     cf2:	9a 87       	std	Y+10, r25	; 0x0a
     cf4:	56 2d       	mov	r21, r6
     cf6:	65 2d       	mov	r22, r5
     cf8:	74 2d       	mov	r23, r4
     cfa:	aa 24       	eor	r10, r10
     cfc:	68 94       	set
     cfe:	a4 f8       	bld	r10, 4
     d00:	0f 2e       	mov	r0, r31
     d02:	f7 e2       	ldi	r31, 0x27	; 39
     d04:	bf 2e       	mov	r11, r31
     d06:	f0 2d       	mov	r31, r0
     d08:	c9 2c       	mov	r12, r9
     d0a:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     d0e:	82 2f       	mov	r24, r18
     d10:	80 5d       	subi	r24, 0xD0	; 208
     d12:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((result % 10000000) % 1000000) % 100000) % 10000) / 1000) + 48);
     d16:	2e 85       	ldd	r18, Y+14	; 0x0e
     d18:	3f 85       	ldd	r19, Y+15	; 0x0f
     d1a:	47 2d       	mov	r20, r7
     d1c:	56 2d       	mov	r21, r6
     d1e:	65 2d       	mov	r22, r5
     d20:	74 2d       	mov	r23, r4
     d22:	89 85       	ldd	r24, Y+9	; 0x09
     d24:	9a 85       	ldd	r25, Y+10	; 0x0a
     d26:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     d2a:	2e 87       	std	Y+14, r18	; 0x0e
     d2c:	3f 87       	std	Y+15, r19	; 0x0f
     d2e:	74 2e       	mov	r7, r20
     d30:	65 2e       	mov	r6, r21
     d32:	56 2e       	mov	r5, r22
     d34:	47 2e       	mov	r4, r23
     d36:	89 87       	std	Y+9, r24	; 0x09
     d38:	9a 87       	std	Y+10, r25	; 0x0a
     d3a:	56 2d       	mov	r21, r6
     d3c:	65 2d       	mov	r22, r5
     d3e:	74 2d       	mov	r23, r4
     d40:	0f 2e       	mov	r0, r31
     d42:	f8 ee       	ldi	r31, 0xE8	; 232
     d44:	af 2e       	mov	r10, r31
     d46:	f0 2d       	mov	r31, r0
     d48:	0f 2e       	mov	r0, r31
     d4a:	f3 e0       	ldi	r31, 0x03	; 3
     d4c:	bf 2e       	mov	r11, r31
     d4e:	f0 2d       	mov	r31, r0
     d50:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     d54:	82 2f       	mov	r24, r18
     d56:	80 5d       	subi	r24, 0xD0	; 208
     d58:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((result % 10000000) % 1000000) % 100000) % 10000) % 1000) / 100) + 48);
     d5c:	2e 85       	ldd	r18, Y+14	; 0x0e
     d5e:	3f 85       	ldd	r19, Y+15	; 0x0f
     d60:	47 2d       	mov	r20, r7
     d62:	56 2d       	mov	r21, r6
     d64:	65 2d       	mov	r22, r5
     d66:	74 2d       	mov	r23, r4
     d68:	89 85       	ldd	r24, Y+9	; 0x09
     d6a:	9a 85       	ldd	r25, Y+10	; 0x0a
     d6c:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     d70:	2e 87       	std	Y+14, r18	; 0x0e
     d72:	3f 87       	std	Y+15, r19	; 0x0f
     d74:	74 2e       	mov	r7, r20
     d76:	65 2e       	mov	r6, r21
     d78:	56 2e       	mov	r5, r22
     d7a:	47 2e       	mov	r4, r23
     d7c:	89 87       	std	Y+9, r24	; 0x09
     d7e:	9a 87       	std	Y+10, r25	; 0x0a
     d80:	56 2d       	mov	r21, r6
     d82:	65 2d       	mov	r22, r5
     d84:	74 2d       	mov	r23, r4
     d86:	0f 2e       	mov	r0, r31
     d88:	f4 e6       	ldi	r31, 0x64	; 100
     d8a:	af 2e       	mov	r10, r31
     d8c:	f0 2d       	mov	r31, r0
     d8e:	b9 2c       	mov	r11, r9
     d90:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     d94:	82 2f       	mov	r24, r18
     d96:	80 5d       	subi	r24, 0xD0	; 208
     d98:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((((result % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) / 10) + 48);
     d9c:	2e 85       	ldd	r18, Y+14	; 0x0e
     d9e:	3f 85       	ldd	r19, Y+15	; 0x0f
     da0:	47 2d       	mov	r20, r7
     da2:	56 2d       	mov	r21, r6
     da4:	65 2d       	mov	r22, r5
     da6:	74 2d       	mov	r23, r4
     da8:	89 85       	ldd	r24, Y+9	; 0x09
     daa:	9a 85       	ldd	r25, Y+10	; 0x0a
     dac:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     db0:	2e 87       	std	Y+14, r18	; 0x0e
     db2:	3f 87       	std	Y+15, r19	; 0x0f
     db4:	74 2e       	mov	r7, r20
     db6:	65 2e       	mov	r6, r21
     db8:	56 2e       	mov	r5, r22
     dba:	47 2e       	mov	r4, r23
     dbc:	89 87       	std	Y+9, r24	; 0x09
     dbe:	9a 87       	std	Y+10, r25	; 0x0a
     dc0:	56 2d       	mov	r21, r6
     dc2:	65 2d       	mov	r22, r5
     dc4:	74 2d       	mov	r23, r4
     dc6:	0f 2e       	mov	r0, r31
     dc8:	fa e0       	ldi	r31, 0x0A	; 10
     dca:	af 2e       	mov	r10, r31
     dcc:	f0 2d       	mov	r31, r0
     dce:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     dd2:	82 2f       	mov	r24, r18
     dd4:	80 5d       	subi	r24, 0xD0	; 208
     dd6:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((((result % 10000000) % 1000000) % 100000) % 10000) % 1000) % 100) % 10) + 48);
     dda:	2e 85       	ldd	r18, Y+14	; 0x0e
     ddc:	3f 85       	ldd	r19, Y+15	; 0x0f
     dde:	47 2d       	mov	r20, r7
     de0:	56 2d       	mov	r21, r6
     de2:	65 2d       	mov	r22, r5
     de4:	74 2d       	mov	r23, r4
     de6:	89 85       	ldd	r24, Y+9	; 0x09
     de8:	9a 85       	ldd	r25, Y+10	; 0x0a
     dea:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     dee:	82 2f       	mov	r24, r18
     df0:	80 5d       	subi	r24, 0xD0	; 208
     df2:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
     df6:	6b c9       	rjmp	.-3370   	; 0xce <main+0x3c>
				}
				else if(result >= 1000000 && result < 10000000)
     df8:	e9 81       	ldd	r30, Y+1	; 0x01
     dfa:	e0 54       	subi	r30, 0x40	; 64
     dfc:	93 2d       	mov	r25, r3
     dfe:	f9 80       	ldd	r15, Y+1	; 0x01
     e00:	ef 15       	cp	r30, r15
     e02:	08 f0       	brcs	.+2      	; 0xe06 <__stack+0x5a7>
     e04:	99 2d       	mov	r25, r9
     e06:	8a 81       	ldd	r24, Y+2	; 0x02
     e08:	83 54       	subi	r24, 0x43	; 67
     e0a:	23 2d       	mov	r18, r3
     e0c:	0a 81       	ldd	r16, Y+2	; 0x02
     e0e:	80 17       	cp	r24, r16
     e10:	08 f0       	brcs	.+2      	; 0xe14 <__stack+0x5b5>
     e12:	29 2d       	mov	r18, r9
     e14:	98 0f       	add	r25, r24
     e16:	33 2d       	mov	r19, r3
     e18:	98 17       	cp	r25, r24
     e1a:	08 f0       	brcs	.+2      	; 0xe1e <__stack+0x5bf>
     e1c:	39 2d       	mov	r19, r9
     e1e:	23 2b       	or	r18, r19
     e20:	89 2f       	mov	r24, r25
     e22:	9b 81       	ldd	r25, Y+3	; 0x03
     e24:	90 51       	subi	r25, 0x10	; 16
     e26:	33 2d       	mov	r19, r3
     e28:	1b 81       	ldd	r17, Y+3	; 0x03
     e2a:	91 17       	cp	r25, r17
     e2c:	08 f0       	brcs	.+2      	; 0xe30 <__stack+0x5d1>
     e2e:	39 2d       	mov	r19, r9
     e30:	29 0f       	add	r18, r25
     e32:	43 2d       	mov	r20, r3
     e34:	29 17       	cp	r18, r25
     e36:	08 f0       	brcs	.+2      	; 0xe3a <__stack+0x5db>
     e38:	49 2d       	mov	r20, r9
     e3a:	34 2b       	or	r19, r20
     e3c:	92 2f       	mov	r25, r18
     e3e:	2c 81       	ldd	r18, Y+4	; 0x04
     e40:	21 50       	subi	r18, 0x01	; 1
     e42:	43 2d       	mov	r20, r3
     e44:	5c 81       	ldd	r21, Y+4	; 0x04
     e46:	25 17       	cp	r18, r21
     e48:	08 f0       	brcs	.+2      	; 0xe4c <__stack+0x5ed>
     e4a:	49 2d       	mov	r20, r9
     e4c:	32 0f       	add	r19, r18
     e4e:	53 2d       	mov	r21, r3
     e50:	32 17       	cp	r19, r18
     e52:	08 f0       	brcs	.+2      	; 0xe56 <__stack+0x5f7>
     e54:	59 2d       	mov	r21, r9
     e56:	45 2b       	or	r20, r21
     e58:	23 2f       	mov	r18, r19
     e5a:	3d 81       	ldd	r19, Y+5	; 0x05
     e5c:	31 50       	subi	r19, 0x01	; 1
     e5e:	53 2d       	mov	r21, r3
     e60:	6d 81       	ldd	r22, Y+5	; 0x05
     e62:	36 17       	cp	r19, r22
     e64:	08 f0       	brcs	.+2      	; 0xe68 <__stack+0x609>
     e66:	59 2d       	mov	r21, r9
     e68:	43 0f       	add	r20, r19
     e6a:	63 2d       	mov	r22, r3
     e6c:	43 17       	cp	r20, r19
     e6e:	08 f0       	brcs	.+2      	; 0xe72 <__stack+0x613>
     e70:	69 2d       	mov	r22, r9
     e72:	56 2b       	or	r21, r22
     e74:	34 2f       	mov	r19, r20
     e76:	4e 81       	ldd	r20, Y+6	; 0x06
     e78:	41 50       	subi	r20, 0x01	; 1
     e7a:	63 2d       	mov	r22, r3
     e7c:	7e 81       	ldd	r23, Y+6	; 0x06
     e7e:	47 17       	cp	r20, r23
     e80:	08 f0       	brcs	.+2      	; 0xe84 <__stack+0x625>
     e82:	69 2d       	mov	r22, r9
     e84:	54 0f       	add	r21, r20
     e86:	73 2d       	mov	r23, r3
     e88:	54 17       	cp	r21, r20
     e8a:	08 f0       	brcs	.+2      	; 0xe8e <__stack+0x62f>
     e8c:	79 2d       	mov	r23, r9
     e8e:	67 2b       	or	r22, r23
     e90:	45 2f       	mov	r20, r21
     e92:	5f 81       	ldd	r21, Y+7	; 0x07
     e94:	51 50       	subi	r21, 0x01	; 1
     e96:	73 2d       	mov	r23, r3
     e98:	af 81       	ldd	r26, Y+7	; 0x07
     e9a:	5a 17       	cp	r21, r26
     e9c:	08 f0       	brcs	.+2      	; 0xea0 <__stack+0x641>
     e9e:	79 2d       	mov	r23, r9
     ea0:	65 0f       	add	r22, r21
     ea2:	f3 2d       	mov	r31, r3
     ea4:	65 17       	cp	r22, r21
     ea6:	08 f0       	brcs	.+2      	; 0xeaa <__stack+0x64b>
     ea8:	f9 2d       	mov	r31, r9
     eaa:	7f 2b       	or	r23, r31
     eac:	56 2f       	mov	r21, r22
     eae:	68 85       	ldd	r22, Y+8	; 0x08
     eb0:	61 50       	subi	r22, 0x01	; 1
     eb2:	67 0f       	add	r22, r23
     eb4:	09 f0       	breq	.+2      	; 0xeb8 <__stack+0x659>
     eb6:	f9 c0       	rjmp	.+498    	; 0x10aa <__stack+0x84b>
     eb8:	66 23       	and	r22, r22
     eba:	09 f5       	brne	.+66     	; 0xefe <__stack+0x69f>
     ebc:	55 23       	and	r21, r21
     ebe:	09 f0       	breq	.+2      	; 0xec2 <__stack+0x663>
     ec0:	f4 c0       	rjmp	.+488    	; 0x10aa <__stack+0x84b>
     ec2:	55 23       	and	r21, r21
     ec4:	e1 f4       	brne	.+56     	; 0xefe <__stack+0x69f>
     ec6:	44 23       	and	r20, r20
     ec8:	09 f0       	breq	.+2      	; 0xecc <__stack+0x66d>
     eca:	ef c0       	rjmp	.+478    	; 0x10aa <__stack+0x84b>
     ecc:	44 23       	and	r20, r20
     ece:	b9 f4       	brne	.+46     	; 0xefe <__stack+0x69f>
     ed0:	33 23       	and	r19, r19
     ed2:	09 f0       	breq	.+2      	; 0xed6 <__stack+0x677>
     ed4:	ea c0       	rjmp	.+468    	; 0x10aa <__stack+0x84b>
     ed6:	33 23       	and	r19, r19
     ed8:	91 f4       	brne	.+36     	; 0xefe <__stack+0x69f>
     eda:	22 23       	and	r18, r18
     edc:	09 f0       	breq	.+2      	; 0xee0 <__stack+0x681>
     ede:	e5 c0       	rjmp	.+458    	; 0x10aa <__stack+0x84b>
     ee0:	22 23       	and	r18, r18
     ee2:	69 f4       	brne	.+26     	; 0xefe <__stack+0x69f>
     ee4:	9a 38       	cpi	r25, 0x8A	; 138
     ee6:	08 f0       	brcs	.+2      	; 0xeea <__stack+0x68b>
     ee8:	e0 c0       	rjmp	.+448    	; 0x10aa <__stack+0x84b>
     eea:	99 38       	cpi	r25, 0x89	; 137
     eec:	41 f4       	brne	.+16     	; 0xefe <__stack+0x69f>
     eee:	85 35       	cpi	r24, 0x55	; 85
     ef0:	08 f0       	brcs	.+2      	; 0xef4 <__stack+0x695>
     ef2:	db c0       	rjmp	.+438    	; 0x10aa <__stack+0x84b>
     ef4:	84 35       	cpi	r24, 0x54	; 84
     ef6:	19 f4       	brne	.+6      	; 0xefe <__stack+0x69f>
     ef8:	e0 34       	cpi	r30, 0x40	; 64
     efa:	08 f0       	brcs	.+2      	; 0xefe <__stack+0x69f>
     efc:	d6 c0       	rjmp	.+428    	; 0x10aa <__stack+0x84b>
				{
					LCD_vSendChar((result / 1000000) + 48);
     efe:	29 81       	ldd	r18, Y+1	; 0x01
     f00:	3a 81       	ldd	r19, Y+2	; 0x02
     f02:	4b 81       	ldd	r20, Y+3	; 0x03
     f04:	5c 81       	ldd	r21, Y+4	; 0x04
     f06:	6d 81       	ldd	r22, Y+5	; 0x05
     f08:	7e 81       	ldd	r23, Y+6	; 0x06
     f0a:	8f 81       	ldd	r24, Y+7	; 0x07
     f0c:	98 85       	ldd	r25, Y+8	; 0x08
     f0e:	aa 24       	eor	r10, r10
     f10:	68 94       	set
     f12:	a6 f8       	bld	r10, 6
     f14:	0f 2e       	mov	r0, r31
     f16:	f2 e4       	ldi	r31, 0x42	; 66
     f18:	bf 2e       	mov	r11, r31
     f1a:	f0 2d       	mov	r31, r0
     f1c:	0f 2e       	mov	r0, r31
     f1e:	ff e0       	ldi	r31, 0x0F	; 15
     f20:	cf 2e       	mov	r12, r31
     f22:	f0 2d       	mov	r31, r0
     f24:	d9 2c       	mov	r13, r9
     f26:	e9 2c       	mov	r14, r9
     f28:	f9 2c       	mov	r15, r9
     f2a:	09 2d       	mov	r16, r9
     f2c:	19 2d       	mov	r17, r9
     f2e:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     f32:	82 2f       	mov	r24, r18
     f34:	80 5d       	subi	r24, 0xD0	; 208
     f36:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 1000000) / 100000) + 48);
     f3a:	29 81       	ldd	r18, Y+1	; 0x01
     f3c:	3a 81       	ldd	r19, Y+2	; 0x02
     f3e:	4b 81       	ldd	r20, Y+3	; 0x03
     f40:	5c 81       	ldd	r21, Y+4	; 0x04
     f42:	6d 81       	ldd	r22, Y+5	; 0x05
     f44:	7e 81       	ldd	r23, Y+6	; 0x06
     f46:	8f 81       	ldd	r24, Y+7	; 0x07
     f48:	98 85       	ldd	r25, Y+8	; 0x08
     f4a:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     f4e:	2e 87       	std	Y+14, r18	; 0x0e
     f50:	3f 87       	std	Y+15, r19	; 0x0f
     f52:	74 2e       	mov	r7, r20
     f54:	65 2e       	mov	r6, r21
     f56:	56 2e       	mov	r5, r22
     f58:	47 2e       	mov	r4, r23
     f5a:	89 87       	std	Y+9, r24	; 0x09
     f5c:	9a 87       	std	Y+10, r25	; 0x0a
     f5e:	56 2d       	mov	r21, r6
     f60:	65 2d       	mov	r22, r5
     f62:	74 2d       	mov	r23, r4
     f64:	0f 2e       	mov	r0, r31
     f66:	f0 ea       	ldi	r31, 0xA0	; 160
     f68:	af 2e       	mov	r10, r31
     f6a:	f0 2d       	mov	r31, r0
     f6c:	0f 2e       	mov	r0, r31
     f6e:	f6 e8       	ldi	r31, 0x86	; 134
     f70:	bf 2e       	mov	r11, r31
     f72:	f0 2d       	mov	r31, r0
     f74:	c3 2c       	mov	r12, r3
     f76:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     f7a:	82 2f       	mov	r24, r18
     f7c:	80 5d       	subi	r24, 0xD0	; 208
     f7e:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 1000000) % 100000) / 10000) + 48);
     f82:	2e 85       	ldd	r18, Y+14	; 0x0e
     f84:	3f 85       	ldd	r19, Y+15	; 0x0f
     f86:	47 2d       	mov	r20, r7
     f88:	56 2d       	mov	r21, r6
     f8a:	65 2d       	mov	r22, r5
     f8c:	74 2d       	mov	r23, r4
     f8e:	89 85       	ldd	r24, Y+9	; 0x09
     f90:	9a 85       	ldd	r25, Y+10	; 0x0a
     f92:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     f96:	2e 87       	std	Y+14, r18	; 0x0e
     f98:	3f 87       	std	Y+15, r19	; 0x0f
     f9a:	74 2e       	mov	r7, r20
     f9c:	65 2e       	mov	r6, r21
     f9e:	56 2e       	mov	r5, r22
     fa0:	47 2e       	mov	r4, r23
     fa2:	89 87       	std	Y+9, r24	; 0x09
     fa4:	9a 87       	std	Y+10, r25	; 0x0a
     fa6:	56 2d       	mov	r21, r6
     fa8:	65 2d       	mov	r22, r5
     faa:	74 2d       	mov	r23, r4
     fac:	aa 24       	eor	r10, r10
     fae:	68 94       	set
     fb0:	a4 f8       	bld	r10, 4
     fb2:	0f 2e       	mov	r0, r31
     fb4:	f7 e2       	ldi	r31, 0x27	; 39
     fb6:	bf 2e       	mov	r11, r31
     fb8:	f0 2d       	mov	r31, r0
     fba:	c9 2c       	mov	r12, r9
     fbc:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
     fc0:	82 2f       	mov	r24, r18
     fc2:	80 5d       	subi	r24, 0xD0	; 208
     fc4:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((result % 1000000) % 100000) % 10000) / 1000) + 48);
     fc8:	2e 85       	ldd	r18, Y+14	; 0x0e
     fca:	3f 85       	ldd	r19, Y+15	; 0x0f
     fcc:	47 2d       	mov	r20, r7
     fce:	56 2d       	mov	r21, r6
     fd0:	65 2d       	mov	r22, r5
     fd2:	74 2d       	mov	r23, r4
     fd4:	89 85       	ldd	r24, Y+9	; 0x09
     fd6:	9a 85       	ldd	r25, Y+10	; 0x0a
     fd8:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
     fdc:	2e 87       	std	Y+14, r18	; 0x0e
     fde:	3f 87       	std	Y+15, r19	; 0x0f
     fe0:	74 2e       	mov	r7, r20
     fe2:	65 2e       	mov	r6, r21
     fe4:	56 2e       	mov	r5, r22
     fe6:	47 2e       	mov	r4, r23
     fe8:	89 87       	std	Y+9, r24	; 0x09
     fea:	9a 87       	std	Y+10, r25	; 0x0a
     fec:	56 2d       	mov	r21, r6
     fee:	65 2d       	mov	r22, r5
     ff0:	74 2d       	mov	r23, r4
     ff2:	0f 2e       	mov	r0, r31
     ff4:	f8 ee       	ldi	r31, 0xE8	; 232
     ff6:	af 2e       	mov	r10, r31
     ff8:	f0 2d       	mov	r31, r0
     ffa:	0f 2e       	mov	r0, r31
     ffc:	f3 e0       	ldi	r31, 0x03	; 3
     ffe:	bf 2e       	mov	r11, r31
    1000:	f0 2d       	mov	r31, r0
    1002:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    1006:	82 2f       	mov	r24, r18
    1008:	80 5d       	subi	r24, 0xD0	; 208
    100a:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((result % 1000000) % 100000) % 10000) % 1000) / 100) + 48);
    100e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1010:	3f 85       	ldd	r19, Y+15	; 0x0f
    1012:	47 2d       	mov	r20, r7
    1014:	56 2d       	mov	r21, r6
    1016:	65 2d       	mov	r22, r5
    1018:	74 2d       	mov	r23, r4
    101a:	89 85       	ldd	r24, Y+9	; 0x09
    101c:	9a 85       	ldd	r25, Y+10	; 0x0a
    101e:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1022:	2e 87       	std	Y+14, r18	; 0x0e
    1024:	3f 87       	std	Y+15, r19	; 0x0f
    1026:	74 2e       	mov	r7, r20
    1028:	65 2e       	mov	r6, r21
    102a:	56 2e       	mov	r5, r22
    102c:	47 2e       	mov	r4, r23
    102e:	89 87       	std	Y+9, r24	; 0x09
    1030:	9a 87       	std	Y+10, r25	; 0x0a
    1032:	56 2d       	mov	r21, r6
    1034:	65 2d       	mov	r22, r5
    1036:	74 2d       	mov	r23, r4
    1038:	0f 2e       	mov	r0, r31
    103a:	f4 e6       	ldi	r31, 0x64	; 100
    103c:	af 2e       	mov	r10, r31
    103e:	f0 2d       	mov	r31, r0
    1040:	b9 2c       	mov	r11, r9
    1042:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    1046:	82 2f       	mov	r24, r18
    1048:	80 5d       	subi	r24, 0xD0	; 208
    104a:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((result % 1000000) % 100000) % 10000) % 1000) % 100) / 10) + 48);
    104e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1050:	3f 85       	ldd	r19, Y+15	; 0x0f
    1052:	47 2d       	mov	r20, r7
    1054:	56 2d       	mov	r21, r6
    1056:	65 2d       	mov	r22, r5
    1058:	74 2d       	mov	r23, r4
    105a:	89 85       	ldd	r24, Y+9	; 0x09
    105c:	9a 85       	ldd	r25, Y+10	; 0x0a
    105e:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1062:	2e 87       	std	Y+14, r18	; 0x0e
    1064:	3f 87       	std	Y+15, r19	; 0x0f
    1066:	74 2e       	mov	r7, r20
    1068:	65 2e       	mov	r6, r21
    106a:	56 2e       	mov	r5, r22
    106c:	47 2e       	mov	r4, r23
    106e:	89 87       	std	Y+9, r24	; 0x09
    1070:	9a 87       	std	Y+10, r25	; 0x0a
    1072:	56 2d       	mov	r21, r6
    1074:	65 2d       	mov	r22, r5
    1076:	74 2d       	mov	r23, r4
    1078:	0f 2e       	mov	r0, r31
    107a:	fa e0       	ldi	r31, 0x0A	; 10
    107c:	af 2e       	mov	r10, r31
    107e:	f0 2d       	mov	r31, r0
    1080:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    1084:	82 2f       	mov	r24, r18
    1086:	80 5d       	subi	r24, 0xD0	; 208
    1088:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((((result % 1000000) % 100000) % 10000) % 1000) % 100) % 10) + 48);
    108c:	2e 85       	ldd	r18, Y+14	; 0x0e
    108e:	3f 85       	ldd	r19, Y+15	; 0x0f
    1090:	47 2d       	mov	r20, r7
    1092:	56 2d       	mov	r21, r6
    1094:	65 2d       	mov	r22, r5
    1096:	74 2d       	mov	r23, r4
    1098:	89 85       	ldd	r24, Y+9	; 0x09
    109a:	9a 85       	ldd	r25, Y+10	; 0x0a
    109c:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    10a0:	82 2f       	mov	r24, r18
    10a2:	80 5d       	subi	r24, 0xD0	; 208
    10a4:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
    10a8:	12 c8       	rjmp	.-4060   	; 0xce <main+0x3c>
				}
				else if(result >= 100000 && result < 1000000)
    10aa:	e9 81       	ldd	r30, Y+1	; 0x01
    10ac:	e0 5a       	subi	r30, 0xA0	; 160
    10ae:	93 2d       	mov	r25, r3
    10b0:	b9 81       	ldd	r27, Y+1	; 0x01
    10b2:	eb 17       	cp	r30, r27
    10b4:	08 f0       	brcs	.+2      	; 0x10b8 <__stack+0x859>
    10b6:	99 2d       	mov	r25, r9
    10b8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ba:	87 58       	subi	r24, 0x87	; 135
    10bc:	23 2d       	mov	r18, r3
    10be:	fa 81       	ldd	r31, Y+2	; 0x02
    10c0:	8f 17       	cp	r24, r31
    10c2:	08 f0       	brcs	.+2      	; 0x10c6 <__stack+0x867>
    10c4:	29 2d       	mov	r18, r9
    10c6:	98 0f       	add	r25, r24
    10c8:	33 2d       	mov	r19, r3
    10ca:	98 17       	cp	r25, r24
    10cc:	08 f0       	brcs	.+2      	; 0x10d0 <__stack+0x871>
    10ce:	39 2d       	mov	r19, r9
    10d0:	23 2b       	or	r18, r19
    10d2:	89 2f       	mov	r24, r25
    10d4:	9b 81       	ldd	r25, Y+3	; 0x03
    10d6:	92 50       	subi	r25, 0x02	; 2
    10d8:	33 2d       	mov	r19, r3
    10da:	ab 80       	ldd	r10, Y+3	; 0x03
    10dc:	9a 15       	cp	r25, r10
    10de:	08 f0       	brcs	.+2      	; 0x10e2 <__stack+0x883>
    10e0:	39 2d       	mov	r19, r9
    10e2:	29 0f       	add	r18, r25
    10e4:	43 2d       	mov	r20, r3
    10e6:	29 17       	cp	r18, r25
    10e8:	08 f0       	brcs	.+2      	; 0x10ec <__stack+0x88d>
    10ea:	49 2d       	mov	r20, r9
    10ec:	34 2b       	or	r19, r20
    10ee:	92 2f       	mov	r25, r18
    10f0:	2c 81       	ldd	r18, Y+4	; 0x04
    10f2:	21 50       	subi	r18, 0x01	; 1
    10f4:	43 2d       	mov	r20, r3
    10f6:	bc 80       	ldd	r11, Y+4	; 0x04
    10f8:	2b 15       	cp	r18, r11
    10fa:	08 f0       	brcs	.+2      	; 0x10fe <__stack+0x89f>
    10fc:	49 2d       	mov	r20, r9
    10fe:	32 0f       	add	r19, r18
    1100:	53 2d       	mov	r21, r3
    1102:	32 17       	cp	r19, r18
    1104:	08 f0       	brcs	.+2      	; 0x1108 <__stack+0x8a9>
    1106:	59 2d       	mov	r21, r9
    1108:	45 2b       	or	r20, r21
    110a:	23 2f       	mov	r18, r19
    110c:	3d 81       	ldd	r19, Y+5	; 0x05
    110e:	31 50       	subi	r19, 0x01	; 1
    1110:	53 2d       	mov	r21, r3
    1112:	cd 80       	ldd	r12, Y+5	; 0x05
    1114:	3c 15       	cp	r19, r12
    1116:	08 f0       	brcs	.+2      	; 0x111a <__stack+0x8bb>
    1118:	59 2d       	mov	r21, r9
    111a:	43 0f       	add	r20, r19
    111c:	63 2d       	mov	r22, r3
    111e:	43 17       	cp	r20, r19
    1120:	08 f0       	brcs	.+2      	; 0x1124 <__stack+0x8c5>
    1122:	69 2d       	mov	r22, r9
    1124:	56 2b       	or	r21, r22
    1126:	34 2f       	mov	r19, r20
    1128:	4e 81       	ldd	r20, Y+6	; 0x06
    112a:	41 50       	subi	r20, 0x01	; 1
    112c:	63 2d       	mov	r22, r3
    112e:	de 80       	ldd	r13, Y+6	; 0x06
    1130:	4d 15       	cp	r20, r13
    1132:	08 f0       	brcs	.+2      	; 0x1136 <__stack+0x8d7>
    1134:	69 2d       	mov	r22, r9
    1136:	54 0f       	add	r21, r20
    1138:	73 2d       	mov	r23, r3
    113a:	54 17       	cp	r21, r20
    113c:	08 f0       	brcs	.+2      	; 0x1140 <__stack+0x8e1>
    113e:	79 2d       	mov	r23, r9
    1140:	67 2b       	or	r22, r23
    1142:	45 2f       	mov	r20, r21
    1144:	5f 81       	ldd	r21, Y+7	; 0x07
    1146:	51 50       	subi	r21, 0x01	; 1
    1148:	73 2d       	mov	r23, r3
    114a:	ef 80       	ldd	r14, Y+7	; 0x07
    114c:	5e 15       	cp	r21, r14
    114e:	08 f0       	brcs	.+2      	; 0x1152 <__stack+0x8f3>
    1150:	79 2d       	mov	r23, r9
    1152:	65 0f       	add	r22, r21
    1154:	f3 2d       	mov	r31, r3
    1156:	65 17       	cp	r22, r21
    1158:	08 f0       	brcs	.+2      	; 0x115c <__stack+0x8fd>
    115a:	f9 2d       	mov	r31, r9
    115c:	7f 2b       	or	r23, r31
    115e:	56 2f       	mov	r21, r22
    1160:	68 85       	ldd	r22, Y+8	; 0x08
    1162:	61 50       	subi	r22, 0x01	; 1
    1164:	67 0f       	add	r22, r23
    1166:	09 f0       	breq	.+2      	; 0x116a <__stack+0x90b>
    1168:	d4 c0       	rjmp	.+424    	; 0x1312 <__stack+0xab3>
    116a:	66 23       	and	r22, r22
    116c:	09 f5       	brne	.+66     	; 0x11b0 <__stack+0x951>
    116e:	55 23       	and	r21, r21
    1170:	09 f0       	breq	.+2      	; 0x1174 <__stack+0x915>
    1172:	cf c0       	rjmp	.+414    	; 0x1312 <__stack+0xab3>
    1174:	55 23       	and	r21, r21
    1176:	e1 f4       	brne	.+56     	; 0x11b0 <__stack+0x951>
    1178:	44 23       	and	r20, r20
    117a:	09 f0       	breq	.+2      	; 0x117e <__stack+0x91f>
    117c:	ca c0       	rjmp	.+404    	; 0x1312 <__stack+0xab3>
    117e:	44 23       	and	r20, r20
    1180:	b9 f4       	brne	.+46     	; 0x11b0 <__stack+0x951>
    1182:	33 23       	and	r19, r19
    1184:	09 f0       	breq	.+2      	; 0x1188 <__stack+0x929>
    1186:	c5 c0       	rjmp	.+394    	; 0x1312 <__stack+0xab3>
    1188:	33 23       	and	r19, r19
    118a:	91 f4       	brne	.+36     	; 0x11b0 <__stack+0x951>
    118c:	22 23       	and	r18, r18
    118e:	09 f0       	breq	.+2      	; 0x1192 <__stack+0x933>
    1190:	c0 c0       	rjmp	.+384    	; 0x1312 <__stack+0xab3>
    1192:	22 23       	and	r18, r18
    1194:	69 f4       	brne	.+26     	; 0x11b0 <__stack+0x951>
    1196:	9e 30       	cpi	r25, 0x0E	; 14
    1198:	08 f0       	brcs	.+2      	; 0x119c <__stack+0x93d>
    119a:	bb c0       	rjmp	.+374    	; 0x1312 <__stack+0xab3>
    119c:	9d 30       	cpi	r25, 0x0D	; 13
    119e:	41 f4       	brne	.+16     	; 0x11b0 <__stack+0x951>
    11a0:	8c 3b       	cpi	r24, 0xBC	; 188
    11a2:	08 f0       	brcs	.+2      	; 0x11a6 <__stack+0x947>
    11a4:	b6 c0       	rjmp	.+364    	; 0x1312 <__stack+0xab3>
    11a6:	8b 3b       	cpi	r24, 0xBB	; 187
    11a8:	19 f4       	brne	.+6      	; 0x11b0 <__stack+0x951>
    11aa:	e0 3a       	cpi	r30, 0xA0	; 160
    11ac:	08 f0       	brcs	.+2      	; 0x11b0 <__stack+0x951>
    11ae:	b1 c0       	rjmp	.+354    	; 0x1312 <__stack+0xab3>
				{
					LCD_vSendChar((result / 100000) + 48);
    11b0:	29 81       	ldd	r18, Y+1	; 0x01
    11b2:	3a 81       	ldd	r19, Y+2	; 0x02
    11b4:	4b 81       	ldd	r20, Y+3	; 0x03
    11b6:	5c 81       	ldd	r21, Y+4	; 0x04
    11b8:	6d 81       	ldd	r22, Y+5	; 0x05
    11ba:	7e 81       	ldd	r23, Y+6	; 0x06
    11bc:	8f 81       	ldd	r24, Y+7	; 0x07
    11be:	98 85       	ldd	r25, Y+8	; 0x08
    11c0:	0f 2e       	mov	r0, r31
    11c2:	f0 ea       	ldi	r31, 0xA0	; 160
    11c4:	af 2e       	mov	r10, r31
    11c6:	f0 2d       	mov	r31, r0
    11c8:	0f 2e       	mov	r0, r31
    11ca:	f6 e8       	ldi	r31, 0x86	; 134
    11cc:	bf 2e       	mov	r11, r31
    11ce:	f0 2d       	mov	r31, r0
    11d0:	c3 2c       	mov	r12, r3
    11d2:	d9 2c       	mov	r13, r9
    11d4:	e9 2c       	mov	r14, r9
    11d6:	f9 2c       	mov	r15, r9
    11d8:	09 2d       	mov	r16, r9
    11da:	19 2d       	mov	r17, r9
    11dc:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    11e0:	82 2f       	mov	r24, r18
    11e2:	80 5d       	subi	r24, 0xD0	; 208
    11e4:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 100000) / 10000) + 48);
    11e8:	29 81       	ldd	r18, Y+1	; 0x01
    11ea:	3a 81       	ldd	r19, Y+2	; 0x02
    11ec:	4b 81       	ldd	r20, Y+3	; 0x03
    11ee:	5c 81       	ldd	r21, Y+4	; 0x04
    11f0:	6d 81       	ldd	r22, Y+5	; 0x05
    11f2:	7e 81       	ldd	r23, Y+6	; 0x06
    11f4:	8f 81       	ldd	r24, Y+7	; 0x07
    11f6:	98 85       	ldd	r25, Y+8	; 0x08
    11f8:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    11fc:	2e 87       	std	Y+14, r18	; 0x0e
    11fe:	3f 87       	std	Y+15, r19	; 0x0f
    1200:	74 2e       	mov	r7, r20
    1202:	65 2e       	mov	r6, r21
    1204:	56 2e       	mov	r5, r22
    1206:	47 2e       	mov	r4, r23
    1208:	89 87       	std	Y+9, r24	; 0x09
    120a:	9a 87       	std	Y+10, r25	; 0x0a
    120c:	56 2d       	mov	r21, r6
    120e:	65 2d       	mov	r22, r5
    1210:	74 2d       	mov	r23, r4
    1212:	aa 24       	eor	r10, r10
    1214:	68 94       	set
    1216:	a4 f8       	bld	r10, 4
    1218:	0f 2e       	mov	r0, r31
    121a:	f7 e2       	ldi	r31, 0x27	; 39
    121c:	bf 2e       	mov	r11, r31
    121e:	f0 2d       	mov	r31, r0
    1220:	c9 2c       	mov	r12, r9
    1222:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    1226:	82 2f       	mov	r24, r18
    1228:	80 5d       	subi	r24, 0xD0	; 208
    122a:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 100000) % 10000) / 1000) + 48);
    122e:	2e 85       	ldd	r18, Y+14	; 0x0e
    1230:	3f 85       	ldd	r19, Y+15	; 0x0f
    1232:	47 2d       	mov	r20, r7
    1234:	56 2d       	mov	r21, r6
    1236:	65 2d       	mov	r22, r5
    1238:	74 2d       	mov	r23, r4
    123a:	89 85       	ldd	r24, Y+9	; 0x09
    123c:	9a 85       	ldd	r25, Y+10	; 0x0a
    123e:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1242:	2e 87       	std	Y+14, r18	; 0x0e
    1244:	3f 87       	std	Y+15, r19	; 0x0f
    1246:	74 2e       	mov	r7, r20
    1248:	65 2e       	mov	r6, r21
    124a:	56 2e       	mov	r5, r22
    124c:	47 2e       	mov	r4, r23
    124e:	89 87       	std	Y+9, r24	; 0x09
    1250:	9a 87       	std	Y+10, r25	; 0x0a
    1252:	56 2d       	mov	r21, r6
    1254:	65 2d       	mov	r22, r5
    1256:	74 2d       	mov	r23, r4
    1258:	0f 2e       	mov	r0, r31
    125a:	f8 ee       	ldi	r31, 0xE8	; 232
    125c:	af 2e       	mov	r10, r31
    125e:	f0 2d       	mov	r31, r0
    1260:	0f 2e       	mov	r0, r31
    1262:	f3 e0       	ldi	r31, 0x03	; 3
    1264:	bf 2e       	mov	r11, r31
    1266:	f0 2d       	mov	r31, r0
    1268:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    126c:	82 2f       	mov	r24, r18
    126e:	80 5d       	subi	r24, 0xD0	; 208
    1270:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((result % 100000) % 10000) % 1000) / 100) + 48);
    1274:	2e 85       	ldd	r18, Y+14	; 0x0e
    1276:	3f 85       	ldd	r19, Y+15	; 0x0f
    1278:	47 2d       	mov	r20, r7
    127a:	56 2d       	mov	r21, r6
    127c:	65 2d       	mov	r22, r5
    127e:	74 2d       	mov	r23, r4
    1280:	89 85       	ldd	r24, Y+9	; 0x09
    1282:	9a 85       	ldd	r25, Y+10	; 0x0a
    1284:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1288:	2e 87       	std	Y+14, r18	; 0x0e
    128a:	3f 87       	std	Y+15, r19	; 0x0f
    128c:	74 2e       	mov	r7, r20
    128e:	65 2e       	mov	r6, r21
    1290:	56 2e       	mov	r5, r22
    1292:	47 2e       	mov	r4, r23
    1294:	89 87       	std	Y+9, r24	; 0x09
    1296:	9a 87       	std	Y+10, r25	; 0x0a
    1298:	56 2d       	mov	r21, r6
    129a:	65 2d       	mov	r22, r5
    129c:	74 2d       	mov	r23, r4
    129e:	0f 2e       	mov	r0, r31
    12a0:	f4 e6       	ldi	r31, 0x64	; 100
    12a2:	af 2e       	mov	r10, r31
    12a4:	f0 2d       	mov	r31, r0
    12a6:	b9 2c       	mov	r11, r9
    12a8:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    12ac:	82 2f       	mov	r24, r18
    12ae:	80 5d       	subi	r24, 0xD0	; 208
    12b0:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((result % 100000) % 10000) % 1000) % 100) / 10) + 48);
    12b4:	2e 85       	ldd	r18, Y+14	; 0x0e
    12b6:	3f 85       	ldd	r19, Y+15	; 0x0f
    12b8:	47 2d       	mov	r20, r7
    12ba:	56 2d       	mov	r21, r6
    12bc:	65 2d       	mov	r22, r5
    12be:	74 2d       	mov	r23, r4
    12c0:	89 85       	ldd	r24, Y+9	; 0x09
    12c2:	9a 85       	ldd	r25, Y+10	; 0x0a
    12c4:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    12c8:	2e 87       	std	Y+14, r18	; 0x0e
    12ca:	3f 87       	std	Y+15, r19	; 0x0f
    12cc:	74 2e       	mov	r7, r20
    12ce:	65 2e       	mov	r6, r21
    12d0:	56 2e       	mov	r5, r22
    12d2:	47 2e       	mov	r4, r23
    12d4:	89 87       	std	Y+9, r24	; 0x09
    12d6:	9a 87       	std	Y+10, r25	; 0x0a
    12d8:	56 2d       	mov	r21, r6
    12da:	65 2d       	mov	r22, r5
    12dc:	74 2d       	mov	r23, r4
    12de:	0f 2e       	mov	r0, r31
    12e0:	fa e0       	ldi	r31, 0x0A	; 10
    12e2:	af 2e       	mov	r10, r31
    12e4:	f0 2d       	mov	r31, r0
    12e6:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    12ea:	82 2f       	mov	r24, r18
    12ec:	80 5d       	subi	r24, 0xD0	; 208
    12ee:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((((result % 100000) % 10000) % 1000) % 100) % 10) + 48);
    12f2:	2e 85       	ldd	r18, Y+14	; 0x0e
    12f4:	3f 85       	ldd	r19, Y+15	; 0x0f
    12f6:	47 2d       	mov	r20, r7
    12f8:	56 2d       	mov	r21, r6
    12fa:	65 2d       	mov	r22, r5
    12fc:	74 2d       	mov	r23, r4
    12fe:	89 85       	ldd	r24, Y+9	; 0x09
    1300:	9a 85       	ldd	r25, Y+10	; 0x0a
    1302:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1306:	82 2f       	mov	r24, r18
    1308:	80 5d       	subi	r24, 0xD0	; 208
    130a:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
    130e:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
				}
				else if(result >= 10000 && result < 100000 )
    1312:	e9 81       	ldd	r30, Y+1	; 0x01
    1314:	e0 51       	subi	r30, 0x10	; 16
    1316:	93 2d       	mov	r25, r3
    1318:	f9 80       	ldd	r15, Y+1	; 0x01
    131a:	ef 15       	cp	r30, r15
    131c:	08 f0       	brcs	.+2      	; 0x1320 <__stack+0xac1>
    131e:	99 2d       	mov	r25, r9
    1320:	8a 81       	ldd	r24, Y+2	; 0x02
    1322:	88 52       	subi	r24, 0x28	; 40
    1324:	23 2d       	mov	r18, r3
    1326:	0a 81       	ldd	r16, Y+2	; 0x02
    1328:	80 17       	cp	r24, r16
    132a:	08 f0       	brcs	.+2      	; 0x132e <__stack+0xacf>
    132c:	29 2d       	mov	r18, r9
    132e:	98 0f       	add	r25, r24
    1330:	33 2d       	mov	r19, r3
    1332:	98 17       	cp	r25, r24
    1334:	08 f0       	brcs	.+2      	; 0x1338 <__stack+0xad9>
    1336:	39 2d       	mov	r19, r9
    1338:	23 2b       	or	r18, r19
    133a:	89 2f       	mov	r24, r25
    133c:	9b 81       	ldd	r25, Y+3	; 0x03
    133e:	91 50       	subi	r25, 0x01	; 1
    1340:	33 2d       	mov	r19, r3
    1342:	1b 81       	ldd	r17, Y+3	; 0x03
    1344:	91 17       	cp	r25, r17
    1346:	08 f0       	brcs	.+2      	; 0x134a <__stack+0xaeb>
    1348:	39 2d       	mov	r19, r9
    134a:	29 0f       	add	r18, r25
    134c:	43 2d       	mov	r20, r3
    134e:	29 17       	cp	r18, r25
    1350:	08 f0       	brcs	.+2      	; 0x1354 <__stack+0xaf5>
    1352:	49 2d       	mov	r20, r9
    1354:	34 2b       	or	r19, r20
    1356:	92 2f       	mov	r25, r18
    1358:	2c 81       	ldd	r18, Y+4	; 0x04
    135a:	21 50       	subi	r18, 0x01	; 1
    135c:	43 2d       	mov	r20, r3
    135e:	5c 81       	ldd	r21, Y+4	; 0x04
    1360:	25 17       	cp	r18, r21
    1362:	08 f0       	brcs	.+2      	; 0x1366 <__stack+0xb07>
    1364:	49 2d       	mov	r20, r9
    1366:	32 0f       	add	r19, r18
    1368:	53 2d       	mov	r21, r3
    136a:	32 17       	cp	r19, r18
    136c:	08 f0       	brcs	.+2      	; 0x1370 <__stack+0xb11>
    136e:	59 2d       	mov	r21, r9
    1370:	45 2b       	or	r20, r21
    1372:	23 2f       	mov	r18, r19
    1374:	3d 81       	ldd	r19, Y+5	; 0x05
    1376:	31 50       	subi	r19, 0x01	; 1
    1378:	53 2d       	mov	r21, r3
    137a:	6d 81       	ldd	r22, Y+5	; 0x05
    137c:	36 17       	cp	r19, r22
    137e:	08 f0       	brcs	.+2      	; 0x1382 <__stack+0xb23>
    1380:	59 2d       	mov	r21, r9
    1382:	43 0f       	add	r20, r19
    1384:	63 2d       	mov	r22, r3
    1386:	43 17       	cp	r20, r19
    1388:	08 f0       	brcs	.+2      	; 0x138c <__stack+0xb2d>
    138a:	69 2d       	mov	r22, r9
    138c:	56 2b       	or	r21, r22
    138e:	34 2f       	mov	r19, r20
    1390:	4e 81       	ldd	r20, Y+6	; 0x06
    1392:	41 50       	subi	r20, 0x01	; 1
    1394:	63 2d       	mov	r22, r3
    1396:	7e 81       	ldd	r23, Y+6	; 0x06
    1398:	47 17       	cp	r20, r23
    139a:	08 f0       	brcs	.+2      	; 0x139e <__stack+0xb3f>
    139c:	69 2d       	mov	r22, r9
    139e:	54 0f       	add	r21, r20
    13a0:	73 2d       	mov	r23, r3
    13a2:	54 17       	cp	r21, r20
    13a4:	08 f0       	brcs	.+2      	; 0x13a8 <__stack+0xb49>
    13a6:	79 2d       	mov	r23, r9
    13a8:	67 2b       	or	r22, r23
    13aa:	45 2f       	mov	r20, r21
    13ac:	5f 81       	ldd	r21, Y+7	; 0x07
    13ae:	51 50       	subi	r21, 0x01	; 1
    13b0:	73 2d       	mov	r23, r3
    13b2:	af 81       	ldd	r26, Y+7	; 0x07
    13b4:	5a 17       	cp	r21, r26
    13b6:	08 f0       	brcs	.+2      	; 0x13ba <__stack+0xb5b>
    13b8:	79 2d       	mov	r23, r9
    13ba:	65 0f       	add	r22, r21
    13bc:	f3 2d       	mov	r31, r3
    13be:	65 17       	cp	r22, r21
    13c0:	08 f0       	brcs	.+2      	; 0x13c4 <__stack+0xb65>
    13c2:	f9 2d       	mov	r31, r9
    13c4:	7f 2b       	or	r23, r31
    13c6:	56 2f       	mov	r21, r22
    13c8:	68 85       	ldd	r22, Y+8	; 0x08
    13ca:	61 50       	subi	r22, 0x01	; 1
    13cc:	67 0f       	add	r22, r23
    13ce:	09 f0       	breq	.+2      	; 0x13d2 <__stack+0xb73>
    13d0:	b0 c0       	rjmp	.+352    	; 0x1532 <__stack+0xcd3>
    13d2:	66 23       	and	r22, r22
    13d4:	09 f5       	brne	.+66     	; 0x1418 <__stack+0xbb9>
    13d6:	55 23       	and	r21, r21
    13d8:	09 f0       	breq	.+2      	; 0x13dc <__stack+0xb7d>
    13da:	ab c0       	rjmp	.+342    	; 0x1532 <__stack+0xcd3>
    13dc:	55 23       	and	r21, r21
    13de:	e1 f4       	brne	.+56     	; 0x1418 <__stack+0xbb9>
    13e0:	44 23       	and	r20, r20
    13e2:	09 f0       	breq	.+2      	; 0x13e6 <__stack+0xb87>
    13e4:	a6 c0       	rjmp	.+332    	; 0x1532 <__stack+0xcd3>
    13e6:	44 23       	and	r20, r20
    13e8:	b9 f4       	brne	.+46     	; 0x1418 <__stack+0xbb9>
    13ea:	33 23       	and	r19, r19
    13ec:	09 f0       	breq	.+2      	; 0x13f0 <__stack+0xb91>
    13ee:	a1 c0       	rjmp	.+322    	; 0x1532 <__stack+0xcd3>
    13f0:	33 23       	and	r19, r19
    13f2:	91 f4       	brne	.+36     	; 0x1418 <__stack+0xbb9>
    13f4:	22 23       	and	r18, r18
    13f6:	09 f0       	breq	.+2      	; 0x13fa <__stack+0xb9b>
    13f8:	9c c0       	rjmp	.+312    	; 0x1532 <__stack+0xcd3>
    13fa:	22 23       	and	r18, r18
    13fc:	69 f4       	brne	.+26     	; 0x1418 <__stack+0xbb9>
    13fe:	92 30       	cpi	r25, 0x02	; 2
    1400:	08 f0       	brcs	.+2      	; 0x1404 <__stack+0xba5>
    1402:	97 c0       	rjmp	.+302    	; 0x1532 <__stack+0xcd3>
    1404:	91 30       	cpi	r25, 0x01	; 1
    1406:	41 f4       	brne	.+16     	; 0x1418 <__stack+0xbb9>
    1408:	80 36       	cpi	r24, 0x60	; 96
    140a:	08 f0       	brcs	.+2      	; 0x140e <__stack+0xbaf>
    140c:	92 c0       	rjmp	.+292    	; 0x1532 <__stack+0xcd3>
    140e:	8f 35       	cpi	r24, 0x5F	; 95
    1410:	19 f4       	brne	.+6      	; 0x1418 <__stack+0xbb9>
    1412:	e0 39       	cpi	r30, 0x90	; 144
    1414:	08 f0       	brcs	.+2      	; 0x1418 <__stack+0xbb9>
    1416:	8d c0       	rjmp	.+282    	; 0x1532 <__stack+0xcd3>
				{                                   
					LCD_vSendChar((result / 10000) + 48);
    1418:	29 81       	ldd	r18, Y+1	; 0x01
    141a:	3a 81       	ldd	r19, Y+2	; 0x02
    141c:	4b 81       	ldd	r20, Y+3	; 0x03
    141e:	5c 81       	ldd	r21, Y+4	; 0x04
    1420:	6d 81       	ldd	r22, Y+5	; 0x05
    1422:	7e 81       	ldd	r23, Y+6	; 0x06
    1424:	8f 81       	ldd	r24, Y+7	; 0x07
    1426:	98 85       	ldd	r25, Y+8	; 0x08
    1428:	aa 24       	eor	r10, r10
    142a:	68 94       	set
    142c:	a4 f8       	bld	r10, 4
    142e:	0f 2e       	mov	r0, r31
    1430:	f7 e2       	ldi	r31, 0x27	; 39
    1432:	bf 2e       	mov	r11, r31
    1434:	f0 2d       	mov	r31, r0
    1436:	c9 2c       	mov	r12, r9
    1438:	d9 2c       	mov	r13, r9
    143a:	e9 2c       	mov	r14, r9
    143c:	f9 2c       	mov	r15, r9
    143e:	09 2d       	mov	r16, r9
    1440:	19 2d       	mov	r17, r9
    1442:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    1446:	82 2f       	mov	r24, r18
    1448:	80 5d       	subi	r24, 0xD0	; 208
    144a:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 10000) / 1000) + 48);
    144e:	29 81       	ldd	r18, Y+1	; 0x01
    1450:	3a 81       	ldd	r19, Y+2	; 0x02
    1452:	4b 81       	ldd	r20, Y+3	; 0x03
    1454:	5c 81       	ldd	r21, Y+4	; 0x04
    1456:	6d 81       	ldd	r22, Y+5	; 0x05
    1458:	7e 81       	ldd	r23, Y+6	; 0x06
    145a:	8f 81       	ldd	r24, Y+7	; 0x07
    145c:	98 85       	ldd	r25, Y+8	; 0x08
    145e:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1462:	2e 87       	std	Y+14, r18	; 0x0e
    1464:	3f 87       	std	Y+15, r19	; 0x0f
    1466:	74 2e       	mov	r7, r20
    1468:	65 2e       	mov	r6, r21
    146a:	56 2e       	mov	r5, r22
    146c:	47 2e       	mov	r4, r23
    146e:	89 87       	std	Y+9, r24	; 0x09
    1470:	9a 87       	std	Y+10, r25	; 0x0a
    1472:	56 2d       	mov	r21, r6
    1474:	65 2d       	mov	r22, r5
    1476:	74 2d       	mov	r23, r4
    1478:	0f 2e       	mov	r0, r31
    147a:	f8 ee       	ldi	r31, 0xE8	; 232
    147c:	af 2e       	mov	r10, r31
    147e:	f0 2d       	mov	r31, r0
    1480:	0f 2e       	mov	r0, r31
    1482:	f3 e0       	ldi	r31, 0x03	; 3
    1484:	bf 2e       	mov	r11, r31
    1486:	f0 2d       	mov	r31, r0
    1488:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    148c:	82 2f       	mov	r24, r18
    148e:	80 5d       	subi	r24, 0xD0	; 208
    1490:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 10000) % 1000) / 100) + 48);
    1494:	2e 85       	ldd	r18, Y+14	; 0x0e
    1496:	3f 85       	ldd	r19, Y+15	; 0x0f
    1498:	47 2d       	mov	r20, r7
    149a:	56 2d       	mov	r21, r6
    149c:	65 2d       	mov	r22, r5
    149e:	74 2d       	mov	r23, r4
    14a0:	89 85       	ldd	r24, Y+9	; 0x09
    14a2:	9a 85       	ldd	r25, Y+10	; 0x0a
    14a4:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    14a8:	2e 87       	std	Y+14, r18	; 0x0e
    14aa:	3f 87       	std	Y+15, r19	; 0x0f
    14ac:	74 2e       	mov	r7, r20
    14ae:	65 2e       	mov	r6, r21
    14b0:	56 2e       	mov	r5, r22
    14b2:	47 2e       	mov	r4, r23
    14b4:	89 87       	std	Y+9, r24	; 0x09
    14b6:	9a 87       	std	Y+10, r25	; 0x0a
    14b8:	56 2d       	mov	r21, r6
    14ba:	65 2d       	mov	r22, r5
    14bc:	74 2d       	mov	r23, r4
    14be:	0f 2e       	mov	r0, r31
    14c0:	f4 e6       	ldi	r31, 0x64	; 100
    14c2:	af 2e       	mov	r10, r31
    14c4:	f0 2d       	mov	r31, r0
    14c6:	b9 2c       	mov	r11, r9
    14c8:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    14cc:	82 2f       	mov	r24, r18
    14ce:	80 5d       	subi	r24, 0xD0	; 208
    14d0:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((result % 10000) % 1000) % 100) / 10) + 48);
    14d4:	2e 85       	ldd	r18, Y+14	; 0x0e
    14d6:	3f 85       	ldd	r19, Y+15	; 0x0f
    14d8:	47 2d       	mov	r20, r7
    14da:	56 2d       	mov	r21, r6
    14dc:	65 2d       	mov	r22, r5
    14de:	74 2d       	mov	r23, r4
    14e0:	89 85       	ldd	r24, Y+9	; 0x09
    14e2:	9a 85       	ldd	r25, Y+10	; 0x0a
    14e4:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    14e8:	2e 87       	std	Y+14, r18	; 0x0e
    14ea:	3f 87       	std	Y+15, r19	; 0x0f
    14ec:	74 2e       	mov	r7, r20
    14ee:	65 2e       	mov	r6, r21
    14f0:	56 2e       	mov	r5, r22
    14f2:	47 2e       	mov	r4, r23
    14f4:	89 87       	std	Y+9, r24	; 0x09
    14f6:	9a 87       	std	Y+10, r25	; 0x0a
    14f8:	56 2d       	mov	r21, r6
    14fa:	65 2d       	mov	r22, r5
    14fc:	74 2d       	mov	r23, r4
    14fe:	0f 2e       	mov	r0, r31
    1500:	fa e0       	ldi	r31, 0x0A	; 10
    1502:	af 2e       	mov	r10, r31
    1504:	f0 2d       	mov	r31, r0
    1506:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    150a:	82 2f       	mov	r24, r18
    150c:	80 5d       	subi	r24, 0xD0	; 208
    150e:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((((result % 10000) % 1000) % 100) % 10) + 48);
    1512:	2e 85       	ldd	r18, Y+14	; 0x0e
    1514:	3f 85       	ldd	r19, Y+15	; 0x0f
    1516:	47 2d       	mov	r20, r7
    1518:	56 2d       	mov	r21, r6
    151a:	65 2d       	mov	r22, r5
    151c:	74 2d       	mov	r23, r4
    151e:	89 85       	ldd	r24, Y+9	; 0x09
    1520:	9a 85       	ldd	r25, Y+10	; 0x0a
    1522:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1526:	82 2f       	mov	r24, r18
    1528:	80 5d       	subi	r24, 0xD0	; 208
    152a:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
    152e:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
				}	
				else if(result >= 1000 && result < 10000)
    1532:	e9 81       	ldd	r30, Y+1	; 0x01
    1534:	e8 5e       	subi	r30, 0xE8	; 232
    1536:	93 2d       	mov	r25, r3
    1538:	b9 81       	ldd	r27, Y+1	; 0x01
    153a:	eb 17       	cp	r30, r27
    153c:	08 f0       	brcs	.+2      	; 0x1540 <__stack+0xce1>
    153e:	99 2d       	mov	r25, r9
    1540:	8a 81       	ldd	r24, Y+2	; 0x02
    1542:	84 50       	subi	r24, 0x04	; 4
    1544:	23 2d       	mov	r18, r3
    1546:	fa 81       	ldd	r31, Y+2	; 0x02
    1548:	8f 17       	cp	r24, r31
    154a:	08 f0       	brcs	.+2      	; 0x154e <__stack+0xcef>
    154c:	29 2d       	mov	r18, r9
    154e:	98 0f       	add	r25, r24
    1550:	33 2d       	mov	r19, r3
    1552:	98 17       	cp	r25, r24
    1554:	08 f0       	brcs	.+2      	; 0x1558 <__stack+0xcf9>
    1556:	39 2d       	mov	r19, r9
    1558:	23 2b       	or	r18, r19
    155a:	89 2f       	mov	r24, r25
    155c:	9b 81       	ldd	r25, Y+3	; 0x03
    155e:	91 50       	subi	r25, 0x01	; 1
    1560:	33 2d       	mov	r19, r3
    1562:	ab 80       	ldd	r10, Y+3	; 0x03
    1564:	9a 15       	cp	r25, r10
    1566:	08 f0       	brcs	.+2      	; 0x156a <__stack+0xd0b>
    1568:	39 2d       	mov	r19, r9
    156a:	29 0f       	add	r18, r25
    156c:	43 2d       	mov	r20, r3
    156e:	29 17       	cp	r18, r25
    1570:	08 f0       	brcs	.+2      	; 0x1574 <__stack+0xd15>
    1572:	49 2d       	mov	r20, r9
    1574:	34 2b       	or	r19, r20
    1576:	92 2f       	mov	r25, r18
    1578:	2c 81       	ldd	r18, Y+4	; 0x04
    157a:	21 50       	subi	r18, 0x01	; 1
    157c:	43 2d       	mov	r20, r3
    157e:	bc 80       	ldd	r11, Y+4	; 0x04
    1580:	2b 15       	cp	r18, r11
    1582:	08 f0       	brcs	.+2      	; 0x1586 <__stack+0xd27>
    1584:	49 2d       	mov	r20, r9
    1586:	32 0f       	add	r19, r18
    1588:	53 2d       	mov	r21, r3
    158a:	32 17       	cp	r19, r18
    158c:	08 f0       	brcs	.+2      	; 0x1590 <__stack+0xd31>
    158e:	59 2d       	mov	r21, r9
    1590:	45 2b       	or	r20, r21
    1592:	23 2f       	mov	r18, r19
    1594:	3d 81       	ldd	r19, Y+5	; 0x05
    1596:	31 50       	subi	r19, 0x01	; 1
    1598:	53 2d       	mov	r21, r3
    159a:	cd 80       	ldd	r12, Y+5	; 0x05
    159c:	3c 15       	cp	r19, r12
    159e:	08 f0       	brcs	.+2      	; 0x15a2 <__stack+0xd43>
    15a0:	59 2d       	mov	r21, r9
    15a2:	43 0f       	add	r20, r19
    15a4:	63 2d       	mov	r22, r3
    15a6:	43 17       	cp	r20, r19
    15a8:	08 f0       	brcs	.+2      	; 0x15ac <__stack+0xd4d>
    15aa:	69 2d       	mov	r22, r9
    15ac:	56 2b       	or	r21, r22
    15ae:	34 2f       	mov	r19, r20
    15b0:	4e 81       	ldd	r20, Y+6	; 0x06
    15b2:	41 50       	subi	r20, 0x01	; 1
    15b4:	63 2d       	mov	r22, r3
    15b6:	de 80       	ldd	r13, Y+6	; 0x06
    15b8:	4d 15       	cp	r20, r13
    15ba:	08 f0       	brcs	.+2      	; 0x15be <__stack+0xd5f>
    15bc:	69 2d       	mov	r22, r9
    15be:	54 0f       	add	r21, r20
    15c0:	73 2d       	mov	r23, r3
    15c2:	54 17       	cp	r21, r20
    15c4:	08 f0       	brcs	.+2      	; 0x15c8 <__stack+0xd69>
    15c6:	79 2d       	mov	r23, r9
    15c8:	67 2b       	or	r22, r23
    15ca:	45 2f       	mov	r20, r21
    15cc:	5f 81       	ldd	r21, Y+7	; 0x07
    15ce:	51 50       	subi	r21, 0x01	; 1
    15d0:	73 2d       	mov	r23, r3
    15d2:	ef 80       	ldd	r14, Y+7	; 0x07
    15d4:	5e 15       	cp	r21, r14
    15d6:	08 f0       	brcs	.+2      	; 0x15da <__stack+0xd7b>
    15d8:	79 2d       	mov	r23, r9
    15da:	65 0f       	add	r22, r21
    15dc:	f3 2d       	mov	r31, r3
    15de:	65 17       	cp	r22, r21
    15e0:	08 f0       	brcs	.+2      	; 0x15e4 <__stack+0xd85>
    15e2:	f9 2d       	mov	r31, r9
    15e4:	7f 2b       	or	r23, r31
    15e6:	56 2f       	mov	r21, r22
    15e8:	68 85       	ldd	r22, Y+8	; 0x08
    15ea:	61 50       	subi	r22, 0x01	; 1
    15ec:	67 0f       	add	r22, r23
    15ee:	09 f0       	breq	.+2      	; 0x15f2 <__stack+0xd93>
    15f0:	8e c0       	rjmp	.+284    	; 0x170e <__stack+0xeaf>
    15f2:	66 23       	and	r22, r22
    15f4:	09 f5       	brne	.+66     	; 0x1638 <__stack+0xdd9>
    15f6:	55 23       	and	r21, r21
    15f8:	09 f0       	breq	.+2      	; 0x15fc <__stack+0xd9d>
    15fa:	89 c0       	rjmp	.+274    	; 0x170e <__stack+0xeaf>
    15fc:	55 23       	and	r21, r21
    15fe:	e1 f4       	brne	.+56     	; 0x1638 <__stack+0xdd9>
    1600:	44 23       	and	r20, r20
    1602:	09 f0       	breq	.+2      	; 0x1606 <__stack+0xda7>
    1604:	84 c0       	rjmp	.+264    	; 0x170e <__stack+0xeaf>
    1606:	44 23       	and	r20, r20
    1608:	b9 f4       	brne	.+46     	; 0x1638 <__stack+0xdd9>
    160a:	33 23       	and	r19, r19
    160c:	09 f0       	breq	.+2      	; 0x1610 <__stack+0xdb1>
    160e:	7f c0       	rjmp	.+254    	; 0x170e <__stack+0xeaf>
    1610:	33 23       	and	r19, r19
    1612:	91 f4       	brne	.+36     	; 0x1638 <__stack+0xdd9>
    1614:	22 23       	and	r18, r18
    1616:	09 f0       	breq	.+2      	; 0x161a <__stack+0xdbb>
    1618:	7a c0       	rjmp	.+244    	; 0x170e <__stack+0xeaf>
    161a:	22 23       	and	r18, r18
    161c:	69 f4       	brne	.+26     	; 0x1638 <__stack+0xdd9>
    161e:	99 23       	and	r25, r25
    1620:	09 f0       	breq	.+2      	; 0x1624 <__stack+0xdc5>
    1622:	75 c0       	rjmp	.+234    	; 0x170e <__stack+0xeaf>
    1624:	99 23       	and	r25, r25
    1626:	41 f4       	brne	.+16     	; 0x1638 <__stack+0xdd9>
    1628:	84 32       	cpi	r24, 0x24	; 36
    162a:	08 f0       	brcs	.+2      	; 0x162e <__stack+0xdcf>
    162c:	70 c0       	rjmp	.+224    	; 0x170e <__stack+0xeaf>
    162e:	83 32       	cpi	r24, 0x23	; 35
    1630:	19 f4       	brne	.+6      	; 0x1638 <__stack+0xdd9>
    1632:	e8 32       	cpi	r30, 0x28	; 40
    1634:	08 f0       	brcs	.+2      	; 0x1638 <__stack+0xdd9>
    1636:	6b c0       	rjmp	.+214    	; 0x170e <__stack+0xeaf>
				{
					LCD_vSendChar((result / 1000) + 48);
    1638:	29 81       	ldd	r18, Y+1	; 0x01
    163a:	3a 81       	ldd	r19, Y+2	; 0x02
    163c:	4b 81       	ldd	r20, Y+3	; 0x03
    163e:	5c 81       	ldd	r21, Y+4	; 0x04
    1640:	6d 81       	ldd	r22, Y+5	; 0x05
    1642:	7e 81       	ldd	r23, Y+6	; 0x06
    1644:	8f 81       	ldd	r24, Y+7	; 0x07
    1646:	98 85       	ldd	r25, Y+8	; 0x08
    1648:	0f 2e       	mov	r0, r31
    164a:	f8 ee       	ldi	r31, 0xE8	; 232
    164c:	af 2e       	mov	r10, r31
    164e:	f0 2d       	mov	r31, r0
    1650:	0f 2e       	mov	r0, r31
    1652:	f3 e0       	ldi	r31, 0x03	; 3
    1654:	bf 2e       	mov	r11, r31
    1656:	f0 2d       	mov	r31, r0
    1658:	c9 2c       	mov	r12, r9
    165a:	d9 2c       	mov	r13, r9
    165c:	e9 2c       	mov	r14, r9
    165e:	f9 2c       	mov	r15, r9
    1660:	09 2d       	mov	r16, r9
    1662:	19 2d       	mov	r17, r9
    1664:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    1668:	82 2f       	mov	r24, r18
    166a:	80 5d       	subi	r24, 0xD0	; 208
    166c:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 1000) / 100) + 48);
    1670:	29 81       	ldd	r18, Y+1	; 0x01
    1672:	3a 81       	ldd	r19, Y+2	; 0x02
    1674:	4b 81       	ldd	r20, Y+3	; 0x03
    1676:	5c 81       	ldd	r21, Y+4	; 0x04
    1678:	6d 81       	ldd	r22, Y+5	; 0x05
    167a:	7e 81       	ldd	r23, Y+6	; 0x06
    167c:	8f 81       	ldd	r24, Y+7	; 0x07
    167e:	98 85       	ldd	r25, Y+8	; 0x08
    1680:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1684:	2e 87       	std	Y+14, r18	; 0x0e
    1686:	3f 87       	std	Y+15, r19	; 0x0f
    1688:	74 2e       	mov	r7, r20
    168a:	65 2e       	mov	r6, r21
    168c:	56 2e       	mov	r5, r22
    168e:	47 2e       	mov	r4, r23
    1690:	89 87       	std	Y+9, r24	; 0x09
    1692:	9a 87       	std	Y+10, r25	; 0x0a
    1694:	56 2d       	mov	r21, r6
    1696:	65 2d       	mov	r22, r5
    1698:	74 2d       	mov	r23, r4
    169a:	0f 2e       	mov	r0, r31
    169c:	f4 e6       	ldi	r31, 0x64	; 100
    169e:	af 2e       	mov	r10, r31
    16a0:	f0 2d       	mov	r31, r0
    16a2:	b9 2c       	mov	r11, r9
    16a4:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    16a8:	82 2f       	mov	r24, r18
    16aa:	80 5d       	subi	r24, 0xD0	; 208
    16ac:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 1000) % 100) / 10) + 48);
    16b0:	2e 85       	ldd	r18, Y+14	; 0x0e
    16b2:	3f 85       	ldd	r19, Y+15	; 0x0f
    16b4:	47 2d       	mov	r20, r7
    16b6:	56 2d       	mov	r21, r6
    16b8:	65 2d       	mov	r22, r5
    16ba:	74 2d       	mov	r23, r4
    16bc:	89 85       	ldd	r24, Y+9	; 0x09
    16be:	9a 85       	ldd	r25, Y+10	; 0x0a
    16c0:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    16c4:	2e 87       	std	Y+14, r18	; 0x0e
    16c6:	3f 87       	std	Y+15, r19	; 0x0f
    16c8:	74 2e       	mov	r7, r20
    16ca:	65 2e       	mov	r6, r21
    16cc:	56 2e       	mov	r5, r22
    16ce:	47 2e       	mov	r4, r23
    16d0:	89 87       	std	Y+9, r24	; 0x09
    16d2:	9a 87       	std	Y+10, r25	; 0x0a
    16d4:	56 2d       	mov	r21, r6
    16d6:	65 2d       	mov	r22, r5
    16d8:	74 2d       	mov	r23, r4
    16da:	0f 2e       	mov	r0, r31
    16dc:	fa e0       	ldi	r31, 0x0A	; 10
    16de:	af 2e       	mov	r10, r31
    16e0:	f0 2d       	mov	r31, r0
    16e2:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    16e6:	82 2f       	mov	r24, r18
    16e8:	80 5d       	subi	r24, 0xD0	; 208
    16ea:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((((result % 1000) % 100) % 10) + 48);
    16ee:	2e 85       	ldd	r18, Y+14	; 0x0e
    16f0:	3f 85       	ldd	r19, Y+15	; 0x0f
    16f2:	47 2d       	mov	r20, r7
    16f4:	56 2d       	mov	r21, r6
    16f6:	65 2d       	mov	r22, r5
    16f8:	74 2d       	mov	r23, r4
    16fa:	89 85       	ldd	r24, Y+9	; 0x09
    16fc:	9a 85       	ldd	r25, Y+10	; 0x0a
    16fe:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1702:	82 2f       	mov	r24, r18
    1704:	80 5d       	subi	r24, 0xD0	; 208
    1706:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
    170a:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
				}
				else if(result >= 100 && result < 1000)
    170e:	e9 81       	ldd	r30, Y+1	; 0x01
    1710:	e4 56       	subi	r30, 0x64	; 100
    1712:	93 2d       	mov	r25, r3
    1714:	f9 80       	ldd	r15, Y+1	; 0x01
    1716:	ef 15       	cp	r30, r15
    1718:	08 f0       	brcs	.+2      	; 0x171c <__stack+0xebd>
    171a:	99 2d       	mov	r25, r9
    171c:	8a 81       	ldd	r24, Y+2	; 0x02
    171e:	81 50       	subi	r24, 0x01	; 1
    1720:	23 2d       	mov	r18, r3
    1722:	0a 81       	ldd	r16, Y+2	; 0x02
    1724:	80 17       	cp	r24, r16
    1726:	08 f0       	brcs	.+2      	; 0x172a <__stack+0xecb>
    1728:	29 2d       	mov	r18, r9
    172a:	98 0f       	add	r25, r24
    172c:	33 2d       	mov	r19, r3
    172e:	98 17       	cp	r25, r24
    1730:	08 f0       	brcs	.+2      	; 0x1734 <__stack+0xed5>
    1732:	39 2d       	mov	r19, r9
    1734:	23 2b       	or	r18, r19
    1736:	89 2f       	mov	r24, r25
    1738:	9b 81       	ldd	r25, Y+3	; 0x03
    173a:	91 50       	subi	r25, 0x01	; 1
    173c:	33 2d       	mov	r19, r3
    173e:	1b 81       	ldd	r17, Y+3	; 0x03
    1740:	91 17       	cp	r25, r17
    1742:	08 f0       	brcs	.+2      	; 0x1746 <__stack+0xee7>
    1744:	39 2d       	mov	r19, r9
    1746:	29 0f       	add	r18, r25
    1748:	43 2d       	mov	r20, r3
    174a:	29 17       	cp	r18, r25
    174c:	08 f0       	brcs	.+2      	; 0x1750 <__stack+0xef1>
    174e:	49 2d       	mov	r20, r9
    1750:	34 2b       	or	r19, r20
    1752:	92 2f       	mov	r25, r18
    1754:	2c 81       	ldd	r18, Y+4	; 0x04
    1756:	21 50       	subi	r18, 0x01	; 1
    1758:	43 2d       	mov	r20, r3
    175a:	5c 81       	ldd	r21, Y+4	; 0x04
    175c:	25 17       	cp	r18, r21
    175e:	08 f0       	brcs	.+2      	; 0x1762 <__stack+0xf03>
    1760:	49 2d       	mov	r20, r9
    1762:	32 0f       	add	r19, r18
    1764:	53 2d       	mov	r21, r3
    1766:	32 17       	cp	r19, r18
    1768:	08 f0       	brcs	.+2      	; 0x176c <__stack+0xf0d>
    176a:	59 2d       	mov	r21, r9
    176c:	45 2b       	or	r20, r21
    176e:	23 2f       	mov	r18, r19
    1770:	3d 81       	ldd	r19, Y+5	; 0x05
    1772:	31 50       	subi	r19, 0x01	; 1
    1774:	53 2d       	mov	r21, r3
    1776:	6d 81       	ldd	r22, Y+5	; 0x05
    1778:	36 17       	cp	r19, r22
    177a:	08 f0       	brcs	.+2      	; 0x177e <__stack+0xf1f>
    177c:	59 2d       	mov	r21, r9
    177e:	43 0f       	add	r20, r19
    1780:	63 2d       	mov	r22, r3
    1782:	43 17       	cp	r20, r19
    1784:	08 f0       	brcs	.+2      	; 0x1788 <__stack+0xf29>
    1786:	69 2d       	mov	r22, r9
    1788:	56 2b       	or	r21, r22
    178a:	34 2f       	mov	r19, r20
    178c:	4e 81       	ldd	r20, Y+6	; 0x06
    178e:	41 50       	subi	r20, 0x01	; 1
    1790:	63 2d       	mov	r22, r3
    1792:	7e 81       	ldd	r23, Y+6	; 0x06
    1794:	47 17       	cp	r20, r23
    1796:	08 f0       	brcs	.+2      	; 0x179a <__stack+0xf3b>
    1798:	69 2d       	mov	r22, r9
    179a:	54 0f       	add	r21, r20
    179c:	73 2d       	mov	r23, r3
    179e:	54 17       	cp	r21, r20
    17a0:	08 f0       	brcs	.+2      	; 0x17a4 <__stack+0xf45>
    17a2:	79 2d       	mov	r23, r9
    17a4:	67 2b       	or	r22, r23
    17a6:	45 2f       	mov	r20, r21
    17a8:	5f 81       	ldd	r21, Y+7	; 0x07
    17aa:	51 50       	subi	r21, 0x01	; 1
    17ac:	73 2d       	mov	r23, r3
    17ae:	af 81       	ldd	r26, Y+7	; 0x07
    17b0:	5a 17       	cp	r21, r26
    17b2:	08 f0       	brcs	.+2      	; 0x17b6 <__stack+0xf57>
    17b4:	79 2d       	mov	r23, r9
    17b6:	65 0f       	add	r22, r21
    17b8:	f3 2d       	mov	r31, r3
    17ba:	65 17       	cp	r22, r21
    17bc:	08 f0       	brcs	.+2      	; 0x17c0 <__stack+0xf61>
    17be:	f9 2d       	mov	r31, r9
    17c0:	7f 2b       	or	r23, r31
    17c2:	56 2f       	mov	r21, r22
    17c4:	68 85       	ldd	r22, Y+8	; 0x08
    17c6:	61 50       	subi	r22, 0x01	; 1
    17c8:	67 0f       	add	r22, r23
    17ca:	09 f0       	breq	.+2      	; 0x17ce <__stack+0xf6f>
    17cc:	6b c0       	rjmp	.+214    	; 0x18a4 <__stack+0x1045>
    17ce:	66 23       	and	r22, r22
    17d0:	09 f5       	brne	.+66     	; 0x1814 <__stack+0xfb5>
    17d2:	55 23       	and	r21, r21
    17d4:	09 f0       	breq	.+2      	; 0x17d8 <__stack+0xf79>
    17d6:	66 c0       	rjmp	.+204    	; 0x18a4 <__stack+0x1045>
    17d8:	55 23       	and	r21, r21
    17da:	e1 f4       	brne	.+56     	; 0x1814 <__stack+0xfb5>
    17dc:	44 23       	and	r20, r20
    17de:	09 f0       	breq	.+2      	; 0x17e2 <__stack+0xf83>
    17e0:	61 c0       	rjmp	.+194    	; 0x18a4 <__stack+0x1045>
    17e2:	44 23       	and	r20, r20
    17e4:	b9 f4       	brne	.+46     	; 0x1814 <__stack+0xfb5>
    17e6:	33 23       	and	r19, r19
    17e8:	09 f0       	breq	.+2      	; 0x17ec <__stack+0xf8d>
    17ea:	5c c0       	rjmp	.+184    	; 0x18a4 <__stack+0x1045>
    17ec:	33 23       	and	r19, r19
    17ee:	91 f4       	brne	.+36     	; 0x1814 <__stack+0xfb5>
    17f0:	22 23       	and	r18, r18
    17f2:	09 f0       	breq	.+2      	; 0x17f6 <__stack+0xf97>
    17f4:	57 c0       	rjmp	.+174    	; 0x18a4 <__stack+0x1045>
    17f6:	22 23       	and	r18, r18
    17f8:	69 f4       	brne	.+26     	; 0x1814 <__stack+0xfb5>
    17fa:	99 23       	and	r25, r25
    17fc:	09 f0       	breq	.+2      	; 0x1800 <__stack+0xfa1>
    17fe:	52 c0       	rjmp	.+164    	; 0x18a4 <__stack+0x1045>
    1800:	99 23       	and	r25, r25
    1802:	41 f4       	brne	.+16     	; 0x1814 <__stack+0xfb5>
    1804:	84 30       	cpi	r24, 0x04	; 4
    1806:	08 f0       	brcs	.+2      	; 0x180a <__stack+0xfab>
    1808:	4d c0       	rjmp	.+154    	; 0x18a4 <__stack+0x1045>
    180a:	83 30       	cpi	r24, 0x03	; 3
    180c:	19 f4       	brne	.+6      	; 0x1814 <__stack+0xfb5>
    180e:	e4 38       	cpi	r30, 0x84	; 132
    1810:	08 f0       	brcs	.+2      	; 0x1814 <__stack+0xfb5>
    1812:	48 c0       	rjmp	.+144    	; 0x18a4 <__stack+0x1045>
				{
					LCD_vSendChar((result / 100) + 48);
    1814:	29 81       	ldd	r18, Y+1	; 0x01
    1816:	3a 81       	ldd	r19, Y+2	; 0x02
    1818:	4b 81       	ldd	r20, Y+3	; 0x03
    181a:	5c 81       	ldd	r21, Y+4	; 0x04
    181c:	6d 81       	ldd	r22, Y+5	; 0x05
    181e:	7e 81       	ldd	r23, Y+6	; 0x06
    1820:	8f 81       	ldd	r24, Y+7	; 0x07
    1822:	98 85       	ldd	r25, Y+8	; 0x08
    1824:	0f 2e       	mov	r0, r31
    1826:	f4 e6       	ldi	r31, 0x64	; 100
    1828:	af 2e       	mov	r10, r31
    182a:	f0 2d       	mov	r31, r0
    182c:	b9 2c       	mov	r11, r9
    182e:	c9 2c       	mov	r12, r9
    1830:	d9 2c       	mov	r13, r9
    1832:	e9 2c       	mov	r14, r9
    1834:	f9 2c       	mov	r15, r9
    1836:	09 2d       	mov	r16, r9
    1838:	19 2d       	mov	r17, r9
    183a:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    183e:	82 2f       	mov	r24, r18
    1840:	80 5d       	subi	r24, 0xD0	; 208
    1842:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 100) / 10) + 48);
    1846:	29 81       	ldd	r18, Y+1	; 0x01
    1848:	3a 81       	ldd	r19, Y+2	; 0x02
    184a:	4b 81       	ldd	r20, Y+3	; 0x03
    184c:	5c 81       	ldd	r21, Y+4	; 0x04
    184e:	6d 81       	ldd	r22, Y+5	; 0x05
    1850:	7e 81       	ldd	r23, Y+6	; 0x06
    1852:	8f 81       	ldd	r24, Y+7	; 0x07
    1854:	98 85       	ldd	r25, Y+8	; 0x08
    1856:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    185a:	2e 87       	std	Y+14, r18	; 0x0e
    185c:	3f 87       	std	Y+15, r19	; 0x0f
    185e:	74 2e       	mov	r7, r20
    1860:	65 2e       	mov	r6, r21
    1862:	56 2e       	mov	r5, r22
    1864:	47 2e       	mov	r4, r23
    1866:	89 87       	std	Y+9, r24	; 0x09
    1868:	9a 87       	std	Y+10, r25	; 0x0a
    186a:	56 2d       	mov	r21, r6
    186c:	65 2d       	mov	r22, r5
    186e:	74 2d       	mov	r23, r4
    1870:	0f 2e       	mov	r0, r31
    1872:	fa e0       	ldi	r31, 0x0A	; 10
    1874:	af 2e       	mov	r10, r31
    1876:	f0 2d       	mov	r31, r0
    1878:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    187c:	82 2f       	mov	r24, r18
    187e:	80 5d       	subi	r24, 0xD0	; 208
    1880:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar(((result % 100) % 10) + 48);
    1884:	2e 85       	ldd	r18, Y+14	; 0x0e
    1886:	3f 85       	ldd	r19, Y+15	; 0x0f
    1888:	47 2d       	mov	r20, r7
    188a:	56 2d       	mov	r21, r6
    188c:	65 2d       	mov	r22, r5
    188e:	74 2d       	mov	r23, r4
    1890:	89 85       	ldd	r24, Y+9	; 0x09
    1892:	9a 85       	ldd	r25, Y+10	; 0x0a
    1894:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    1898:	82 2f       	mov	r24, r18
    189a:	80 5d       	subi	r24, 0xD0	; 208
    189c:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
    18a0:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
				}					
				else if(result >= 10 && result < 100)
    18a4:	e9 81       	ldd	r30, Y+1	; 0x01
    18a6:	ea 50       	subi	r30, 0x0A	; 10
    18a8:	93 2d       	mov	r25, r3
    18aa:	b9 81       	ldd	r27, Y+1	; 0x01
    18ac:	eb 17       	cp	r30, r27
    18ae:	08 f0       	brcs	.+2      	; 0x18b2 <__stack+0x1053>
    18b0:	99 2d       	mov	r25, r9
    18b2:	8a 81       	ldd	r24, Y+2	; 0x02
    18b4:	81 50       	subi	r24, 0x01	; 1
    18b6:	23 2d       	mov	r18, r3
    18b8:	fa 81       	ldd	r31, Y+2	; 0x02
    18ba:	8f 17       	cp	r24, r31
    18bc:	08 f0       	brcs	.+2      	; 0x18c0 <__stack+0x1061>
    18be:	29 2d       	mov	r18, r9
    18c0:	98 0f       	add	r25, r24
    18c2:	33 2d       	mov	r19, r3
    18c4:	98 17       	cp	r25, r24
    18c6:	08 f0       	brcs	.+2      	; 0x18ca <__stack+0x106b>
    18c8:	39 2d       	mov	r19, r9
    18ca:	23 2b       	or	r18, r19
    18cc:	89 2f       	mov	r24, r25
    18ce:	9b 81       	ldd	r25, Y+3	; 0x03
    18d0:	91 50       	subi	r25, 0x01	; 1
    18d2:	33 2d       	mov	r19, r3
    18d4:	ab 80       	ldd	r10, Y+3	; 0x03
    18d6:	9a 15       	cp	r25, r10
    18d8:	08 f0       	brcs	.+2      	; 0x18dc <__stack+0x107d>
    18da:	39 2d       	mov	r19, r9
    18dc:	29 0f       	add	r18, r25
    18de:	43 2d       	mov	r20, r3
    18e0:	29 17       	cp	r18, r25
    18e2:	08 f0       	brcs	.+2      	; 0x18e6 <__stack+0x1087>
    18e4:	49 2d       	mov	r20, r9
    18e6:	34 2b       	or	r19, r20
    18e8:	92 2f       	mov	r25, r18
    18ea:	2c 81       	ldd	r18, Y+4	; 0x04
    18ec:	21 50       	subi	r18, 0x01	; 1
    18ee:	43 2d       	mov	r20, r3
    18f0:	bc 80       	ldd	r11, Y+4	; 0x04
    18f2:	2b 15       	cp	r18, r11
    18f4:	08 f0       	brcs	.+2      	; 0x18f8 <__stack+0x1099>
    18f6:	49 2d       	mov	r20, r9
    18f8:	32 0f       	add	r19, r18
    18fa:	53 2d       	mov	r21, r3
    18fc:	32 17       	cp	r19, r18
    18fe:	08 f0       	brcs	.+2      	; 0x1902 <__stack+0x10a3>
    1900:	59 2d       	mov	r21, r9
    1902:	45 2b       	or	r20, r21
    1904:	23 2f       	mov	r18, r19
    1906:	3d 81       	ldd	r19, Y+5	; 0x05
    1908:	31 50       	subi	r19, 0x01	; 1
    190a:	53 2d       	mov	r21, r3
    190c:	cd 80       	ldd	r12, Y+5	; 0x05
    190e:	3c 15       	cp	r19, r12
    1910:	08 f0       	brcs	.+2      	; 0x1914 <__stack+0x10b5>
    1912:	59 2d       	mov	r21, r9
    1914:	43 0f       	add	r20, r19
    1916:	63 2d       	mov	r22, r3
    1918:	43 17       	cp	r20, r19
    191a:	08 f0       	brcs	.+2      	; 0x191e <__stack+0x10bf>
    191c:	69 2d       	mov	r22, r9
    191e:	56 2b       	or	r21, r22
    1920:	34 2f       	mov	r19, r20
    1922:	4e 81       	ldd	r20, Y+6	; 0x06
    1924:	41 50       	subi	r20, 0x01	; 1
    1926:	63 2d       	mov	r22, r3
    1928:	de 80       	ldd	r13, Y+6	; 0x06
    192a:	4d 15       	cp	r20, r13
    192c:	08 f0       	brcs	.+2      	; 0x1930 <__stack+0x10d1>
    192e:	69 2d       	mov	r22, r9
    1930:	54 0f       	add	r21, r20
    1932:	73 2d       	mov	r23, r3
    1934:	54 17       	cp	r21, r20
    1936:	08 f0       	brcs	.+2      	; 0x193a <__stack+0x10db>
    1938:	79 2d       	mov	r23, r9
    193a:	67 2b       	or	r22, r23
    193c:	45 2f       	mov	r20, r21
    193e:	5f 81       	ldd	r21, Y+7	; 0x07
    1940:	51 50       	subi	r21, 0x01	; 1
    1942:	73 2d       	mov	r23, r3
    1944:	ef 80       	ldd	r14, Y+7	; 0x07
    1946:	5e 15       	cp	r21, r14
    1948:	08 f0       	brcs	.+2      	; 0x194c <__stack+0x10ed>
    194a:	79 2d       	mov	r23, r9
    194c:	65 0f       	add	r22, r21
    194e:	f3 2d       	mov	r31, r3
    1950:	65 17       	cp	r22, r21
    1952:	08 f0       	brcs	.+2      	; 0x1956 <__stack+0x10f7>
    1954:	f9 2d       	mov	r31, r9
    1956:	7f 2b       	or	r23, r31
    1958:	56 2f       	mov	r21, r22
    195a:	68 85       	ldd	r22, Y+8	; 0x08
    195c:	61 50       	subi	r22, 0x01	; 1
    195e:	67 0f       	add	r22, r23
    1960:	09 f0       	breq	.+2      	; 0x1964 <__stack+0x1105>
    1962:	46 c0       	rjmp	.+140    	; 0x19f0 <__stack+0x1191>
    1964:	66 23       	and	r22, r22
    1966:	d9 f4       	brne	.+54     	; 0x199e <__stack+0x113f>
    1968:	55 23       	and	r21, r21
    196a:	09 f0       	breq	.+2      	; 0x196e <__stack+0x110f>
    196c:	41 c0       	rjmp	.+130    	; 0x19f0 <__stack+0x1191>
    196e:	55 23       	and	r21, r21
    1970:	b1 f4       	brne	.+44     	; 0x199e <__stack+0x113f>
    1972:	44 23       	and	r20, r20
    1974:	e9 f5       	brne	.+122    	; 0x19f0 <__stack+0x1191>
    1976:	44 23       	and	r20, r20
    1978:	91 f4       	brne	.+36     	; 0x199e <__stack+0x113f>
    197a:	33 23       	and	r19, r19
    197c:	c9 f5       	brne	.+114    	; 0x19f0 <__stack+0x1191>
    197e:	33 23       	and	r19, r19
    1980:	71 f4       	brne	.+28     	; 0x199e <__stack+0x113f>
    1982:	22 23       	and	r18, r18
    1984:	a9 f5       	brne	.+106    	; 0x19f0 <__stack+0x1191>
    1986:	22 23       	and	r18, r18
    1988:	51 f4       	brne	.+20     	; 0x199e <__stack+0x113f>
    198a:	99 23       	and	r25, r25
    198c:	89 f5       	brne	.+98     	; 0x19f0 <__stack+0x1191>
    198e:	99 23       	and	r25, r25
    1990:	31 f4       	brne	.+12     	; 0x199e <__stack+0x113f>
    1992:	88 23       	and	r24, r24
    1994:	69 f5       	brne	.+90     	; 0x19f0 <__stack+0x1191>
    1996:	88 23       	and	r24, r24
    1998:	11 f4       	brne	.+4      	; 0x199e <__stack+0x113f>
    199a:	ea 35       	cpi	r30, 0x5A	; 90
    199c:	48 f5       	brcc	.+82     	; 0x19f0 <__stack+0x1191>
				{
					LCD_vSendChar((result / 10) + 48);
    199e:	29 81       	ldd	r18, Y+1	; 0x01
    19a0:	3a 81       	ldd	r19, Y+2	; 0x02
    19a2:	4b 81       	ldd	r20, Y+3	; 0x03
    19a4:	5c 81       	ldd	r21, Y+4	; 0x04
    19a6:	6d 81       	ldd	r22, Y+5	; 0x05
    19a8:	7e 81       	ldd	r23, Y+6	; 0x06
    19aa:	8f 81       	ldd	r24, Y+7	; 0x07
    19ac:	98 85       	ldd	r25, Y+8	; 0x08
    19ae:	0f 2e       	mov	r0, r31
    19b0:	fa e0       	ldi	r31, 0x0A	; 10
    19b2:	af 2e       	mov	r10, r31
    19b4:	f0 2d       	mov	r31, r0
    19b6:	b9 2c       	mov	r11, r9
    19b8:	c9 2c       	mov	r12, r9
    19ba:	d9 2c       	mov	r13, r9
    19bc:	e9 2c       	mov	r14, r9
    19be:	f9 2c       	mov	r15, r9
    19c0:	09 2d       	mov	r16, r9
    19c2:	19 2d       	mov	r17, r9
    19c4:	0e 94 c8 12 	call	0x2590	; 0x2590 <__udivdi3>
    19c8:	82 2f       	mov	r24, r18
    19ca:	80 5d       	subi	r24, 0xD0	; 208
    19cc:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
					LCD_vSendChar((result % 10) + 48);
    19d0:	29 81       	ldd	r18, Y+1	; 0x01
    19d2:	3a 81       	ldd	r19, Y+2	; 0x02
    19d4:	4b 81       	ldd	r20, Y+3	; 0x03
    19d6:	5c 81       	ldd	r21, Y+4	; 0x04
    19d8:	6d 81       	ldd	r22, Y+5	; 0x05
    19da:	7e 81       	ldd	r23, Y+6	; 0x06
    19dc:	8f 81       	ldd	r24, Y+7	; 0x07
    19de:	98 85       	ldd	r25, Y+8	; 0x08
    19e0:	0e 94 0d 19 	call	0x321a	; 0x321a <__umoddi3>
    19e4:	82 2f       	mov	r24, r18
    19e6:	80 5d       	subi	r24, 0xD0	; 208
    19e8:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
    19ec:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
				}
				else if(result >= 0 && result < 10)
    19f0:	f8 84       	ldd	r15, Y+8	; 0x08
    19f2:	ff 20       	and	r15, r15
    19f4:	11 f0       	breq	.+4      	; 0x19fa <__stack+0x119b>
    19f6:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    19fa:	ff 20       	and	r15, r15
    19fc:	79 f5       	brne	.+94     	; 0x1a5c <__stack+0x11fd>
    19fe:	1f 81       	ldd	r17, Y+7	; 0x07
    1a00:	11 23       	and	r17, r17
    1a02:	11 f0       	breq	.+4      	; 0x1a08 <__stack+0x11a9>
    1a04:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    1a08:	11 23       	and	r17, r17
    1a0a:	41 f5       	brne	.+80     	; 0x1a5c <__stack+0x11fd>
    1a0c:	3e 81       	ldd	r19, Y+6	; 0x06
    1a0e:	33 23       	and	r19, r19
    1a10:	11 f0       	breq	.+4      	; 0x1a16 <__stack+0x11b7>
    1a12:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    1a16:	33 23       	and	r19, r19
    1a18:	09 f5       	brne	.+66     	; 0x1a5c <__stack+0x11fd>
    1a1a:	5d 81       	ldd	r21, Y+5	; 0x05
    1a1c:	55 23       	and	r21, r21
    1a1e:	11 f0       	breq	.+4      	; 0x1a24 <__stack+0x11c5>
    1a20:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    1a24:	55 23       	and	r21, r21
    1a26:	d1 f4       	brne	.+52     	; 0x1a5c <__stack+0x11fd>
    1a28:	7c 81       	ldd	r23, Y+4	; 0x04
    1a2a:	77 23       	and	r23, r23
    1a2c:	11 f0       	breq	.+4      	; 0x1a32 <__stack+0x11d3>
    1a2e:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    1a32:	77 23       	and	r23, r23
    1a34:	99 f4       	brne	.+38     	; 0x1a5c <__stack+0x11fd>
    1a36:	9b 81       	ldd	r25, Y+3	; 0x03
    1a38:	99 23       	and	r25, r25
    1a3a:	11 f0       	breq	.+4      	; 0x1a40 <__stack+0x11e1>
    1a3c:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    1a40:	99 23       	and	r25, r25
    1a42:	61 f4       	brne	.+24     	; 0x1a5c <__stack+0x11fd>
    1a44:	ba 81       	ldd	r27, Y+2	; 0x02
    1a46:	bb 23       	and	r27, r27
    1a48:	11 f0       	breq	.+4      	; 0x1a4e <__stack+0x11ef>
    1a4a:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    1a4e:	bb 23       	and	r27, r27
    1a50:	29 f4       	brne	.+10     	; 0x1a5c <__stack+0x11fd>
    1a52:	f9 81       	ldd	r31, Y+1	; 0x01
    1a54:	fa 30       	cpi	r31, 0x0A	; 10
    1a56:	10 f0       	brcs	.+4      	; 0x1a5c <__stack+0x11fd>
    1a58:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
				{
					LCD_vSendChar(result + 48);
    1a5c:	89 81       	ldd	r24, Y+1	; 0x01
    1a5e:	80 5d       	subi	r24, 0xD0	; 208
    1a60:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
    1a64:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
		while(read_value != '+' && read_value != '-' && read_value != '/' && read_value != '*' && read_value != 'A' && read_value != '=')
		{
			read_value = KEYPAD_u8Read('D');
			operation = read_value;
		}		
		if(read_value != 'A' && read_value != '=')
    1a68:	44 24       	eor	r4, r4
    1a6a:	55 24       	eor	r5, r5
    1a6c:	32 01       	movw	r6, r4
    1a6e:	0c 94 86 01 	jmp	0x30c	; 0x30c <main+0x27a>
		{
			LCD_vSendChar(read_value);
		}		
		counter = 0;
		while(read_value != '=' && read_value != 'A' && counter < 5)
    1a72:	44 24       	eor	r4, r4
    1a74:	55 24       	eor	r5, r5
    1a76:	32 01       	movw	r6, r4
    1a78:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <main+0x23c>
		{
			read_value = KEYPAD_u8Read('D');
		}
		if (read_value == 'A')
		{
			LCD_vClearScreen();
    1a7c:	0e 94 ce 11 	call	0x239c	; 0x239c <LCD_vClearScreen>
    1a80:	0c 94 67 00 	jmp	0xce	; 0xce <main+0x3c>
    1a84:	79 01       	movw	r14, r18
    1a86:	88 2e       	mov	r8, r24
			}
			LCD_vSendChar(read_value);
			value1 = (value1 * 10) + (read_value - 48);
			counter++;
		}	
		while(read_value != '+' && read_value != '-' && read_value != '/' && read_value != '*' && read_value != 'A' && read_value != '=')
    1a88:	44 24       	eor	r4, r4
    1a8a:	55 24       	eor	r5, r5
    1a8c:	32 01       	movw	r6, r4
    1a8e:	0c 94 67 01 	jmp	0x2ce	; 0x2ce <main+0x23c>

00001a92 <DIO_vsetPinDir>:
#include "MACROS.h"
#include <avr/io.h>

void DIO_vsetPinDir(unsigned char portname, unsigned char pinnumber, unsigned char direction)
{
	switch(portname)
    1a92:	84 34       	cpi	r24, 0x44	; 68
    1a94:	09 f4       	brne	.+2      	; 0x1a98 <DIO_vsetPinDir+0x6>
    1a96:	71 c0       	rjmp	.+226    	; 0x1b7a <DIO_vsetPinDir+0xe8>
    1a98:	85 34       	cpi	r24, 0x45	; 69
    1a9a:	48 f4       	brcc	.+18     	; 0x1aae <DIO_vsetPinDir+0x1c>
    1a9c:	82 34       	cpi	r24, 0x42	; 66
    1a9e:	99 f1       	breq	.+102    	; 0x1b06 <DIO_vsetPinDir+0x74>
    1aa0:	83 34       	cpi	r24, 0x43	; 67
    1aa2:	08 f0       	brcs	.+2      	; 0x1aa6 <DIO_vsetPinDir+0x14>
    1aa4:	4d c0       	rjmp	.+154    	; 0x1b40 <DIO_vsetPinDir+0xae>
    1aa6:	81 34       	cpi	r24, 0x41	; 65
    1aa8:	09 f0       	breq	.+2      	; 0x1aac <DIO_vsetPinDir+0x1a>
    1aaa:	83 c0       	rjmp	.+262    	; 0x1bb2 <DIO_vsetPinDir+0x120>
    1aac:	0f c0       	rjmp	.+30     	; 0x1acc <DIO_vsetPinDir+0x3a>
    1aae:	82 36       	cpi	r24, 0x62	; 98
    1ab0:	51 f1       	breq	.+84     	; 0x1b06 <DIO_vsetPinDir+0x74>
    1ab2:	83 36       	cpi	r24, 0x63	; 99
    1ab4:	20 f4       	brcc	.+8      	; 0x1abe <DIO_vsetPinDir+0x2c>
    1ab6:	81 36       	cpi	r24, 0x61	; 97
    1ab8:	09 f0       	breq	.+2      	; 0x1abc <DIO_vsetPinDir+0x2a>
    1aba:	7b c0       	rjmp	.+246    	; 0x1bb2 <DIO_vsetPinDir+0x120>
    1abc:	07 c0       	rjmp	.+14     	; 0x1acc <DIO_vsetPinDir+0x3a>
    1abe:	83 36       	cpi	r24, 0x63	; 99
    1ac0:	09 f4       	brne	.+2      	; 0x1ac4 <DIO_vsetPinDir+0x32>
    1ac2:	3e c0       	rjmp	.+124    	; 0x1b40 <DIO_vsetPinDir+0xae>
    1ac4:	84 36       	cpi	r24, 0x64	; 100
    1ac6:	09 f0       	breq	.+2      	; 0x1aca <DIO_vsetPinDir+0x38>
    1ac8:	74 c0       	rjmp	.+232    	; 0x1bb2 <DIO_vsetPinDir+0x120>
    1aca:	57 c0       	rjmp	.+174    	; 0x1b7a <DIO_vsetPinDir+0xe8>
	{
		case 'A':
		case 'a':
			if(direction == 1)
    1acc:	41 30       	cpi	r20, 0x01	; 1
    1ace:	69 f4       	brne	.+26     	; 0x1aea <DIO_vsetPinDir+0x58>
			{
				SET_BIT(DDRA, pinnumber);
    1ad0:	2a b3       	in	r18, 0x1a	; 26
    1ad2:	81 e0       	ldi	r24, 0x01	; 1
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	ac 01       	movw	r20, r24
    1ad8:	02 c0       	rjmp	.+4      	; 0x1ade <DIO_vsetPinDir+0x4c>
    1ada:	44 0f       	add	r20, r20
    1adc:	55 1f       	adc	r21, r21
    1ade:	6a 95       	dec	r22
    1ae0:	e2 f7       	brpl	.-8      	; 0x1ada <DIO_vsetPinDir+0x48>
    1ae2:	ba 01       	movw	r22, r20
    1ae4:	62 2b       	or	r22, r18
    1ae6:	6a bb       	out	0x1a, r22	; 26
    1ae8:	08 95       	ret
			}
			else
			{
				CLR_BIT(DDRA, pinnumber);
    1aea:	2a b3       	in	r18, 0x1a	; 26
    1aec:	81 e0       	ldi	r24, 0x01	; 1
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	ac 01       	movw	r20, r24
    1af2:	02 c0       	rjmp	.+4      	; 0x1af8 <DIO_vsetPinDir+0x66>
    1af4:	44 0f       	add	r20, r20
    1af6:	55 1f       	adc	r21, r21
    1af8:	6a 95       	dec	r22
    1afa:	e2 f7       	brpl	.-8      	; 0x1af4 <DIO_vsetPinDir+0x62>
    1afc:	ba 01       	movw	r22, r20
    1afe:	60 95       	com	r22
    1b00:	62 23       	and	r22, r18
    1b02:	6a bb       	out	0x1a, r22	; 26
    1b04:	08 95       	ret
			}
			break;
		case 'B':
		case 'b':
			if(direction == 1)
    1b06:	41 30       	cpi	r20, 0x01	; 1
    1b08:	69 f4       	brne	.+26     	; 0x1b24 <DIO_vsetPinDir+0x92>
			{
				SET_BIT(DDRB, pinnumber);
    1b0a:	27 b3       	in	r18, 0x17	; 23
    1b0c:	81 e0       	ldi	r24, 0x01	; 1
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	ac 01       	movw	r20, r24
    1b12:	02 c0       	rjmp	.+4      	; 0x1b18 <DIO_vsetPinDir+0x86>
    1b14:	44 0f       	add	r20, r20
    1b16:	55 1f       	adc	r21, r21
    1b18:	6a 95       	dec	r22
    1b1a:	e2 f7       	brpl	.-8      	; 0x1b14 <DIO_vsetPinDir+0x82>
    1b1c:	ba 01       	movw	r22, r20
    1b1e:	62 2b       	or	r22, r18
    1b20:	67 bb       	out	0x17, r22	; 23
    1b22:	08 95       	ret
			}
			else 
			{
				CLR_BIT(DDRB, pinnumber);
    1b24:	27 b3       	in	r18, 0x17	; 23
    1b26:	81 e0       	ldi	r24, 0x01	; 1
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	ac 01       	movw	r20, r24
    1b2c:	02 c0       	rjmp	.+4      	; 0x1b32 <DIO_vsetPinDir+0xa0>
    1b2e:	44 0f       	add	r20, r20
    1b30:	55 1f       	adc	r21, r21
    1b32:	6a 95       	dec	r22
    1b34:	e2 f7       	brpl	.-8      	; 0x1b2e <DIO_vsetPinDir+0x9c>
    1b36:	ba 01       	movw	r22, r20
    1b38:	60 95       	com	r22
    1b3a:	62 23       	and	r22, r18
    1b3c:	67 bb       	out	0x17, r22	; 23
    1b3e:	08 95       	ret
			}
			break;
		case 'C':
		case 'c':
			if(direction == 1)
    1b40:	41 30       	cpi	r20, 0x01	; 1
    1b42:	69 f4       	brne	.+26     	; 0x1b5e <DIO_vsetPinDir+0xcc>
			{
				SET_BIT(DDRC, pinnumber);
    1b44:	24 b3       	in	r18, 0x14	; 20
    1b46:	81 e0       	ldi	r24, 0x01	; 1
    1b48:	90 e0       	ldi	r25, 0x00	; 0
    1b4a:	ac 01       	movw	r20, r24
    1b4c:	02 c0       	rjmp	.+4      	; 0x1b52 <DIO_vsetPinDir+0xc0>
    1b4e:	44 0f       	add	r20, r20
    1b50:	55 1f       	adc	r21, r21
    1b52:	6a 95       	dec	r22
    1b54:	e2 f7       	brpl	.-8      	; 0x1b4e <DIO_vsetPinDir+0xbc>
    1b56:	ba 01       	movw	r22, r20
    1b58:	62 2b       	or	r22, r18
    1b5a:	64 bb       	out	0x14, r22	; 20
    1b5c:	08 95       	ret
			}
			else
			{
				CLR_BIT(DDRC, pinnumber);
    1b5e:	24 b3       	in	r18, 0x14	; 20
    1b60:	81 e0       	ldi	r24, 0x01	; 1
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	ac 01       	movw	r20, r24
    1b66:	02 c0       	rjmp	.+4      	; 0x1b6c <DIO_vsetPinDir+0xda>
    1b68:	44 0f       	add	r20, r20
    1b6a:	55 1f       	adc	r21, r21
    1b6c:	6a 95       	dec	r22
    1b6e:	e2 f7       	brpl	.-8      	; 0x1b68 <DIO_vsetPinDir+0xd6>
    1b70:	ba 01       	movw	r22, r20
    1b72:	60 95       	com	r22
    1b74:	62 23       	and	r22, r18
    1b76:	64 bb       	out	0x14, r22	; 20
    1b78:	08 95       	ret
			}
			break;
		case 'D':
		case 'd':
			if(direction == 1)
    1b7a:	41 30       	cpi	r20, 0x01	; 1
    1b7c:	69 f4       	brne	.+26     	; 0x1b98 <DIO_vsetPinDir+0x106>
			{
				SET_BIT(DDRD, pinnumber);
    1b7e:	21 b3       	in	r18, 0x11	; 17
    1b80:	81 e0       	ldi	r24, 0x01	; 1
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	ac 01       	movw	r20, r24
    1b86:	02 c0       	rjmp	.+4      	; 0x1b8c <DIO_vsetPinDir+0xfa>
    1b88:	44 0f       	add	r20, r20
    1b8a:	55 1f       	adc	r21, r21
    1b8c:	6a 95       	dec	r22
    1b8e:	e2 f7       	brpl	.-8      	; 0x1b88 <DIO_vsetPinDir+0xf6>
    1b90:	ba 01       	movw	r22, r20
    1b92:	62 2b       	or	r22, r18
    1b94:	61 bb       	out	0x11, r22	; 17
    1b96:	08 95       	ret
			}
			else
			{
				CLR_BIT(DDRD, pinnumber);
    1b98:	21 b3       	in	r18, 0x11	; 17
    1b9a:	81 e0       	ldi	r24, 0x01	; 1
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	ac 01       	movw	r20, r24
    1ba0:	02 c0       	rjmp	.+4      	; 0x1ba6 <DIO_vsetPinDir+0x114>
    1ba2:	44 0f       	add	r20, r20
    1ba4:	55 1f       	adc	r21, r21
    1ba6:	6a 95       	dec	r22
    1ba8:	e2 f7       	brpl	.-8      	; 0x1ba2 <DIO_vsetPinDir+0x110>
    1baa:	ba 01       	movw	r22, r20
    1bac:	60 95       	com	r22
    1bae:	62 23       	and	r22, r18
    1bb0:	61 bb       	out	0x11, r22	; 17
    1bb2:	08 95       	ret

00001bb4 <DIO_vWritePin>:
	}
}

void DIO_vWritePin(unsigned char portname, unsigned char pinnumber, unsigned char output_value)
{
	switch(portname)
    1bb4:	84 34       	cpi	r24, 0x44	; 68
    1bb6:	09 f4       	brne	.+2      	; 0x1bba <DIO_vWritePin+0x6>
    1bb8:	71 c0       	rjmp	.+226    	; 0x1c9c <DIO_vWritePin+0xe8>
    1bba:	85 34       	cpi	r24, 0x45	; 69
    1bbc:	48 f4       	brcc	.+18     	; 0x1bd0 <DIO_vWritePin+0x1c>
    1bbe:	82 34       	cpi	r24, 0x42	; 66
    1bc0:	99 f1       	breq	.+102    	; 0x1c28 <DIO_vWritePin+0x74>
    1bc2:	83 34       	cpi	r24, 0x43	; 67
    1bc4:	08 f0       	brcs	.+2      	; 0x1bc8 <DIO_vWritePin+0x14>
    1bc6:	4d c0       	rjmp	.+154    	; 0x1c62 <DIO_vWritePin+0xae>
    1bc8:	81 34       	cpi	r24, 0x41	; 65
    1bca:	09 f0       	breq	.+2      	; 0x1bce <DIO_vWritePin+0x1a>
    1bcc:	83 c0       	rjmp	.+262    	; 0x1cd4 <DIO_vWritePin+0x120>
    1bce:	0f c0       	rjmp	.+30     	; 0x1bee <DIO_vWritePin+0x3a>
    1bd0:	82 36       	cpi	r24, 0x62	; 98
    1bd2:	51 f1       	breq	.+84     	; 0x1c28 <DIO_vWritePin+0x74>
    1bd4:	83 36       	cpi	r24, 0x63	; 99
    1bd6:	20 f4       	brcc	.+8      	; 0x1be0 <DIO_vWritePin+0x2c>
    1bd8:	81 36       	cpi	r24, 0x61	; 97
    1bda:	09 f0       	breq	.+2      	; 0x1bde <DIO_vWritePin+0x2a>
    1bdc:	7b c0       	rjmp	.+246    	; 0x1cd4 <DIO_vWritePin+0x120>
    1bde:	07 c0       	rjmp	.+14     	; 0x1bee <DIO_vWritePin+0x3a>
    1be0:	83 36       	cpi	r24, 0x63	; 99
    1be2:	09 f4       	brne	.+2      	; 0x1be6 <DIO_vWritePin+0x32>
    1be4:	3e c0       	rjmp	.+124    	; 0x1c62 <DIO_vWritePin+0xae>
    1be6:	84 36       	cpi	r24, 0x64	; 100
    1be8:	09 f0       	breq	.+2      	; 0x1bec <DIO_vWritePin+0x38>
    1bea:	74 c0       	rjmp	.+232    	; 0x1cd4 <DIO_vWritePin+0x120>
    1bec:	57 c0       	rjmp	.+174    	; 0x1c9c <DIO_vWritePin+0xe8>
	{
		case 'A':
		case 'a':
			if(output_value == 1)
    1bee:	41 30       	cpi	r20, 0x01	; 1
    1bf0:	69 f4       	brne	.+26     	; 0x1c0c <DIO_vWritePin+0x58>
			{
				SET_BIT(PORTA, pinnumber);
    1bf2:	2b b3       	in	r18, 0x1b	; 27
    1bf4:	81 e0       	ldi	r24, 0x01	; 1
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	ac 01       	movw	r20, r24
    1bfa:	02 c0       	rjmp	.+4      	; 0x1c00 <DIO_vWritePin+0x4c>
    1bfc:	44 0f       	add	r20, r20
    1bfe:	55 1f       	adc	r21, r21
    1c00:	6a 95       	dec	r22
    1c02:	e2 f7       	brpl	.-8      	; 0x1bfc <DIO_vWritePin+0x48>
    1c04:	ba 01       	movw	r22, r20
    1c06:	62 2b       	or	r22, r18
    1c08:	6b bb       	out	0x1b, r22	; 27
    1c0a:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTA, pinnumber);
    1c0c:	2b b3       	in	r18, 0x1b	; 27
    1c0e:	81 e0       	ldi	r24, 0x01	; 1
    1c10:	90 e0       	ldi	r25, 0x00	; 0
    1c12:	ac 01       	movw	r20, r24
    1c14:	02 c0       	rjmp	.+4      	; 0x1c1a <DIO_vWritePin+0x66>
    1c16:	44 0f       	add	r20, r20
    1c18:	55 1f       	adc	r21, r21
    1c1a:	6a 95       	dec	r22
    1c1c:	e2 f7       	brpl	.-8      	; 0x1c16 <DIO_vWritePin+0x62>
    1c1e:	ba 01       	movw	r22, r20
    1c20:	60 95       	com	r22
    1c22:	62 23       	and	r22, r18
    1c24:	6b bb       	out	0x1b, r22	; 27
    1c26:	08 95       	ret
			}
			break;
		case 'B':
		case 'b':
			if(output_value == 1)
    1c28:	41 30       	cpi	r20, 0x01	; 1
    1c2a:	69 f4       	brne	.+26     	; 0x1c46 <DIO_vWritePin+0x92>
			{
				SET_BIT(PORTB, pinnumber);
    1c2c:	28 b3       	in	r18, 0x18	; 24
    1c2e:	81 e0       	ldi	r24, 0x01	; 1
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	ac 01       	movw	r20, r24
    1c34:	02 c0       	rjmp	.+4      	; 0x1c3a <DIO_vWritePin+0x86>
    1c36:	44 0f       	add	r20, r20
    1c38:	55 1f       	adc	r21, r21
    1c3a:	6a 95       	dec	r22
    1c3c:	e2 f7       	brpl	.-8      	; 0x1c36 <DIO_vWritePin+0x82>
    1c3e:	ba 01       	movw	r22, r20
    1c40:	62 2b       	or	r22, r18
    1c42:	68 bb       	out	0x18, r22	; 24
    1c44:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTB, pinnumber);
    1c46:	28 b3       	in	r18, 0x18	; 24
    1c48:	81 e0       	ldi	r24, 0x01	; 1
    1c4a:	90 e0       	ldi	r25, 0x00	; 0
    1c4c:	ac 01       	movw	r20, r24
    1c4e:	02 c0       	rjmp	.+4      	; 0x1c54 <DIO_vWritePin+0xa0>
    1c50:	44 0f       	add	r20, r20
    1c52:	55 1f       	adc	r21, r21
    1c54:	6a 95       	dec	r22
    1c56:	e2 f7       	brpl	.-8      	; 0x1c50 <DIO_vWritePin+0x9c>
    1c58:	ba 01       	movw	r22, r20
    1c5a:	60 95       	com	r22
    1c5c:	62 23       	and	r22, r18
    1c5e:	68 bb       	out	0x18, r22	; 24
    1c60:	08 95       	ret
			}
			break;
		case 'C':
		case 'c':
			if(output_value == 1)
    1c62:	41 30       	cpi	r20, 0x01	; 1
    1c64:	69 f4       	brne	.+26     	; 0x1c80 <DIO_vWritePin+0xcc>
			{
				SET_BIT(PORTC, pinnumber);
    1c66:	25 b3       	in	r18, 0x15	; 21
    1c68:	81 e0       	ldi	r24, 0x01	; 1
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	ac 01       	movw	r20, r24
    1c6e:	02 c0       	rjmp	.+4      	; 0x1c74 <DIO_vWritePin+0xc0>
    1c70:	44 0f       	add	r20, r20
    1c72:	55 1f       	adc	r21, r21
    1c74:	6a 95       	dec	r22
    1c76:	e2 f7       	brpl	.-8      	; 0x1c70 <DIO_vWritePin+0xbc>
    1c78:	ba 01       	movw	r22, r20
    1c7a:	62 2b       	or	r22, r18
    1c7c:	65 bb       	out	0x15, r22	; 21
    1c7e:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTC, pinnumber);
    1c80:	25 b3       	in	r18, 0x15	; 21
    1c82:	81 e0       	ldi	r24, 0x01	; 1
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	ac 01       	movw	r20, r24
    1c88:	02 c0       	rjmp	.+4      	; 0x1c8e <DIO_vWritePin+0xda>
    1c8a:	44 0f       	add	r20, r20
    1c8c:	55 1f       	adc	r21, r21
    1c8e:	6a 95       	dec	r22
    1c90:	e2 f7       	brpl	.-8      	; 0x1c8a <DIO_vWritePin+0xd6>
    1c92:	ba 01       	movw	r22, r20
    1c94:	60 95       	com	r22
    1c96:	62 23       	and	r22, r18
    1c98:	65 bb       	out	0x15, r22	; 21
    1c9a:	08 95       	ret
			}	
			break;
		case 'D':
		case 'd':
			if(output_value == 1)
    1c9c:	41 30       	cpi	r20, 0x01	; 1
    1c9e:	69 f4       	brne	.+26     	; 0x1cba <DIO_vWritePin+0x106>
			{
				SET_BIT(PORTD, pinnumber);
    1ca0:	22 b3       	in	r18, 0x12	; 18
    1ca2:	81 e0       	ldi	r24, 0x01	; 1
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	ac 01       	movw	r20, r24
    1ca8:	02 c0       	rjmp	.+4      	; 0x1cae <DIO_vWritePin+0xfa>
    1caa:	44 0f       	add	r20, r20
    1cac:	55 1f       	adc	r21, r21
    1cae:	6a 95       	dec	r22
    1cb0:	e2 f7       	brpl	.-8      	; 0x1caa <DIO_vWritePin+0xf6>
    1cb2:	ba 01       	movw	r22, r20
    1cb4:	62 2b       	or	r22, r18
    1cb6:	62 bb       	out	0x12, r22	; 18
    1cb8:	08 95       	ret
			}			
			else
			{
				CLR_BIT(PORTD, pinnumber);
    1cba:	22 b3       	in	r18, 0x12	; 18
    1cbc:	81 e0       	ldi	r24, 0x01	; 1
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	ac 01       	movw	r20, r24
    1cc2:	02 c0       	rjmp	.+4      	; 0x1cc8 <DIO_vWritePin+0x114>
    1cc4:	44 0f       	add	r20, r20
    1cc6:	55 1f       	adc	r21, r21
    1cc8:	6a 95       	dec	r22
    1cca:	e2 f7       	brpl	.-8      	; 0x1cc4 <DIO_vWritePin+0x110>
    1ccc:	ba 01       	movw	r22, r20
    1cce:	60 95       	com	r22
    1cd0:	62 23       	and	r22, r18
    1cd2:	62 bb       	out	0x12, r22	; 18
    1cd4:	08 95       	ret

00001cd6 <DIO_vTogglePin>:
	}
}

void DIO_vTogglePin(unsigned char portname, unsigned char pinnumber)
{
	switch(portname)
    1cd6:	84 34       	cpi	r24, 0x44	; 68
    1cd8:	09 f4       	brne	.+2      	; 0x1cdc <DIO_vTogglePin+0x6>
    1cda:	3d c0       	rjmp	.+122    	; 0x1d56 <DIO_vTogglePin+0x80>
    1cdc:	85 34       	cpi	r24, 0x45	; 69
    1cde:	40 f4       	brcc	.+16     	; 0x1cf0 <DIO_vTogglePin+0x1a>
    1ce0:	82 34       	cpi	r24, 0x42	; 66
    1ce2:	f9 f0       	breq	.+62     	; 0x1d22 <DIO_vTogglePin+0x4c>
    1ce4:	83 34       	cpi	r24, 0x43	; 67
    1ce6:	50 f5       	brcc	.+84     	; 0x1d3c <DIO_vTogglePin+0x66>
    1ce8:	81 34       	cpi	r24, 0x41	; 65
    1cea:	09 f0       	breq	.+2      	; 0x1cee <DIO_vTogglePin+0x18>
    1cec:	40 c0       	rjmp	.+128    	; 0x1d6e <DIO_vTogglePin+0x98>
    1cee:	0c c0       	rjmp	.+24     	; 0x1d08 <DIO_vTogglePin+0x32>
    1cf0:	82 36       	cpi	r24, 0x62	; 98
    1cf2:	b9 f0       	breq	.+46     	; 0x1d22 <DIO_vTogglePin+0x4c>
    1cf4:	83 36       	cpi	r24, 0x63	; 99
    1cf6:	18 f4       	brcc	.+6      	; 0x1cfe <DIO_vTogglePin+0x28>
    1cf8:	81 36       	cpi	r24, 0x61	; 97
    1cfa:	c9 f5       	brne	.+114    	; 0x1d6e <DIO_vTogglePin+0x98>
    1cfc:	05 c0       	rjmp	.+10     	; 0x1d08 <DIO_vTogglePin+0x32>
    1cfe:	83 36       	cpi	r24, 0x63	; 99
    1d00:	e9 f0       	breq	.+58     	; 0x1d3c <DIO_vTogglePin+0x66>
    1d02:	84 36       	cpi	r24, 0x64	; 100
    1d04:	a1 f5       	brne	.+104    	; 0x1d6e <DIO_vTogglePin+0x98>
    1d06:	27 c0       	rjmp	.+78     	; 0x1d56 <DIO_vTogglePin+0x80>
	{
		case 'A':
		case 'a':
			TOG_BIT(PORTA, pinnumber);
    1d08:	2b b3       	in	r18, 0x1b	; 27
    1d0a:	81 e0       	ldi	r24, 0x01	; 1
    1d0c:	90 e0       	ldi	r25, 0x00	; 0
    1d0e:	ac 01       	movw	r20, r24
    1d10:	02 c0       	rjmp	.+4      	; 0x1d16 <DIO_vTogglePin+0x40>
    1d12:	44 0f       	add	r20, r20
    1d14:	55 1f       	adc	r21, r21
    1d16:	6a 95       	dec	r22
    1d18:	e2 f7       	brpl	.-8      	; 0x1d12 <DIO_vTogglePin+0x3c>
    1d1a:	ba 01       	movw	r22, r20
    1d1c:	62 27       	eor	r22, r18
    1d1e:	6b bb       	out	0x1b, r22	; 27
			break;
    1d20:	08 95       	ret
		case 'B':
		case 'b':
			TOG_BIT(PORTB, pinnumber);
    1d22:	28 b3       	in	r18, 0x18	; 24
    1d24:	81 e0       	ldi	r24, 0x01	; 1
    1d26:	90 e0       	ldi	r25, 0x00	; 0
    1d28:	ac 01       	movw	r20, r24
    1d2a:	02 c0       	rjmp	.+4      	; 0x1d30 <DIO_vTogglePin+0x5a>
    1d2c:	44 0f       	add	r20, r20
    1d2e:	55 1f       	adc	r21, r21
    1d30:	6a 95       	dec	r22
    1d32:	e2 f7       	brpl	.-8      	; 0x1d2c <DIO_vTogglePin+0x56>
    1d34:	ba 01       	movw	r22, r20
    1d36:	62 27       	eor	r22, r18
    1d38:	68 bb       	out	0x18, r22	; 24
			break;
    1d3a:	08 95       	ret
		case 'C':
		case 'c':
			TOG_BIT(PORTC, pinnumber);
    1d3c:	25 b3       	in	r18, 0x15	; 21
    1d3e:	81 e0       	ldi	r24, 0x01	; 1
    1d40:	90 e0       	ldi	r25, 0x00	; 0
    1d42:	ac 01       	movw	r20, r24
    1d44:	02 c0       	rjmp	.+4      	; 0x1d4a <DIO_vTogglePin+0x74>
    1d46:	44 0f       	add	r20, r20
    1d48:	55 1f       	adc	r21, r21
    1d4a:	6a 95       	dec	r22
    1d4c:	e2 f7       	brpl	.-8      	; 0x1d46 <DIO_vTogglePin+0x70>
    1d4e:	ba 01       	movw	r22, r20
    1d50:	62 27       	eor	r22, r18
    1d52:	65 bb       	out	0x15, r22	; 21
			break;
    1d54:	08 95       	ret
		case 'D':
		case 'd':
			TOG_BIT(PORTD, pinnumber);
    1d56:	22 b3       	in	r18, 0x12	; 18
    1d58:	81 e0       	ldi	r24, 0x01	; 1
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	ac 01       	movw	r20, r24
    1d5e:	02 c0       	rjmp	.+4      	; 0x1d64 <DIO_vTogglePin+0x8e>
    1d60:	44 0f       	add	r20, r20
    1d62:	55 1f       	adc	r21, r21
    1d64:	6a 95       	dec	r22
    1d66:	e2 f7       	brpl	.-8      	; 0x1d60 <DIO_vTogglePin+0x8a>
    1d68:	ba 01       	movw	r22, r20
    1d6a:	62 27       	eor	r22, r18
    1d6c:	62 bb       	out	0x12, r22	; 18
    1d6e:	08 95       	ret

00001d70 <DIO_u8ReadPin>:
}

unsigned char DIO_u8ReadPin(unsigned char portname, unsigned char pinnumber)
{
	unsigned char return_value = 0;
	switch(portname)
    1d70:	84 34       	cpi	r24, 0x44	; 68
    1d72:	09 f4       	brne	.+2      	; 0x1d76 <DIO_u8ReadPin+0x6>
    1d74:	4e c0       	rjmp	.+156    	; 0x1e12 <DIO_u8ReadPin+0xa2>
    1d76:	85 34       	cpi	r24, 0x45	; 69
    1d78:	40 f4       	brcc	.+16     	; 0x1d8a <DIO_u8ReadPin+0x1a>
    1d7a:	82 34       	cpi	r24, 0x42	; 66
    1d7c:	31 f1       	breq	.+76     	; 0x1dca <DIO_u8ReadPin+0x5a>
    1d7e:	83 34       	cpi	r24, 0x43	; 67
    1d80:	b0 f5       	brcc	.+108    	; 0x1dee <DIO_u8ReadPin+0x7e>
    1d82:	81 34       	cpi	r24, 0x41	; 65
    1d84:	09 f0       	breq	.+2      	; 0x1d88 <DIO_u8ReadPin+0x18>
    1d86:	57 c0       	rjmp	.+174    	; 0x1e36 <DIO_u8ReadPin+0xc6>
    1d88:	0e c0       	rjmp	.+28     	; 0x1da6 <DIO_u8ReadPin+0x36>
    1d8a:	82 36       	cpi	r24, 0x62	; 98
    1d8c:	f1 f0       	breq	.+60     	; 0x1dca <DIO_u8ReadPin+0x5a>
    1d8e:	83 36       	cpi	r24, 0x63	; 99
    1d90:	20 f4       	brcc	.+8      	; 0x1d9a <DIO_u8ReadPin+0x2a>
    1d92:	81 36       	cpi	r24, 0x61	; 97
    1d94:	09 f0       	breq	.+2      	; 0x1d98 <DIO_u8ReadPin+0x28>
    1d96:	4f c0       	rjmp	.+158    	; 0x1e36 <DIO_u8ReadPin+0xc6>
    1d98:	06 c0       	rjmp	.+12     	; 0x1da6 <DIO_u8ReadPin+0x36>
    1d9a:	83 36       	cpi	r24, 0x63	; 99
    1d9c:	41 f1       	breq	.+80     	; 0x1dee <DIO_u8ReadPin+0x7e>
    1d9e:	84 36       	cpi	r24, 0x64	; 100
    1da0:	09 f0       	breq	.+2      	; 0x1da4 <DIO_u8ReadPin+0x34>
    1da2:	49 c0       	rjmp	.+146    	; 0x1e36 <DIO_u8ReadPin+0xc6>
    1da4:	36 c0       	rjmp	.+108    	; 0x1e12 <DIO_u8ReadPin+0xa2>
	{
		case 'A':
		case 'a':
			return_value = READ_BIT(PINA, pinnumber);
    1da6:	29 b3       	in	r18, 0x19	; 25
    1da8:	81 e0       	ldi	r24, 0x01	; 1
    1daa:	90 e0       	ldi	r25, 0x00	; 0
    1dac:	06 2e       	mov	r0, r22
    1dae:	02 c0       	rjmp	.+4      	; 0x1db4 <DIO_u8ReadPin+0x44>
    1db0:	88 0f       	add	r24, r24
    1db2:	99 1f       	adc	r25, r25
    1db4:	0a 94       	dec	r0
    1db6:	e2 f7       	brpl	.-8      	; 0x1db0 <DIO_u8ReadPin+0x40>
    1db8:	30 e0       	ldi	r19, 0x00	; 0
    1dba:	82 23       	and	r24, r18
    1dbc:	93 23       	and	r25, r19
    1dbe:	02 c0       	rjmp	.+4      	; 0x1dc4 <DIO_u8ReadPin+0x54>
    1dc0:	95 95       	asr	r25
    1dc2:	87 95       	ror	r24
    1dc4:	6a 95       	dec	r22
    1dc6:	e2 f7       	brpl	.-8      	; 0x1dc0 <DIO_u8ReadPin+0x50>
			break;
    1dc8:	08 95       	ret
		case 'B':
		case 'b':
			return_value = READ_BIT(PINB, pinnumber);
    1dca:	26 b3       	in	r18, 0x16	; 22
    1dcc:	81 e0       	ldi	r24, 0x01	; 1
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	06 2e       	mov	r0, r22
    1dd2:	02 c0       	rjmp	.+4      	; 0x1dd8 <DIO_u8ReadPin+0x68>
    1dd4:	88 0f       	add	r24, r24
    1dd6:	99 1f       	adc	r25, r25
    1dd8:	0a 94       	dec	r0
    1dda:	e2 f7       	brpl	.-8      	; 0x1dd4 <DIO_u8ReadPin+0x64>
    1ddc:	30 e0       	ldi	r19, 0x00	; 0
    1dde:	82 23       	and	r24, r18
    1de0:	93 23       	and	r25, r19
    1de2:	02 c0       	rjmp	.+4      	; 0x1de8 <DIO_u8ReadPin+0x78>
    1de4:	95 95       	asr	r25
    1de6:	87 95       	ror	r24
    1de8:	6a 95       	dec	r22
    1dea:	e2 f7       	brpl	.-8      	; 0x1de4 <DIO_u8ReadPin+0x74>
			break;
    1dec:	08 95       	ret
		case 'C':
		case 'c':
			return_value = READ_BIT(PINC, pinnumber);
    1dee:	23 b3       	in	r18, 0x13	; 19
    1df0:	81 e0       	ldi	r24, 0x01	; 1
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	06 2e       	mov	r0, r22
    1df6:	02 c0       	rjmp	.+4      	; 0x1dfc <DIO_u8ReadPin+0x8c>
    1df8:	88 0f       	add	r24, r24
    1dfa:	99 1f       	adc	r25, r25
    1dfc:	0a 94       	dec	r0
    1dfe:	e2 f7       	brpl	.-8      	; 0x1df8 <DIO_u8ReadPin+0x88>
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	82 23       	and	r24, r18
    1e04:	93 23       	and	r25, r19
    1e06:	02 c0       	rjmp	.+4      	; 0x1e0c <DIO_u8ReadPin+0x9c>
    1e08:	95 95       	asr	r25
    1e0a:	87 95       	ror	r24
    1e0c:	6a 95       	dec	r22
    1e0e:	e2 f7       	brpl	.-8      	; 0x1e08 <DIO_u8ReadPin+0x98>
			break;
    1e10:	08 95       	ret
		case 'D':
		case 'd':
			return_value = READ_BIT(PIND, pinnumber);
    1e12:	20 b3       	in	r18, 0x10	; 16
    1e14:	81 e0       	ldi	r24, 0x01	; 1
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	06 2e       	mov	r0, r22
    1e1a:	02 c0       	rjmp	.+4      	; 0x1e20 <DIO_u8ReadPin+0xb0>
    1e1c:	88 0f       	add	r24, r24
    1e1e:	99 1f       	adc	r25, r25
    1e20:	0a 94       	dec	r0
    1e22:	e2 f7       	brpl	.-8      	; 0x1e1c <DIO_u8ReadPin+0xac>
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	82 23       	and	r24, r18
    1e28:	93 23       	and	r25, r19
    1e2a:	02 c0       	rjmp	.+4      	; 0x1e30 <DIO_u8ReadPin+0xc0>
    1e2c:	95 95       	asr	r25
    1e2e:	87 95       	ror	r24
    1e30:	6a 95       	dec	r22
    1e32:	e2 f7       	brpl	.-8      	; 0x1e2c <DIO_u8ReadPin+0xbc>
			break;
    1e34:	08 95       	ret
	}
}

unsigned char DIO_u8ReadPin(unsigned char portname, unsigned char pinnumber)
{
	unsigned char return_value = 0;
    1e36:	80 e0       	ldi	r24, 0x00	; 0
			break;
		default:
			break;
	}
	return return_value;
}
    1e38:	08 95       	ret

00001e3a <DIO_vSetPortDirection>:

void DIO_vSetPortDirection(unsigned char portname, unsigned char direction)
{
	switch(portname)
    1e3a:	84 34       	cpi	r24, 0x44	; 68
    1e3c:	d9 f0       	breq	.+54     	; 0x1e74 <DIO_vSetPortDirection+0x3a>
    1e3e:	85 34       	cpi	r24, 0x45	; 69
    1e40:	38 f4       	brcc	.+14     	; 0x1e50 <DIO_vSetPortDirection+0x16>
    1e42:	82 34       	cpi	r24, 0x42	; 66
    1e44:	99 f0       	breq	.+38     	; 0x1e6c <DIO_vSetPortDirection+0x32>
    1e46:	83 34       	cpi	r24, 0x43	; 67
    1e48:	98 f4       	brcc	.+38     	; 0x1e70 <DIO_vSetPortDirection+0x36>
    1e4a:	81 34       	cpi	r24, 0x41	; 65
    1e4c:	a1 f4       	brne	.+40     	; 0x1e76 <DIO_vSetPortDirection+0x3c>
    1e4e:	0c c0       	rjmp	.+24     	; 0x1e68 <DIO_vSetPortDirection+0x2e>
    1e50:	82 36       	cpi	r24, 0x62	; 98
    1e52:	61 f0       	breq	.+24     	; 0x1e6c <DIO_vSetPortDirection+0x32>
    1e54:	83 36       	cpi	r24, 0x63	; 99
    1e56:	18 f4       	brcc	.+6      	; 0x1e5e <DIO_vSetPortDirection+0x24>
    1e58:	81 36       	cpi	r24, 0x61	; 97
    1e5a:	69 f4       	brne	.+26     	; 0x1e76 <DIO_vSetPortDirection+0x3c>
    1e5c:	05 c0       	rjmp	.+10     	; 0x1e68 <DIO_vSetPortDirection+0x2e>
    1e5e:	83 36       	cpi	r24, 0x63	; 99
    1e60:	39 f0       	breq	.+14     	; 0x1e70 <DIO_vSetPortDirection+0x36>
    1e62:	84 36       	cpi	r24, 0x64	; 100
    1e64:	41 f4       	brne	.+16     	; 0x1e76 <DIO_vSetPortDirection+0x3c>
    1e66:	06 c0       	rjmp	.+12     	; 0x1e74 <DIO_vSetPortDirection+0x3a>
	{
		case 'A':
		case 'a':
			DDRA = direction;
    1e68:	6a bb       	out	0x1a, r22	; 26
			break;
    1e6a:	08 95       	ret
		case 'B':
		case 'b':
			DDRB = direction;
    1e6c:	67 bb       	out	0x17, r22	; 23
			break;
    1e6e:	08 95       	ret
		case 'C':
		case 'c':
			DDRC = direction;
    1e70:	64 bb       	out	0x14, r22	; 20
			break;
    1e72:	08 95       	ret
		case 'D':
		case 'd':
			DDRD = direction;
    1e74:	61 bb       	out	0x11, r22	; 17
    1e76:	08 95       	ret

00001e78 <DIO_vWritePort>:
	}
}

void DIO_vWritePort(unsigned char portname, unsigned char portvalue)
{
	switch(portname)
    1e78:	84 34       	cpi	r24, 0x44	; 68
    1e7a:	d9 f0       	breq	.+54     	; 0x1eb2 <DIO_vWritePort+0x3a>
    1e7c:	85 34       	cpi	r24, 0x45	; 69
    1e7e:	38 f4       	brcc	.+14     	; 0x1e8e <DIO_vWritePort+0x16>
    1e80:	82 34       	cpi	r24, 0x42	; 66
    1e82:	99 f0       	breq	.+38     	; 0x1eaa <DIO_vWritePort+0x32>
    1e84:	83 34       	cpi	r24, 0x43	; 67
    1e86:	98 f4       	brcc	.+38     	; 0x1eae <DIO_vWritePort+0x36>
    1e88:	81 34       	cpi	r24, 0x41	; 65
    1e8a:	a1 f4       	brne	.+40     	; 0x1eb4 <DIO_vWritePort+0x3c>
    1e8c:	0c c0       	rjmp	.+24     	; 0x1ea6 <DIO_vWritePort+0x2e>
    1e8e:	82 36       	cpi	r24, 0x62	; 98
    1e90:	61 f0       	breq	.+24     	; 0x1eaa <DIO_vWritePort+0x32>
    1e92:	83 36       	cpi	r24, 0x63	; 99
    1e94:	18 f4       	brcc	.+6      	; 0x1e9c <DIO_vWritePort+0x24>
    1e96:	81 36       	cpi	r24, 0x61	; 97
    1e98:	69 f4       	brne	.+26     	; 0x1eb4 <DIO_vWritePort+0x3c>
    1e9a:	05 c0       	rjmp	.+10     	; 0x1ea6 <DIO_vWritePort+0x2e>
    1e9c:	83 36       	cpi	r24, 0x63	; 99
    1e9e:	39 f0       	breq	.+14     	; 0x1eae <DIO_vWritePort+0x36>
    1ea0:	84 36       	cpi	r24, 0x64	; 100
    1ea2:	41 f4       	brne	.+16     	; 0x1eb4 <DIO_vWritePort+0x3c>
    1ea4:	06 c0       	rjmp	.+12     	; 0x1eb2 <DIO_vWritePort+0x3a>
	{
		case 'A':
		case 'a':
			PORTA = portvalue;
    1ea6:	6b bb       	out	0x1b, r22	; 27
			break;
    1ea8:	08 95       	ret
		case 'B':
		case 'b':
			PORTB = portvalue;
    1eaa:	68 bb       	out	0x18, r22	; 24
			break;
    1eac:	08 95       	ret
		case 'C':
		case 'c':
			PORTC = portvalue;
    1eae:	65 bb       	out	0x15, r22	; 21
			break;
    1eb0:	08 95       	ret
		case 'D':
		case 'd':
			PORTD = portvalue;
    1eb2:	62 bb       	out	0x12, r22	; 18
    1eb4:	08 95       	ret

00001eb6 <DIO_u8ReadPort>:
}

unsigned char DIO_u8ReadPort(unsigned char portname)
{
	unsigned char return_value = 0;
	switch(portname)
    1eb6:	84 34       	cpi	r24, 0x44	; 68
    1eb8:	d9 f0       	breq	.+54     	; 0x1ef0 <DIO_u8ReadPort+0x3a>
    1eba:	85 34       	cpi	r24, 0x45	; 69
    1ebc:	38 f4       	brcc	.+14     	; 0x1ecc <DIO_u8ReadPort+0x16>
    1ebe:	82 34       	cpi	r24, 0x42	; 66
    1ec0:	99 f0       	breq	.+38     	; 0x1ee8 <DIO_u8ReadPort+0x32>
    1ec2:	83 34       	cpi	r24, 0x43	; 67
    1ec4:	98 f4       	brcc	.+38     	; 0x1eec <DIO_u8ReadPort+0x36>
    1ec6:	81 34       	cpi	r24, 0x41	; 65
    1ec8:	a9 f4       	brne	.+42     	; 0x1ef4 <DIO_u8ReadPort+0x3e>
    1eca:	0c c0       	rjmp	.+24     	; 0x1ee4 <DIO_u8ReadPort+0x2e>
    1ecc:	82 36       	cpi	r24, 0x62	; 98
    1ece:	61 f0       	breq	.+24     	; 0x1ee8 <DIO_u8ReadPort+0x32>
    1ed0:	83 36       	cpi	r24, 0x63	; 99
    1ed2:	18 f4       	brcc	.+6      	; 0x1eda <DIO_u8ReadPort+0x24>
    1ed4:	81 36       	cpi	r24, 0x61	; 97
    1ed6:	71 f4       	brne	.+28     	; 0x1ef4 <DIO_u8ReadPort+0x3e>
    1ed8:	05 c0       	rjmp	.+10     	; 0x1ee4 <DIO_u8ReadPort+0x2e>
    1eda:	83 36       	cpi	r24, 0x63	; 99
    1edc:	39 f0       	breq	.+14     	; 0x1eec <DIO_u8ReadPort+0x36>
    1ede:	84 36       	cpi	r24, 0x64	; 100
    1ee0:	49 f4       	brne	.+18     	; 0x1ef4 <DIO_u8ReadPort+0x3e>
    1ee2:	06 c0       	rjmp	.+12     	; 0x1ef0 <DIO_u8ReadPort+0x3a>
	{
		case 'A':
		case 'a':
			return_value = PINA;
    1ee4:	89 b3       	in	r24, 0x19	; 25
			break;
    1ee6:	08 95       	ret
		case 'B':
		case 'b':
			return_value = PINB;
    1ee8:	86 b3       	in	r24, 0x16	; 22
			break;
    1eea:	08 95       	ret
		case 'C':
		case 'c':
			return_value = PINC;
    1eec:	83 b3       	in	r24, 0x13	; 19
			break;
    1eee:	08 95       	ret
		case 'D':
		case 'd':
			return_value = PIND;
    1ef0:	80 b3       	in	r24, 0x10	; 16
			break;
    1ef2:	08 95       	ret
	}
}

unsigned char DIO_u8ReadPort(unsigned char portname)
{
	unsigned char return_value = 0;
    1ef4:	80 e0       	ldi	r24, 0x00	; 0
			break;
		default:
			break;
	}
	return return_value;
}
    1ef6:	08 95       	ret

00001ef8 <DIO_vTogglePort>:

void DIO_vTogglePort(unsigned char portname)
{
	switch (portname)
    1ef8:	84 34       	cpi	r24, 0x44	; 68
    1efa:	09 f1       	breq	.+66     	; 0x1f3e <DIO_vTogglePort+0x46>
    1efc:	85 34       	cpi	r24, 0x45	; 69
    1efe:	38 f4       	brcc	.+14     	; 0x1f0e <DIO_vTogglePort+0x16>
    1f00:	82 34       	cpi	r24, 0x42	; 66
    1f02:	a9 f0       	breq	.+42     	; 0x1f2e <DIO_vTogglePort+0x36>
    1f04:	83 34       	cpi	r24, 0x43	; 67
    1f06:	b8 f4       	brcc	.+46     	; 0x1f36 <DIO_vTogglePort+0x3e>
    1f08:	81 34       	cpi	r24, 0x41	; 65
    1f0a:	e1 f4       	brne	.+56     	; 0x1f44 <DIO_vTogglePort+0x4c>
    1f0c:	0c c0       	rjmp	.+24     	; 0x1f26 <DIO_vTogglePort+0x2e>
    1f0e:	82 36       	cpi	r24, 0x62	; 98
    1f10:	71 f0       	breq	.+28     	; 0x1f2e <DIO_vTogglePort+0x36>
    1f12:	83 36       	cpi	r24, 0x63	; 99
    1f14:	18 f4       	brcc	.+6      	; 0x1f1c <DIO_vTogglePort+0x24>
    1f16:	81 36       	cpi	r24, 0x61	; 97
    1f18:	a9 f4       	brne	.+42     	; 0x1f44 <DIO_vTogglePort+0x4c>
    1f1a:	05 c0       	rjmp	.+10     	; 0x1f26 <DIO_vTogglePort+0x2e>
    1f1c:	83 36       	cpi	r24, 0x63	; 99
    1f1e:	59 f0       	breq	.+22     	; 0x1f36 <DIO_vTogglePort+0x3e>
    1f20:	84 36       	cpi	r24, 0x64	; 100
    1f22:	81 f4       	brne	.+32     	; 0x1f44 <DIO_vTogglePort+0x4c>
    1f24:	0c c0       	rjmp	.+24     	; 0x1f3e <DIO_vTogglePort+0x46>
	{
		case 'A':
		case 'a':
			PORTA = ~PORTA;
    1f26:	8b b3       	in	r24, 0x1b	; 27
    1f28:	80 95       	com	r24
    1f2a:	8b bb       	out	0x1b, r24	; 27
			break;
    1f2c:	08 95       	ret
		case 'B':
		case 'b':
			PORTB = ~PORTB;
    1f2e:	88 b3       	in	r24, 0x18	; 24
    1f30:	80 95       	com	r24
    1f32:	88 bb       	out	0x18, r24	; 24
			break;
    1f34:	08 95       	ret
		case 'C':
		case 'c':
			PORTC = ~PORTC;
    1f36:	85 b3       	in	r24, 0x15	; 21
    1f38:	80 95       	com	r24
    1f3a:	85 bb       	out	0x15, r24	; 21
			break;
    1f3c:	08 95       	ret
		case 'D':
		case 'd':
			PORTD = ~PORTD;
    1f3e:	82 b3       	in	r24, 0x12	; 18
    1f40:	80 95       	com	r24
    1f42:	82 bb       	out	0x12, r24	; 18
    1f44:	08 95       	ret

00001f46 <DIO_vConnectInternalPullUp>:
	}
}

void DIO_vConnectInternalPullUp(unsigned char portname, unsigned char pinnumber, unsigned char enable)
{
	switch(portname)
    1f46:	84 34       	cpi	r24, 0x44	; 68
    1f48:	09 f4       	brne	.+2      	; 0x1f4c <DIO_vConnectInternalPullUp+0x6>
    1f4a:	71 c0       	rjmp	.+226    	; 0x202e <DIO_vConnectInternalPullUp+0xe8>
    1f4c:	85 34       	cpi	r24, 0x45	; 69
    1f4e:	48 f4       	brcc	.+18     	; 0x1f62 <DIO_vConnectInternalPullUp+0x1c>
    1f50:	82 34       	cpi	r24, 0x42	; 66
    1f52:	99 f1       	breq	.+102    	; 0x1fba <DIO_vConnectInternalPullUp+0x74>
    1f54:	83 34       	cpi	r24, 0x43	; 67
    1f56:	08 f0       	brcs	.+2      	; 0x1f5a <DIO_vConnectInternalPullUp+0x14>
    1f58:	4d c0       	rjmp	.+154    	; 0x1ff4 <DIO_vConnectInternalPullUp+0xae>
    1f5a:	81 34       	cpi	r24, 0x41	; 65
    1f5c:	09 f0       	breq	.+2      	; 0x1f60 <DIO_vConnectInternalPullUp+0x1a>
    1f5e:	83 c0       	rjmp	.+262    	; 0x2066 <DIO_vConnectInternalPullUp+0x120>
    1f60:	0f c0       	rjmp	.+30     	; 0x1f80 <DIO_vConnectInternalPullUp+0x3a>
    1f62:	82 36       	cpi	r24, 0x62	; 98
    1f64:	51 f1       	breq	.+84     	; 0x1fba <DIO_vConnectInternalPullUp+0x74>
    1f66:	83 36       	cpi	r24, 0x63	; 99
    1f68:	20 f4       	brcc	.+8      	; 0x1f72 <DIO_vConnectInternalPullUp+0x2c>
    1f6a:	81 36       	cpi	r24, 0x61	; 97
    1f6c:	09 f0       	breq	.+2      	; 0x1f70 <DIO_vConnectInternalPullUp+0x2a>
    1f6e:	7b c0       	rjmp	.+246    	; 0x2066 <DIO_vConnectInternalPullUp+0x120>
    1f70:	07 c0       	rjmp	.+14     	; 0x1f80 <DIO_vConnectInternalPullUp+0x3a>
    1f72:	83 36       	cpi	r24, 0x63	; 99
    1f74:	09 f4       	brne	.+2      	; 0x1f78 <DIO_vConnectInternalPullUp+0x32>
    1f76:	3e c0       	rjmp	.+124    	; 0x1ff4 <DIO_vConnectInternalPullUp+0xae>
    1f78:	84 36       	cpi	r24, 0x64	; 100
    1f7a:	09 f0       	breq	.+2      	; 0x1f7e <DIO_vConnectInternalPullUp+0x38>
    1f7c:	74 c0       	rjmp	.+232    	; 0x2066 <DIO_vConnectInternalPullUp+0x120>
    1f7e:	57 c0       	rjmp	.+174    	; 0x202e <DIO_vConnectInternalPullUp+0xe8>
	{
		case 'A':
		case 'a':
			if(enable == 1)
    1f80:	41 30       	cpi	r20, 0x01	; 1
    1f82:	69 f4       	brne	.+26     	; 0x1f9e <DIO_vConnectInternalPullUp+0x58>
			{
				SET_BIT(PORTA, pinnumber);
    1f84:	2b b3       	in	r18, 0x1b	; 27
    1f86:	81 e0       	ldi	r24, 0x01	; 1
    1f88:	90 e0       	ldi	r25, 0x00	; 0
    1f8a:	ac 01       	movw	r20, r24
    1f8c:	02 c0       	rjmp	.+4      	; 0x1f92 <DIO_vConnectInternalPullUp+0x4c>
    1f8e:	44 0f       	add	r20, r20
    1f90:	55 1f       	adc	r21, r21
    1f92:	6a 95       	dec	r22
    1f94:	e2 f7       	brpl	.-8      	; 0x1f8e <DIO_vConnectInternalPullUp+0x48>
    1f96:	ba 01       	movw	r22, r20
    1f98:	62 2b       	or	r22, r18
    1f9a:	6b bb       	out	0x1b, r22	; 27
    1f9c:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTA, pinnumber);
    1f9e:	2b b3       	in	r18, 0x1b	; 27
    1fa0:	81 e0       	ldi	r24, 0x01	; 1
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	ac 01       	movw	r20, r24
    1fa6:	02 c0       	rjmp	.+4      	; 0x1fac <DIO_vConnectInternalPullUp+0x66>
    1fa8:	44 0f       	add	r20, r20
    1faa:	55 1f       	adc	r21, r21
    1fac:	6a 95       	dec	r22
    1fae:	e2 f7       	brpl	.-8      	; 0x1fa8 <DIO_vConnectInternalPullUp+0x62>
    1fb0:	ba 01       	movw	r22, r20
    1fb2:	60 95       	com	r22
    1fb4:	62 23       	and	r22, r18
    1fb6:	6b bb       	out	0x1b, r22	; 27
    1fb8:	08 95       	ret
			}
			break;
		case 'B':
		case 'b':
			if(enable == 1)
    1fba:	41 30       	cpi	r20, 0x01	; 1
    1fbc:	69 f4       	brne	.+26     	; 0x1fd8 <DIO_vConnectInternalPullUp+0x92>
			{
				SET_BIT(PORTB, pinnumber);
    1fbe:	28 b3       	in	r18, 0x18	; 24
    1fc0:	81 e0       	ldi	r24, 0x01	; 1
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	ac 01       	movw	r20, r24
    1fc6:	02 c0       	rjmp	.+4      	; 0x1fcc <DIO_vConnectInternalPullUp+0x86>
    1fc8:	44 0f       	add	r20, r20
    1fca:	55 1f       	adc	r21, r21
    1fcc:	6a 95       	dec	r22
    1fce:	e2 f7       	brpl	.-8      	; 0x1fc8 <DIO_vConnectInternalPullUp+0x82>
    1fd0:	ba 01       	movw	r22, r20
    1fd2:	62 2b       	or	r22, r18
    1fd4:	68 bb       	out	0x18, r22	; 24
    1fd6:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTB, pinnumber);
    1fd8:	28 b3       	in	r18, 0x18	; 24
    1fda:	81 e0       	ldi	r24, 0x01	; 1
    1fdc:	90 e0       	ldi	r25, 0x00	; 0
    1fde:	ac 01       	movw	r20, r24
    1fe0:	02 c0       	rjmp	.+4      	; 0x1fe6 <DIO_vConnectInternalPullUp+0xa0>
    1fe2:	44 0f       	add	r20, r20
    1fe4:	55 1f       	adc	r21, r21
    1fe6:	6a 95       	dec	r22
    1fe8:	e2 f7       	brpl	.-8      	; 0x1fe2 <DIO_vConnectInternalPullUp+0x9c>
    1fea:	ba 01       	movw	r22, r20
    1fec:	60 95       	com	r22
    1fee:	62 23       	and	r22, r18
    1ff0:	68 bb       	out	0x18, r22	; 24
    1ff2:	08 95       	ret
			}
			break;
		case 'C':
		case 'c':
			if(enable == 1)
    1ff4:	41 30       	cpi	r20, 0x01	; 1
    1ff6:	69 f4       	brne	.+26     	; 0x2012 <DIO_vConnectInternalPullUp+0xcc>
			{
				SET_BIT(PORTC, pinnumber);
    1ff8:	25 b3       	in	r18, 0x15	; 21
    1ffa:	81 e0       	ldi	r24, 0x01	; 1
    1ffc:	90 e0       	ldi	r25, 0x00	; 0
    1ffe:	ac 01       	movw	r20, r24
    2000:	02 c0       	rjmp	.+4      	; 0x2006 <DIO_vConnectInternalPullUp+0xc0>
    2002:	44 0f       	add	r20, r20
    2004:	55 1f       	adc	r21, r21
    2006:	6a 95       	dec	r22
    2008:	e2 f7       	brpl	.-8      	; 0x2002 <DIO_vConnectInternalPullUp+0xbc>
    200a:	ba 01       	movw	r22, r20
    200c:	62 2b       	or	r22, r18
    200e:	65 bb       	out	0x15, r22	; 21
    2010:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTC, pinnumber);
    2012:	25 b3       	in	r18, 0x15	; 21
    2014:	81 e0       	ldi	r24, 0x01	; 1
    2016:	90 e0       	ldi	r25, 0x00	; 0
    2018:	ac 01       	movw	r20, r24
    201a:	02 c0       	rjmp	.+4      	; 0x2020 <DIO_vConnectInternalPullUp+0xda>
    201c:	44 0f       	add	r20, r20
    201e:	55 1f       	adc	r21, r21
    2020:	6a 95       	dec	r22
    2022:	e2 f7       	brpl	.-8      	; 0x201c <DIO_vConnectInternalPullUp+0xd6>
    2024:	ba 01       	movw	r22, r20
    2026:	60 95       	com	r22
    2028:	62 23       	and	r22, r18
    202a:	65 bb       	out	0x15, r22	; 21
    202c:	08 95       	ret
			}
			break;
		case 'D':
		case 'd':
			if(enable == 1)
    202e:	41 30       	cpi	r20, 0x01	; 1
    2030:	69 f4       	brne	.+26     	; 0x204c <DIO_vConnectInternalPullUp+0x106>
			{
				SET_BIT(PORTD, pinnumber);
    2032:	22 b3       	in	r18, 0x12	; 18
    2034:	81 e0       	ldi	r24, 0x01	; 1
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	ac 01       	movw	r20, r24
    203a:	02 c0       	rjmp	.+4      	; 0x2040 <DIO_vConnectInternalPullUp+0xfa>
    203c:	44 0f       	add	r20, r20
    203e:	55 1f       	adc	r21, r21
    2040:	6a 95       	dec	r22
    2042:	e2 f7       	brpl	.-8      	; 0x203c <DIO_vConnectInternalPullUp+0xf6>
    2044:	ba 01       	movw	r22, r20
    2046:	62 2b       	or	r22, r18
    2048:	62 bb       	out	0x12, r22	; 18
    204a:	08 95       	ret
			}
			else
			{
				CLR_BIT(PORTD, pinnumber);
    204c:	22 b3       	in	r18, 0x12	; 18
    204e:	81 e0       	ldi	r24, 0x01	; 1
    2050:	90 e0       	ldi	r25, 0x00	; 0
    2052:	ac 01       	movw	r20, r24
    2054:	02 c0       	rjmp	.+4      	; 0x205a <DIO_vConnectInternalPullUp+0x114>
    2056:	44 0f       	add	r20, r20
    2058:	55 1f       	adc	r21, r21
    205a:	6a 95       	dec	r22
    205c:	e2 f7       	brpl	.-8      	; 0x2056 <DIO_vConnectInternalPullUp+0x110>
    205e:	ba 01       	movw	r22, r20
    2060:	60 95       	com	r22
    2062:	62 23       	and	r22, r18
    2064:	62 bb       	out	0x12, r22	; 18
    2066:	08 95       	ret

00002068 <DIO_vWriteLowNibble>:
	
}

void DIO_vWriteLowNibble(unsigned char portname, unsigned char nibblevalue)
{
	nibblevalue &= 0x0F;
    2068:	6f 70       	andi	r22, 0x0F	; 15
	switch(portname)
    206a:	84 34       	cpi	r24, 0x44	; 68
    206c:	51 f1       	breq	.+84     	; 0x20c2 <DIO_vWriteLowNibble+0x5a>
    206e:	85 34       	cpi	r24, 0x45	; 69
    2070:	38 f4       	brcc	.+14     	; 0x2080 <DIO_vWriteLowNibble+0x18>
    2072:	82 34       	cpi	r24, 0x42	; 66
    2074:	c1 f0       	breq	.+48     	; 0x20a6 <DIO_vWriteLowNibble+0x3e>
    2076:	83 34       	cpi	r24, 0x43	; 67
    2078:	e8 f4       	brcc	.+58     	; 0x20b4 <DIO_vWriteLowNibble+0x4c>
    207a:	81 34       	cpi	r24, 0x41	; 65
    207c:	41 f5       	brne	.+80     	; 0x20ce <DIO_vWriteLowNibble+0x66>
    207e:	0c c0       	rjmp	.+24     	; 0x2098 <DIO_vWriteLowNibble+0x30>
    2080:	82 36       	cpi	r24, 0x62	; 98
    2082:	89 f0       	breq	.+34     	; 0x20a6 <DIO_vWriteLowNibble+0x3e>
    2084:	83 36       	cpi	r24, 0x63	; 99
    2086:	18 f4       	brcc	.+6      	; 0x208e <DIO_vWriteLowNibble+0x26>
    2088:	81 36       	cpi	r24, 0x61	; 97
    208a:	09 f5       	brne	.+66     	; 0x20ce <DIO_vWriteLowNibble+0x66>
    208c:	05 c0       	rjmp	.+10     	; 0x2098 <DIO_vWriteLowNibble+0x30>
    208e:	83 36       	cpi	r24, 0x63	; 99
    2090:	89 f0       	breq	.+34     	; 0x20b4 <DIO_vWriteLowNibble+0x4c>
    2092:	84 36       	cpi	r24, 0x64	; 100
    2094:	e1 f4       	brne	.+56     	; 0x20ce <DIO_vWriteLowNibble+0x66>
    2096:	15 c0       	rjmp	.+42     	; 0x20c2 <DIO_vWriteLowNibble+0x5a>
	{
		case 'A':
		case 'a':
			PORTA &= 0xF0;
    2098:	8b b3       	in	r24, 0x1b	; 27
    209a:	80 7f       	andi	r24, 0xF0	; 240
    209c:	8b bb       	out	0x1b, r24	; 27
			PORTA |= nibblevalue;
    209e:	8b b3       	in	r24, 0x1b	; 27
    20a0:	68 2b       	or	r22, r24
    20a2:	6b bb       	out	0x1b, r22	; 27
			break;
    20a4:	08 95       	ret
		case 'B':
		case 'b':
			PORTB &= 0xF0;
    20a6:	88 b3       	in	r24, 0x18	; 24
    20a8:	80 7f       	andi	r24, 0xF0	; 240
    20aa:	88 bb       	out	0x18, r24	; 24
			PORTB |= nibblevalue;
    20ac:	88 b3       	in	r24, 0x18	; 24
    20ae:	68 2b       	or	r22, r24
    20b0:	68 bb       	out	0x18, r22	; 24
			break;
    20b2:	08 95       	ret
		case 'C':
		case 'c':
			PORTC &= 0xF0;
    20b4:	85 b3       	in	r24, 0x15	; 21
    20b6:	80 7f       	andi	r24, 0xF0	; 240
    20b8:	85 bb       	out	0x15, r24	; 21
			PORTC |= nibblevalue;
    20ba:	85 b3       	in	r24, 0x15	; 21
    20bc:	68 2b       	or	r22, r24
    20be:	65 bb       	out	0x15, r22	; 21
			break;
    20c0:	08 95       	ret
		case 'D':
		case 'd':
			PORTD &= 0xF0;
    20c2:	82 b3       	in	r24, 0x12	; 18
    20c4:	80 7f       	andi	r24, 0xF0	; 240
    20c6:	82 bb       	out	0x12, r24	; 18
			PORTD |= nibblevalue;
    20c8:	82 b3       	in	r24, 0x12	; 18
    20ca:	68 2b       	or	r22, r24
    20cc:	62 bb       	out	0x12, r22	; 18
    20ce:	08 95       	ret

000020d0 <DIO_vWriteHighNibble>:
	}
}

void DIO_vWriteHighNibble(unsigned char portname, unsigned char nibblevalue)
{
	nibblevalue <<= 4;
    20d0:	62 95       	swap	r22
    20d2:	60 7f       	andi	r22, 0xF0	; 240
	switch(portname)
    20d4:	84 34       	cpi	r24, 0x44	; 68
    20d6:	51 f1       	breq	.+84     	; 0x212c <DIO_vWriteHighNibble+0x5c>
    20d8:	85 34       	cpi	r24, 0x45	; 69
    20da:	38 f4       	brcc	.+14     	; 0x20ea <DIO_vWriteHighNibble+0x1a>
    20dc:	82 34       	cpi	r24, 0x42	; 66
    20de:	c1 f0       	breq	.+48     	; 0x2110 <DIO_vWriteHighNibble+0x40>
    20e0:	83 34       	cpi	r24, 0x43	; 67
    20e2:	e8 f4       	brcc	.+58     	; 0x211e <DIO_vWriteHighNibble+0x4e>
    20e4:	81 34       	cpi	r24, 0x41	; 65
    20e6:	41 f5       	brne	.+80     	; 0x2138 <DIO_vWriteHighNibble+0x68>
    20e8:	0c c0       	rjmp	.+24     	; 0x2102 <DIO_vWriteHighNibble+0x32>
    20ea:	82 36       	cpi	r24, 0x62	; 98
    20ec:	89 f0       	breq	.+34     	; 0x2110 <DIO_vWriteHighNibble+0x40>
    20ee:	83 36       	cpi	r24, 0x63	; 99
    20f0:	18 f4       	brcc	.+6      	; 0x20f8 <DIO_vWriteHighNibble+0x28>
    20f2:	81 36       	cpi	r24, 0x61	; 97
    20f4:	09 f5       	brne	.+66     	; 0x2138 <DIO_vWriteHighNibble+0x68>
    20f6:	05 c0       	rjmp	.+10     	; 0x2102 <DIO_vWriteHighNibble+0x32>
    20f8:	83 36       	cpi	r24, 0x63	; 99
    20fa:	89 f0       	breq	.+34     	; 0x211e <DIO_vWriteHighNibble+0x4e>
    20fc:	84 36       	cpi	r24, 0x64	; 100
    20fe:	e1 f4       	brne	.+56     	; 0x2138 <DIO_vWriteHighNibble+0x68>
    2100:	15 c0       	rjmp	.+42     	; 0x212c <DIO_vWriteHighNibble+0x5c>
	{
		case 'A':
		case 'a':
		PORTA &= 0x0F;
    2102:	8b b3       	in	r24, 0x1b	; 27
    2104:	8f 70       	andi	r24, 0x0F	; 15
    2106:	8b bb       	out	0x1b, r24	; 27
		PORTA |= nibblevalue;
    2108:	8b b3       	in	r24, 0x1b	; 27
    210a:	68 2b       	or	r22, r24
    210c:	6b bb       	out	0x1b, r22	; 27
		break;
    210e:	08 95       	ret
		case 'B':
		case 'b':
		PORTB &= 0x0F;
    2110:	88 b3       	in	r24, 0x18	; 24
    2112:	8f 70       	andi	r24, 0x0F	; 15
    2114:	88 bb       	out	0x18, r24	; 24
		PORTB |= nibblevalue;
    2116:	88 b3       	in	r24, 0x18	; 24
    2118:	68 2b       	or	r22, r24
    211a:	68 bb       	out	0x18, r22	; 24
		break;
    211c:	08 95       	ret
		case 'C':
		case 'c':
		PORTC &= 0x0F;
    211e:	85 b3       	in	r24, 0x15	; 21
    2120:	8f 70       	andi	r24, 0x0F	; 15
    2122:	85 bb       	out	0x15, r24	; 21
		PORTC |= nibblevalue;
    2124:	85 b3       	in	r24, 0x15	; 21
    2126:	68 2b       	or	r22, r24
    2128:	65 bb       	out	0x15, r22	; 21
		break;
    212a:	08 95       	ret
		case 'D':
		case 'd':
		PORTD &= 0x0F;
    212c:	82 b3       	in	r24, 0x12	; 18
    212e:	8f 70       	andi	r24, 0x0F	; 15
    2130:	82 bb       	out	0x12, r24	; 18
		PORTD |= nibblevalue;
    2132:	82 b3       	in	r24, 0x12	; 18
    2134:	68 2b       	or	r22, r24
    2136:	62 bb       	out	0x12, r22	; 18
    2138:	08 95       	ret

0000213a <KEYPAD_vInit>:
#include "KEYPAD.h"

void KEYPAD_vInit(unsigned char portname)
{
    213a:	cf 93       	push	r28
    213c:	c8 2f       	mov	r28, r24
	DIO_vSetPortDirection(portname, 0x0F);
    213e:	6f e0       	ldi	r22, 0x0F	; 15
    2140:	0e 94 1d 0f 	call	0x1e3a	; 0x1e3a <DIO_vSetPortDirection>
	DIO_vConnectInternalPullUp(portname, PIN4, 1);
    2144:	8c 2f       	mov	r24, r28
    2146:	64 e0       	ldi	r22, 0x04	; 4
    2148:	41 e0       	ldi	r20, 0x01	; 1
    214a:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <DIO_vConnectInternalPullUp>
	DIO_vConnectInternalPullUp(portname, PIN5, 1);
    214e:	8c 2f       	mov	r24, r28
    2150:	65 e0       	ldi	r22, 0x05	; 5
    2152:	41 e0       	ldi	r20, 0x01	; 1
    2154:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <DIO_vConnectInternalPullUp>
	DIO_vConnectInternalPullUp(portname, PIN6, 1);
    2158:	8c 2f       	mov	r24, r28
    215a:	66 e0       	ldi	r22, 0x06	; 6
    215c:	41 e0       	ldi	r20, 0x01	; 1
    215e:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <DIO_vConnectInternalPullUp>
	DIO_vConnectInternalPullUp(portname, PIN7, 1);
    2162:	8c 2f       	mov	r24, r28
    2164:	67 e0       	ldi	r22, 0x07	; 7
    2166:	41 e0       	ldi	r20, 0x01	; 1
    2168:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <DIO_vConnectInternalPullUp>
}
    216c:	cf 91       	pop	r28
    216e:	08 95       	ret

00002170 <KEYPAD_u8Read>:

unsigned char KEYPAD_u8Read(unsigned char portname)
{
    2170:	cf 92       	push	r12
    2172:	df 92       	push	r13
    2174:	ff 92       	push	r15
    2176:	0f 93       	push	r16
    2178:	1f 93       	push	r17
    217a:	cf 93       	push	r28
    217c:	df 93       	push	r29
    217e:	cd b7       	in	r28, 0x3d	; 61
    2180:	de b7       	in	r29, 0x3e	; 62
    2182:	60 97       	sbiw	r28, 0x10	; 16
    2184:	0f b6       	in	r0, 0x3f	; 63
    2186:	f8 94       	cli
    2188:	de bf       	out	0x3e, r29	; 62
    218a:	0f be       	out	0x3f, r0	; 63
    218c:	cd bf       	out	0x3d, r28	; 61
    218e:	f8 2e       	mov	r15, r24
	unsigned char arr[4][4] = { {'7','8','9','/'}, {'4','5','6','*'}, {'1','2','3','-'}, {'A', '0', '=', '+'} };
    2190:	de 01       	movw	r26, r28
    2192:	11 96       	adiw	r26, 0x01	; 1
    2194:	ee e6       	ldi	r30, 0x6E	; 110
    2196:	f0 e0       	ldi	r31, 0x00	; 0
    2198:	80 e1       	ldi	r24, 0x10	; 16
    219a:	01 90       	ld	r0, Z+
    219c:	0d 92       	st	X+, r0
    219e:	81 50       	subi	r24, 0x01	; 1
    21a0:	e1 f7       	brne	.-8      	; 0x219a <KEYPAD_u8Read+0x2a>
    21a2:	cc 24       	eor	r12, r12
    21a4:	dd 24       	eor	r13, r13
	char row, col;
	char return_val = NOTPRESSED;
	for(row = 0; row <= 3; row++)
	{
		DIO_vWriteLowNibble(portname, 0x0F);
    21a6:	8f 2d       	mov	r24, r15
    21a8:	6f e0       	ldi	r22, 0x0F	; 15
    21aa:	0e 94 34 10 	call	0x2068	; 0x2068 <DIO_vWriteLowNibble>
		DIO_vWritePin(portname, row, 0);
    21ae:	8f 2d       	mov	r24, r15
    21b0:	6c 2d       	mov	r22, r12
    21b2:	40 e0       	ldi	r20, 0x00	; 0
    21b4:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <DIO_vWritePin>
		for(col = 0; col <= 3; col++)
    21b8:	10 e0       	ldi	r17, 0x00	; 0
	DIO_vConnectInternalPullUp(portname, PIN5, 1);
	DIO_vConnectInternalPullUp(portname, PIN6, 1);
	DIO_vConnectInternalPullUp(portname, PIN7, 1);
}

unsigned char KEYPAD_u8Read(unsigned char portname)
    21ba:	01 2f       	mov	r16, r17
    21bc:	0c 5f       	subi	r16, 0xFC	; 252
	{
		DIO_vWriteLowNibble(portname, 0x0F);
		DIO_vWritePin(portname, row, 0);
		for(col = 0; col <= 3; col++)
		{
			if(DIO_u8ReadPin(portname, col + 4) == 0)
    21be:	8f 2d       	mov	r24, r15
    21c0:	60 2f       	mov	r22, r16
    21c2:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <DIO_u8ReadPin>
    21c6:	88 23       	and	r24, r24
    21c8:	b9 f4       	brne	.+46     	; 0x21f8 <KEYPAD_u8Read+0x88>
			{
				while(!DIO_u8ReadPin(portname, col + 4));
    21ca:	8f 2d       	mov	r24, r15
    21cc:	60 2f       	mov	r22, r16
    21ce:	0e 94 b8 0e 	call	0x1d70	; 0x1d70 <DIO_u8ReadPin>
    21d2:	88 23       	and	r24, r24
    21d4:	d1 f3       	breq	.-12     	; 0x21ca <KEYPAD_u8Read+0x5a>
				return_val = arr[row][col];
    21d6:	f6 01       	movw	r30, r12
    21d8:	ee 0f       	add	r30, r30
    21da:	ff 1f       	adc	r31, r31
    21dc:	ee 0f       	add	r30, r30
    21de:	ff 1f       	adc	r31, r31
    21e0:	e1 0f       	add	r30, r17
    21e2:	f1 1d       	adc	r31, r1
    21e4:	81 e0       	ldi	r24, 0x01	; 1
    21e6:	90 e0       	ldi	r25, 0x00	; 0
    21e8:	8c 0f       	add	r24, r28
    21ea:	9d 1f       	adc	r25, r29
    21ec:	e8 0f       	add	r30, r24
    21ee:	f9 1f       	adc	r31, r25
    21f0:	80 81       	ld	r24, Z
			else
			{
				
			}
		}
		if(return_val != NOTPRESSED)
    21f2:	8f 3f       	cpi	r24, 0xFF	; 255
    21f4:	21 f0       	breq	.+8      	; 0x21fe <KEYPAD_u8Read+0x8e>
    21f6:	0b c0       	rjmp	.+22     	; 0x220e <KEYPAD_u8Read+0x9e>
	char return_val = NOTPRESSED;
	for(row = 0; row <= 3; row++)
	{
		DIO_vWriteLowNibble(portname, 0x0F);
		DIO_vWritePin(portname, row, 0);
		for(col = 0; col <= 3; col++)
    21f8:	1f 5f       	subi	r17, 0xFF	; 255
    21fa:	14 30       	cpi	r17, 0x04	; 4
    21fc:	f1 f6       	brne	.-68     	; 0x21ba <KEYPAD_u8Read+0x4a>
    21fe:	08 94       	sec
    2200:	c1 1c       	adc	r12, r1
    2202:	d1 1c       	adc	r13, r1
unsigned char KEYPAD_u8Read(unsigned char portname)
{
	unsigned char arr[4][4] = { {'7','8','9','/'}, {'4','5','6','*'}, {'1','2','3','-'}, {'A', '0', '=', '+'} };
	char row, col;
	char return_val = NOTPRESSED;
	for(row = 0; row <= 3; row++)
    2204:	94 e0       	ldi	r25, 0x04	; 4
    2206:	c9 16       	cp	r12, r25
    2208:	d1 04       	cpc	r13, r1
    220a:	69 f6       	brne	.-102    	; 0x21a6 <KEYPAD_u8Read+0x36>
    220c:	8f ef       	ldi	r24, 0xFF	; 255
		{
			
		}
	}
	return return_val;
    220e:	60 96       	adiw	r28, 0x10	; 16
    2210:	0f b6       	in	r0, 0x3f	; 63
    2212:	f8 94       	cli
    2214:	de bf       	out	0x3e, r29	; 62
    2216:	0f be       	out	0x3f, r0	; 63
    2218:	cd bf       	out	0x3d, r28	; 61
    221a:	df 91       	pop	r29
    221c:	cf 91       	pop	r28
    221e:	1f 91       	pop	r17
    2220:	0f 91       	pop	r16
    2222:	ff 90       	pop	r15
    2224:	df 90       	pop	r13
    2226:	cf 90       	pop	r12
    2228:	08 95       	ret

0000222a <LCD_vSendPulse>:
	#endif
}

static void LCD_vSendPulse(void)
{
	DIO_vWritePin(CONTROL_PORT, EN, ENABLE);
    222a:	82 e4       	ldi	r24, 0x42	; 66
    222c:	60 e0       	ldi	r22, 0x00	; 0
    222e:	41 e0       	ldi	r20, 0x01	; 1
    2230:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <DIO_vWritePin>
    2234:	8f e9       	ldi	r24, 0x9F	; 159
    2236:	9f e0       	ldi	r25, 0x0F	; 15
    2238:	01 97       	sbiw	r24, 0x01	; 1
    223a:	f1 f7       	brne	.-4      	; 0x2238 <LCD_vSendPulse+0xe>
    223c:	00 c0       	rjmp	.+0      	; 0x223e <LCD_vSendPulse+0x14>
    223e:	00 00       	nop
	_delay_ms(2);
	DIO_vWritePin(CONTROL_PORT, EN, DISABLE);
    2240:	82 e4       	ldi	r24, 0x42	; 66
    2242:	60 e0       	ldi	r22, 0x00	; 0
    2244:	40 e0       	ldi	r20, 0x00	; 0
    2246:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <DIO_vWritePin>
    224a:	8f e9       	ldi	r24, 0x9F	; 159
    224c:	9f e0       	ldi	r25, 0x0F	; 15
    224e:	01 97       	sbiw	r24, 0x01	; 1
    2250:	f1 f7       	brne	.-4      	; 0x224e <LCD_vSendPulse+0x24>
    2252:	00 c0       	rjmp	.+0      	; 0x2254 <LCD_vSendPulse+0x2a>
    2254:	00 00       	nop
	_delay_ms(2);
}
    2256:	08 95       	ret

00002258 <LCD_vSendCMD>:

void LCD_vSendCMD(unsigned char cmd)
{
    2258:	cf 93       	push	r28
    225a:	c8 2f       	mov	r28, r24
	DIO_vWritePin(CONTROL_PORT, RS, DISABLE);
	DIO_vWritePort(LCD_PORT, cmd);
	LCD_vSendPulse();
	
	#elif defined four_bit_mode
	DIO_vWritePin(CONTROL_PORT, RS, DISABLE);
    225c:	82 e4       	ldi	r24, 0x42	; 66
    225e:	61 e0       	ldi	r22, 0x01	; 1
    2260:	40 e0       	ldi	r20, 0x00	; 0
    2262:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <DIO_vWritePin>
	DIO_vWriteHighNibble(LCD_PORT, cmd >> 4);
    2266:	6c 2f       	mov	r22, r28
    2268:	62 95       	swap	r22
    226a:	6f 70       	andi	r22, 0x0F	; 15
    226c:	81 e4       	ldi	r24, 0x41	; 65
    226e:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_vWriteHighNibble>
	LCD_vSendPulse();
    2272:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_vSendPulse>
	DIO_vWriteHighNibble(LCD_PORT, cmd);
    2276:	81 e4       	ldi	r24, 0x41	; 65
    2278:	6c 2f       	mov	r22, r28
    227a:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_vWriteHighNibble>
	LCD_vSendPulse();
    227e:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_vSendPulse>
    2282:	8f ec       	ldi	r24, 0xCF	; 207
    2284:	97 e0       	ldi	r25, 0x07	; 7
    2286:	01 97       	sbiw	r24, 0x01	; 1
    2288:	f1 f7       	brne	.-4      	; 0x2286 <LCD_vSendCMD+0x2e>
    228a:	00 c0       	rjmp	.+0      	; 0x228c <LCD_vSendCMD+0x34>
    228c:	00 00       	nop
	#endif
	_delay_ms(1);
}
    228e:	cf 91       	pop	r28
    2290:	08 95       	ret

00002292 <LCD_vInit>:
    2292:	8f ef       	ldi	r24, 0xFF	; 255
    2294:	91 ee       	ldi	r25, 0xE1	; 225
    2296:	a4 e0       	ldi	r26, 0x04	; 4
    2298:	81 50       	subi	r24, 0x01	; 1
    229a:	90 40       	sbci	r25, 0x00	; 0
    229c:	a0 40       	sbci	r26, 0x00	; 0
    229e:	e1 f7       	brne	.-8      	; 0x2298 <LCD_vInit+0x6>
    22a0:	00 c0       	rjmp	.+0      	; 0x22a2 <LCD_vInit+0x10>
    22a2:	00 00       	nop
	_delay_ms(10);
	LCD_vSendCMD(ENTRY_MODE);
	_delay_ms(1);
	
	#elif defined four_bit_mode
	DIO_vsetPinDir(LCD_PORT, PIN4, OUTPUT);
    22a4:	81 e4       	ldi	r24, 0x41	; 65
    22a6:	64 e0       	ldi	r22, 0x04	; 4
    22a8:	41 e0       	ldi	r20, 0x01	; 1
    22aa:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <DIO_vsetPinDir>
	DIO_vsetPinDir(LCD_PORT, PIN5, OUTPUT);
    22ae:	81 e4       	ldi	r24, 0x41	; 65
    22b0:	65 e0       	ldi	r22, 0x05	; 5
    22b2:	41 e0       	ldi	r20, 0x01	; 1
    22b4:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <DIO_vsetPinDir>
	DIO_vsetPinDir(LCD_PORT, PIN6, OUTPUT);
    22b8:	81 e4       	ldi	r24, 0x41	; 65
    22ba:	66 e0       	ldi	r22, 0x06	; 6
    22bc:	41 e0       	ldi	r20, 0x01	; 1
    22be:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <DIO_vsetPinDir>
	DIO_vsetPinDir(LCD_PORT, PIN7, OUTPUT);
    22c2:	81 e4       	ldi	r24, 0x41	; 65
    22c4:	67 e0       	ldi	r22, 0x07	; 7
    22c6:	41 e0       	ldi	r20, 0x01	; 1
    22c8:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <DIO_vsetPinDir>
	DIO_vsetPinDir(CONTROL_PORT, EN, OUTPUT);
    22cc:	82 e4       	ldi	r24, 0x42	; 66
    22ce:	60 e0       	ldi	r22, 0x00	; 0
    22d0:	41 e0       	ldi	r20, 0x01	; 1
    22d2:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <DIO_vsetPinDir>
	DIO_vsetPinDir(CONTROL_PORT, RS, OUTPUT);
    22d6:	82 e4       	ldi	r24, 0x42	; 66
    22d8:	61 e0       	ldi	r22, 0x01	; 1
    22da:	41 e0       	ldi	r20, 0x01	; 1
    22dc:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <DIO_vsetPinDir>
	DIO_vsetPinDir(CONTROL_PORT, RW, OUTPUT);
    22e0:	82 e4       	ldi	r24, 0x42	; 66
    22e2:	62 e0       	ldi	r22, 0x02	; 2
    22e4:	41 e0       	ldi	r20, 0x01	; 1
    22e6:	0e 94 49 0d 	call	0x1a92	; 0x1a92 <DIO_vsetPinDir>
	DIO_vWritePin(CONTROL_PORT, RW, DISABLE);
    22ea:	82 e4       	ldi	r24, 0x42	; 66
    22ec:	62 e0       	ldi	r22, 0x02	; 2
    22ee:	40 e0       	ldi	r20, 0x00	; 0
    22f0:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <DIO_vWritePin>
	LCD_vSendCMD(RETURN_HOME);
    22f4:	82 e0       	ldi	r24, 0x02	; 2
    22f6:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    22fa:	af e1       	ldi	r26, 0x1F	; 31
    22fc:	be e4       	ldi	r27, 0x4E	; 78
    22fe:	11 97       	sbiw	r26, 0x01	; 1
    2300:	f1 f7       	brne	.-4      	; 0x22fe <LCD_vInit+0x6c>
    2302:	00 c0       	rjmp	.+0      	; 0x2304 <LCD_vInit+0x72>
    2304:	00 00       	nop
	_delay_ms(10);
	LCD_vSendCMD(FOUR_BITS);
    2306:	88 e2       	ldi	r24, 0x28	; 40
    2308:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    230c:	8f ec       	ldi	r24, 0xCF	; 207
    230e:	97 e0       	ldi	r25, 0x07	; 7
    2310:	01 97       	sbiw	r24, 0x01	; 1
    2312:	f1 f7       	brne	.-4      	; 0x2310 <LCD_vInit+0x7e>
    2314:	00 c0       	rjmp	.+0      	; 0x2316 <LCD_vInit+0x84>
    2316:	00 00       	nop
	_delay_ms(1);
	LCD_vSendCMD(DISPLAY_ON_CURSOR_ON);
    2318:	8e e0       	ldi	r24, 0x0E	; 14
    231a:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    231e:	af ec       	ldi	r26, 0xCF	; 207
    2320:	b7 e0       	ldi	r27, 0x07	; 7
    2322:	11 97       	sbiw	r26, 0x01	; 1
    2324:	f1 f7       	brne	.-4      	; 0x2322 <LCD_vInit+0x90>
    2326:	00 c0       	rjmp	.+0      	; 0x2328 <LCD_vInit+0x96>
    2328:	00 00       	nop
	_delay_ms(1);
	LCD_vSendCMD(CLR_SCREEN);
    232a:	81 e0       	ldi	r24, 0x01	; 1
    232c:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    2330:	8f e1       	ldi	r24, 0x1F	; 31
    2332:	9e e4       	ldi	r25, 0x4E	; 78
    2334:	01 97       	sbiw	r24, 0x01	; 1
    2336:	f1 f7       	brne	.-4      	; 0x2334 <LCD_vInit+0xa2>
    2338:	00 c0       	rjmp	.+0      	; 0x233a <LCD_vInit+0xa8>
    233a:	00 00       	nop
	_delay_ms(10);
	LCD_vSendCMD(ENTRY_MODE);
    233c:	86 e0       	ldi	r24, 0x06	; 6
    233e:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    2342:	af ec       	ldi	r26, 0xCF	; 207
    2344:	b7 e0       	ldi	r27, 0x07	; 7
    2346:	11 97       	sbiw	r26, 0x01	; 1
    2348:	f1 f7       	brne	.-4      	; 0x2346 <LCD_vInit+0xb4>
    234a:	00 c0       	rjmp	.+0      	; 0x234c <LCD_vInit+0xba>
    234c:	00 00       	nop
	_delay_ms(1);
	#endif
}
    234e:	08 95       	ret

00002350 <LCD_vSendChar>:
	#endif
	_delay_ms(1);
}

LCD_vSendChar(unsigned char data)
{
    2350:	cf 93       	push	r28
    2352:	c8 2f       	mov	r28, r24
	DIO_vWritePin(CONTROL_PORT, RS, ENABLE);
	DIO_vWritePort(LCD_PORT, data);
	LCD_vSendPulse();
	
	#elif defined four_bit_mode
	DIO_vWritePin(CONTROL_PORT, RS, ENABLE);
    2354:	82 e4       	ldi	r24, 0x42	; 66
    2356:	61 e0       	ldi	r22, 0x01	; 1
    2358:	41 e0       	ldi	r20, 0x01	; 1
    235a:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <DIO_vWritePin>
	DIO_vWriteHighNibble(LCD_PORT, data >> 4);
    235e:	6c 2f       	mov	r22, r28
    2360:	62 95       	swap	r22
    2362:	6f 70       	andi	r22, 0x0F	; 15
    2364:	81 e4       	ldi	r24, 0x41	; 65
    2366:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_vWriteHighNibble>
	LCD_vSendPulse();
    236a:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_vSendPulse>
	DIO_vWriteHighNibble(LCD_PORT, data);
    236e:	81 e4       	ldi	r24, 0x41	; 65
    2370:	6c 2f       	mov	r22, r28
    2372:	0e 94 68 10 	call	0x20d0	; 0x20d0 <DIO_vWriteHighNibble>
	LCD_vSendPulse();
    2376:	0e 94 15 11 	call	0x222a	; 0x222a <LCD_vSendPulse>
	#endif
}
    237a:	cf 91       	pop	r28
    237c:	08 95       	ret

0000237e <LCD_vSendString>:

void LCD_vSendString(unsigned char *data)
{
    237e:	cf 93       	push	r28
    2380:	df 93       	push	r29
    2382:	ec 01       	movw	r28, r24
	while((*data) != 0)
    2384:	88 81       	ld	r24, Y
    2386:	88 23       	and	r24, r24
    2388:	31 f0       	breq	.+12     	; 0x2396 <LCD_vSendString+0x18>
	DIO_vWriteHighNibble(LCD_PORT, data);
	LCD_vSendPulse();
	#endif
}

void LCD_vSendString(unsigned char *data)
    238a:	21 96       	adiw	r28, 0x01	; 1
{
	while((*data) != 0)
	{
		LCD_vSendChar(*data);
    238c:	0e 94 a8 11 	call	0x2350	; 0x2350 <LCD_vSendChar>
	#endif
}

void LCD_vSendString(unsigned char *data)
{
	while((*data) != 0)
    2390:	89 91       	ld	r24, Y+
    2392:	88 23       	and	r24, r24
    2394:	d9 f7       	brne	.-10     	; 0x238c <LCD_vSendString+0xe>
	{
		LCD_vSendChar(*data);
		data++;
	}
}
    2396:	df 91       	pop	r29
    2398:	cf 91       	pop	r28
    239a:	08 95       	ret

0000239c <LCD_vClearScreen>:

void LCD_vClearScreen()
{
	LCD_vSendCMD(CLR_SCREEN);
    239c:	81 e0       	ldi	r24, 0x01	; 1
    239e:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    23a2:	8f e1       	ldi	r24, 0x1F	; 31
    23a4:	9e e4       	ldi	r25, 0x4E	; 78
    23a6:	01 97       	sbiw	r24, 0x01	; 1
    23a8:	f1 f7       	brne	.-4      	; 0x23a6 <LCD_vClearScreen+0xa>
    23aa:	00 c0       	rjmp	.+0      	; 0x23ac <LCD_vClearScreen+0x10>
    23ac:	00 00       	nop
	_delay_ms(10);
}
    23ae:	08 95       	ret

000023b0 <LCD_vMoveCursor>:

void LCD_vMoveCursor(char row, char column)
{
	unsigned char data;
	if(row < 1 || row > 2 || column > 40 || column < 1)
    23b0:	98 2f       	mov	r25, r24
    23b2:	91 50       	subi	r25, 0x01	; 1
    23b4:	92 30       	cpi	r25, 0x02	; 2
    23b6:	68 f4       	brcc	.+26     	; 0x23d2 <LCD_vMoveCursor+0x22>
    23b8:	69 32       	cpi	r22, 0x29	; 41
    23ba:	58 f4       	brcc	.+22     	; 0x23d2 <LCD_vMoveCursor+0x22>
    23bc:	66 23       	and	r22, r22
    23be:	49 f0       	breq	.+18     	; 0x23d2 <LCD_vMoveCursor+0x22>
	{
		data = 0x80;
	}
	else
	{
		if(row == 1)
    23c0:	81 30       	cpi	r24, 0x01	; 1
    23c2:	19 f4       	brne	.+6      	; 0x23ca <LCD_vMoveCursor+0x1a>
		{
			data = 0x80 + column - 1;
    23c4:	86 2f       	mov	r24, r22
    23c6:	81 58       	subi	r24, 0x81	; 129
    23c8:	02 c0       	rjmp	.+4      	; 0x23ce <LCD_vMoveCursor+0x1e>
		}
		else
		{
			data = 0xC0 + column - 1;
    23ca:	86 2f       	mov	r24, r22
    23cc:	81 54       	subi	r24, 0x41	; 65
		}
		LCD_vSendCMD(data);
    23ce:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    23d2:	08 95       	ret

000023d4 <LCD_vSetCGRAMAddress>:
	}
}

void LCD_vSetCGRAMAddress(unsigned char address)
{
	if(address > 0x3F)
    23d4:	80 34       	cpi	r24, 0x40	; 64
    23d6:	20 f0       	brcs	.+8      	; 0x23e0 <LCD_vSetCGRAMAddress+0xc>
	{
		address = 0x80;
		LCD_vSendCMD(address);
    23d8:	80 e8       	ldi	r24, 0x80	; 128
    23da:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    23de:	08 95       	ret
	}
	else
	{
		SET_BIT(address, 6);
    23e0:	80 64       	ori	r24, 0x40	; 64
		CLR_BIT(address, 7);
		LCD_vSendCMD(address);
    23e2:	8f 77       	andi	r24, 0x7F	; 127
    23e4:	0e 94 2c 11 	call	0x2258	; 0x2258 <LCD_vSendCMD>
    23e8:	08 95       	ret

000023ea <__muldi3>:
    23ea:	a0 e3       	ldi	r26, 0x30	; 48
    23ec:	b0 e0       	ldi	r27, 0x00	; 0
    23ee:	eb ef       	ldi	r30, 0xFB	; 251
    23f0:	f1 e1       	ldi	r31, 0x11	; 17
    23f2:	0c 94 ee 1e 	jmp	0x3ddc	; 0x3ddc <__prologue_saves__+0x4>
    23f6:	29 8f       	std	Y+25, r18	; 0x19
    23f8:	3a 8f       	std	Y+26, r19	; 0x1a
    23fa:	4b 8f       	std	Y+27, r20	; 0x1b
    23fc:	5c 8f       	std	Y+28, r21	; 0x1c
    23fe:	6d 8f       	std	Y+29, r22	; 0x1d
    2400:	7e 8f       	std	Y+30, r23	; 0x1e
    2402:	8f 8f       	std	Y+31, r24	; 0x1f
    2404:	98 a3       	lds	r25, 0x58
    2406:	a9 8a       	std	Y+17, r10	; 0x11
    2408:	ba 8a       	std	Y+18, r11	; 0x12
    240a:	cb 8a       	std	Y+19, r12	; 0x13
    240c:	dc 8a       	std	Y+20, r13	; 0x14
    240e:	ed 8a       	std	Y+21, r14	; 0x15
    2410:	fe 8a       	std	Y+22, r15	; 0x16
    2412:	0f 8b       	std	Y+23, r16	; 0x17
    2414:	18 8f       	std	Y+24, r17	; 0x18
    2416:	09 8d       	ldd	r16, Y+25	; 0x19
    2418:	1a 8d       	ldd	r17, Y+26	; 0x1a
    241a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    241c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    241e:	09 a3       	lds	r16, 0x59
    2420:	1a a3       	lds	r17, 0x5a
    2422:	2b a3       	lds	r18, 0x5b
    2424:	3c a3       	lds	r19, 0x5c
    2426:	68 01       	movw	r12, r16
    2428:	79 01       	movw	r14, r18
    242a:	8f ef       	ldi	r24, 0xFF	; 255
    242c:	9f ef       	ldi	r25, 0xFF	; 255
    242e:	a0 e0       	ldi	r26, 0x00	; 0
    2430:	b0 e0       	ldi	r27, 0x00	; 0
    2432:	c8 22       	and	r12, r24
    2434:	d9 22       	and	r13, r25
    2436:	ea 22       	and	r14, r26
    2438:	fb 22       	and	r15, r27
    243a:	89 01       	movw	r16, r18
    243c:	22 27       	eor	r18, r18
    243e:	33 27       	eor	r19, r19
    2440:	09 a7       	lds	r16, 0x79
    2442:	1a a7       	lds	r17, 0x7a
    2444:	2b a7       	lds	r18, 0x7b
    2446:	3c a7       	lds	r19, 0x7c
    2448:	09 89       	ldd	r16, Y+17	; 0x11
    244a:	1a 89       	ldd	r17, Y+18	; 0x12
    244c:	2b 89       	ldd	r18, Y+19	; 0x13
    244e:	3c 89       	ldd	r19, Y+20	; 0x14
    2450:	0d a3       	lds	r16, 0x5d
    2452:	1e a3       	lds	r17, 0x5e
    2454:	2f a3       	lds	r18, 0x5f
    2456:	38 a7       	lds	r19, 0x78
    2458:	48 01       	movw	r8, r16
    245a:	59 01       	movw	r10, r18
    245c:	88 22       	and	r8, r24
    245e:	99 22       	and	r9, r25
    2460:	aa 22       	and	r10, r26
    2462:	bb 22       	and	r11, r27
    2464:	29 01       	movw	r4, r18
    2466:	66 24       	eor	r6, r6
    2468:	77 24       	eor	r7, r7
    246a:	c5 01       	movw	r24, r10
    246c:	b4 01       	movw	r22, r8
    246e:	a7 01       	movw	r20, r14
    2470:	96 01       	movw	r18, r12
    2472:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2476:	6d a7       	lds	r22, 0x7d
    2478:	7e a7       	lds	r23, 0x7e
    247a:	8f a7       	lds	r24, 0x7f
    247c:	98 ab       	sts	0x58, r25
    247e:	c3 01       	movw	r24, r6
    2480:	b2 01       	movw	r22, r4
    2482:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2486:	6b 01       	movw	r12, r22
    2488:	7c 01       	movw	r14, r24
    248a:	c5 01       	movw	r24, r10
    248c:	b4 01       	movw	r22, r8
    248e:	29 a5       	lds	r18, 0x69
    2490:	3a a5       	lds	r19, 0x6a
    2492:	4b a5       	lds	r20, 0x6b
    2494:	5c a5       	lds	r21, 0x6c
    2496:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    249a:	4b 01       	movw	r8, r22
    249c:	5c 01       	movw	r10, r24
    249e:	c3 01       	movw	r24, r6
    24a0:	b2 01       	movw	r22, r4
    24a2:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    24a6:	ab 01       	movw	r20, r22
    24a8:	bc 01       	movw	r22, r24
    24aa:	c8 0c       	add	r12, r8
    24ac:	d9 1c       	adc	r13, r9
    24ae:	ea 1c       	adc	r14, r10
    24b0:	fb 1c       	adc	r15, r11
    24b2:	0d a5       	lds	r16, 0x6d
    24b4:	1e a5       	lds	r17, 0x6e
    24b6:	2f a5       	lds	r18, 0x6f
    24b8:	38 a9       	sts	0x48, r19
    24ba:	c9 01       	movw	r24, r18
    24bc:	aa 27       	eor	r26, r26
    24be:	bb 27       	eor	r27, r27
    24c0:	c8 0e       	add	r12, r24
    24c2:	d9 1e       	adc	r13, r25
    24c4:	ea 1e       	adc	r14, r26
    24c6:	fb 1e       	adc	r15, r27
    24c8:	c8 14       	cp	r12, r8
    24ca:	d9 04       	cpc	r13, r9
    24cc:	ea 04       	cpc	r14, r10
    24ce:	fb 04       	cpc	r15, r11
    24d0:	20 f4       	brcc	.+8      	; 0x24da <__muldi3+0xf0>
    24d2:	40 50       	subi	r20, 0x00	; 0
    24d4:	50 40       	sbci	r21, 0x00	; 0
    24d6:	6f 4f       	sbci	r22, 0xFF	; 255
    24d8:	7f 4f       	sbci	r23, 0xFF	; 255
    24da:	c7 01       	movw	r24, r14
    24dc:	aa 27       	eor	r26, r26
    24de:	bb 27       	eor	r27, r27
    24e0:	84 0f       	add	r24, r20
    24e2:	95 1f       	adc	r25, r21
    24e4:	a6 1f       	adc	r26, r22
    24e6:	b7 1f       	adc	r27, r23
    24e8:	8d 83       	std	Y+5, r24	; 0x05
    24ea:	9e 83       	std	Y+6, r25	; 0x06
    24ec:	af 83       	std	Y+7, r26	; 0x07
    24ee:	b8 87       	std	Y+8, r27	; 0x08
    24f0:	76 01       	movw	r14, r12
    24f2:	dd 24       	eor	r13, r13
    24f4:	cc 24       	eor	r12, r12
    24f6:	4d a5       	lds	r20, 0x6d
    24f8:	5e a5       	lds	r21, 0x6e
    24fa:	6f a5       	lds	r22, 0x6f
    24fc:	78 a9       	sts	0x48, r23
    24fe:	60 70       	andi	r22, 0x00	; 0
    2500:	70 70       	andi	r23, 0x00	; 0
    2502:	c4 0e       	add	r12, r20
    2504:	d5 1e       	adc	r13, r21
    2506:	e6 1e       	adc	r14, r22
    2508:	f7 1e       	adc	r15, r23
    250a:	c9 82       	std	Y+1, r12	; 0x01
    250c:	da 82       	std	Y+2, r13	; 0x02
    250e:	eb 82       	std	Y+3, r14	; 0x03
    2510:	fc 82       	std	Y+4, r15	; 0x04
    2512:	1c 2d       	mov	r17, r12
    2514:	0a 81       	ldd	r16, Y+2	; 0x02
    2516:	8b 80       	ldd	r8, Y+3	; 0x03
    2518:	4c 80       	ldd	r4, Y+4	; 0x04
    251a:	8d 87       	std	Y+13, r24	; 0x0d
    251c:	8e 81       	ldd	r24, Y+6	; 0x06
    251e:	8e 87       	std	Y+14, r24	; 0x0e
    2520:	8f 81       	ldd	r24, Y+7	; 0x07
    2522:	8f 87       	std	Y+15, r24	; 0x0f
    2524:	88 85       	ldd	r24, Y+8	; 0x08
    2526:	88 8b       	std	Y+16, r24	; 0x10
    2528:	2d 89       	ldd	r18, Y+21	; 0x15
    252a:	3e 89       	ldd	r19, Y+22	; 0x16
    252c:	4f 89       	ldd	r20, Y+23	; 0x17
    252e:	58 8d       	ldd	r21, Y+24	; 0x18
    2530:	69 a1       	lds	r22, 0x49
    2532:	7a a1       	lds	r23, 0x4a
    2534:	8b a1       	lds	r24, 0x4b
    2536:	9c a1       	lds	r25, 0x4c
    2538:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    253c:	6b 01       	movw	r12, r22
    253e:	7c 01       	movw	r14, r24
    2540:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2542:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2544:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2546:	58 a1       	lds	r21, 0x48
    2548:	6d a1       	lds	r22, 0x4d
    254a:	7e a1       	lds	r23, 0x4e
    254c:	8f a1       	lds	r24, 0x4f
    254e:	98 a5       	lds	r25, 0x68
    2550:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2554:	dc 01       	movw	r26, r24
    2556:	cb 01       	movw	r24, r22
    2558:	c8 0e       	add	r12, r24
    255a:	d9 1e       	adc	r13, r25
    255c:	ea 1e       	adc	r14, r26
    255e:	fb 1e       	adc	r15, r27
    2560:	8d 85       	ldd	r24, Y+13	; 0x0d
    2562:	9e 85       	ldd	r25, Y+14	; 0x0e
    2564:	af 85       	ldd	r26, Y+15	; 0x0f
    2566:	b8 89       	ldd	r27, Y+16	; 0x10
    2568:	8c 0d       	add	r24, r12
    256a:	9d 1d       	adc	r25, r13
    256c:	ae 1d       	adc	r26, r14
    256e:	bf 1d       	adc	r27, r15
    2570:	8d 87       	std	Y+13, r24	; 0x0d
    2572:	9e 87       	std	Y+14, r25	; 0x0e
    2574:	af 87       	std	Y+15, r26	; 0x0f
    2576:	b8 8b       	std	Y+16, r27	; 0x10
    2578:	68 2f       	mov	r22, r24
    257a:	7e 85       	ldd	r23, Y+14	; 0x0e
    257c:	21 2f       	mov	r18, r17
    257e:	30 2f       	mov	r19, r16
    2580:	48 2d       	mov	r20, r8
    2582:	54 2d       	mov	r21, r4
    2584:	8f 85       	ldd	r24, Y+15	; 0x0f
    2586:	98 89       	ldd	r25, Y+16	; 0x10
    2588:	e0 96       	adiw	r28, 0x30	; 48
    258a:	e0 e1       	ldi	r30, 0x10	; 16
    258c:	0c 94 0a 1f 	jmp	0x3e14	; 0x3e14 <__epilogue_restores__+0x4>

00002590 <__udivdi3>:
    2590:	a4 e3       	ldi	r26, 0x34	; 52
    2592:	b0 e0       	ldi	r27, 0x00	; 0
    2594:	ee ec       	ldi	r30, 0xCE	; 206
    2596:	f2 e1       	ldi	r31, 0x12	; 18
    2598:	0c 94 ed 1e 	jmp	0x3dda	; 0x3dda <__prologue_saves__+0x2>
    259c:	29 8b       	std	Y+17, r18	; 0x11
    259e:	3a 8b       	std	Y+18, r19	; 0x12
    25a0:	4b 8b       	std	Y+19, r20	; 0x13
    25a2:	5c 8b       	std	Y+20, r21	; 0x14
    25a4:	6d 8b       	std	Y+21, r22	; 0x15
    25a6:	7e 8b       	std	Y+22, r23	; 0x16
    25a8:	8f 8b       	std	Y+23, r24	; 0x17
    25aa:	98 8f       	std	Y+24, r25	; 0x18
    25ac:	a9 86       	std	Y+9, r10	; 0x09
    25ae:	ba 86       	std	Y+10, r11	; 0x0a
    25b0:	cb 86       	std	Y+11, r12	; 0x0b
    25b2:	dc 86       	std	Y+12, r13	; 0x0c
    25b4:	ed 86       	std	Y+13, r14	; 0x0d
    25b6:	fe 86       	std	Y+14, r15	; 0x0e
    25b8:	0f 87       	std	Y+15, r16	; 0x0f
    25ba:	18 8b       	std	Y+16, r17	; 0x10
    25bc:	89 84       	ldd	r8, Y+9	; 0x09
    25be:	9a 84       	ldd	r9, Y+10	; 0x0a
    25c0:	ab 84       	ldd	r10, Y+11	; 0x0b
    25c2:	bc 84       	ldd	r11, Y+12	; 0x0c
    25c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    25c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    25c8:	af 85       	ldd	r26, Y+15	; 0x0f
    25ca:	b8 89       	ldd	r27, Y+16	; 0x10
    25cc:	09 89       	ldd	r16, Y+17	; 0x11
    25ce:	1a 89       	ldd	r17, Y+18	; 0x12
    25d0:	2b 89       	ldd	r18, Y+19	; 0x13
    25d2:	3c 89       	ldd	r19, Y+20	; 0x14
    25d4:	0d a3       	lds	r16, 0x5d
    25d6:	1e a3       	lds	r17, 0x5e
    25d8:	2f a3       	lds	r18, 0x5f
    25da:	38 a7       	lds	r19, 0x78
    25dc:	cd 88       	ldd	r12, Y+21	; 0x15
    25de:	de 88       	ldd	r13, Y+22	; 0x16
    25e0:	ef 88       	ldd	r14, Y+23	; 0x17
    25e2:	f8 8c       	ldd	r15, Y+24	; 0x18
    25e4:	00 97       	sbiw	r24, 0x00	; 0
    25e6:	a1 05       	cpc	r26, r1
    25e8:	b1 05       	cpc	r27, r1
    25ea:	09 f0       	breq	.+2      	; 0x25ee <__udivdi3+0x5e>
    25ec:	b5 c3       	rjmp	.+1898   	; 0x2d58 <__udivdi3+0x7c8>
    25ee:	c8 14       	cp	r12, r8
    25f0:	d9 04       	cpc	r13, r9
    25f2:	ea 04       	cpc	r14, r10
    25f4:	fb 04       	cpc	r15, r11
    25f6:	08 f0       	brcs	.+2      	; 0x25fa <__udivdi3+0x6a>
    25f8:	4d c1       	rjmp	.+666    	; 0x2894 <__udivdi3+0x304>
    25fa:	10 e0       	ldi	r17, 0x00	; 0
    25fc:	81 16       	cp	r8, r17
    25fe:	10 e0       	ldi	r17, 0x00	; 0
    2600:	91 06       	cpc	r9, r17
    2602:	11 e0       	ldi	r17, 0x01	; 1
    2604:	a1 06       	cpc	r10, r17
    2606:	10 e0       	ldi	r17, 0x00	; 0
    2608:	b1 06       	cpc	r11, r17
    260a:	58 f4       	brcc	.+22     	; 0x2622 <__udivdi3+0x92>
    260c:	2f ef       	ldi	r18, 0xFF	; 255
    260e:	82 16       	cp	r8, r18
    2610:	91 04       	cpc	r9, r1
    2612:	a1 04       	cpc	r10, r1
    2614:	b1 04       	cpc	r11, r1
    2616:	09 f0       	breq	.+2      	; 0x261a <__udivdi3+0x8a>
    2618:	90 f4       	brcc	.+36     	; 0x263e <__udivdi3+0xae>
    261a:	80 e0       	ldi	r24, 0x00	; 0
    261c:	90 e0       	ldi	r25, 0x00	; 0
    261e:	dc 01       	movw	r26, r24
    2620:	17 c0       	rjmp	.+46     	; 0x2650 <__udivdi3+0xc0>
    2622:	30 e0       	ldi	r19, 0x00	; 0
    2624:	83 16       	cp	r8, r19
    2626:	30 e0       	ldi	r19, 0x00	; 0
    2628:	93 06       	cpc	r9, r19
    262a:	30 e0       	ldi	r19, 0x00	; 0
    262c:	a3 06       	cpc	r10, r19
    262e:	31 e0       	ldi	r19, 0x01	; 1
    2630:	b3 06       	cpc	r11, r19
    2632:	50 f4       	brcc	.+20     	; 0x2648 <__udivdi3+0xb8>
    2634:	80 e1       	ldi	r24, 0x10	; 16
    2636:	90 e0       	ldi	r25, 0x00	; 0
    2638:	a0 e0       	ldi	r26, 0x00	; 0
    263a:	b0 e0       	ldi	r27, 0x00	; 0
    263c:	09 c0       	rjmp	.+18     	; 0x2650 <__udivdi3+0xc0>
    263e:	88 e0       	ldi	r24, 0x08	; 8
    2640:	90 e0       	ldi	r25, 0x00	; 0
    2642:	a0 e0       	ldi	r26, 0x00	; 0
    2644:	b0 e0       	ldi	r27, 0x00	; 0
    2646:	04 c0       	rjmp	.+8      	; 0x2650 <__udivdi3+0xc0>
    2648:	88 e1       	ldi	r24, 0x18	; 24
    264a:	90 e0       	ldi	r25, 0x00	; 0
    264c:	a0 e0       	ldi	r26, 0x00	; 0
    264e:	b0 e0       	ldi	r27, 0x00	; 0
    2650:	b5 01       	movw	r22, r10
    2652:	a4 01       	movw	r20, r8
    2654:	08 2e       	mov	r0, r24
    2656:	04 c0       	rjmp	.+8      	; 0x2660 <__udivdi3+0xd0>
    2658:	76 95       	lsr	r23
    265a:	67 95       	ror	r22
    265c:	57 95       	ror	r21
    265e:	47 95       	ror	r20
    2660:	0a 94       	dec	r0
    2662:	d2 f7       	brpl	.-12     	; 0x2658 <__udivdi3+0xc8>
    2664:	fa 01       	movw	r30, r20
    2666:	e2 58       	subi	r30, 0x82	; 130
    2668:	ff 4f       	sbci	r31, 0xFF	; 255
    266a:	20 81       	ld	r18, Z
    266c:	40 e2       	ldi	r20, 0x20	; 32
    266e:	50 e0       	ldi	r21, 0x00	; 0
    2670:	60 e0       	ldi	r22, 0x00	; 0
    2672:	70 e0       	ldi	r23, 0x00	; 0
    2674:	48 1b       	sub	r20, r24
    2676:	59 0b       	sbc	r21, r25
    2678:	6a 0b       	sbc	r22, r26
    267a:	7b 0b       	sbc	r23, r27
    267c:	42 1b       	sub	r20, r18
    267e:	51 09       	sbc	r21, r1
    2680:	61 09       	sbc	r22, r1
    2682:	71 09       	sbc	r23, r1
    2684:	41 15       	cp	r20, r1
    2686:	51 05       	cpc	r21, r1
    2688:	61 05       	cpc	r22, r1
    268a:	71 05       	cpc	r23, r1
    268c:	a1 f1       	breq	.+104    	; 0x26f6 <__udivdi3+0x166>
    268e:	04 2e       	mov	r0, r20
    2690:	04 c0       	rjmp	.+8      	; 0x269a <__udivdi3+0x10a>
    2692:	88 0c       	add	r8, r8
    2694:	99 1c       	adc	r9, r9
    2696:	aa 1c       	adc	r10, r10
    2698:	bb 1c       	adc	r11, r11
    269a:	0a 94       	dec	r0
    269c:	d2 f7       	brpl	.-12     	; 0x2692 <__udivdi3+0x102>
    269e:	97 01       	movw	r18, r14
    26a0:	86 01       	movw	r16, r12
    26a2:	04 2e       	mov	r0, r20
    26a4:	04 c0       	rjmp	.+8      	; 0x26ae <__udivdi3+0x11e>
    26a6:	00 0f       	add	r16, r16
    26a8:	11 1f       	adc	r17, r17
    26aa:	22 1f       	adc	r18, r18
    26ac:	33 1f       	adc	r19, r19
    26ae:	0a 94       	dec	r0
    26b0:	d2 f7       	brpl	.-12     	; 0x26a6 <__udivdi3+0x116>
    26b2:	80 e2       	ldi	r24, 0x20	; 32
    26b4:	90 e0       	ldi	r25, 0x00	; 0
    26b6:	84 1b       	sub	r24, r20
    26b8:	95 0b       	sbc	r25, r21
    26ba:	cd a0       	lds	r28, 0x8d
    26bc:	de a0       	lds	r29, 0x8e
    26be:	ef a0       	lds	r30, 0x8f
    26c0:	f8 a4       	lds	r31, 0xa8
    26c2:	04 c0       	rjmp	.+8      	; 0x26cc <__udivdi3+0x13c>
    26c4:	f6 94       	lsr	r15
    26c6:	e7 94       	ror	r14
    26c8:	d7 94       	ror	r13
    26ca:	c7 94       	ror	r12
    26cc:	8a 95       	dec	r24
    26ce:	d2 f7       	brpl	.-12     	; 0x26c4 <__udivdi3+0x134>
    26d0:	c0 2a       	or	r12, r16
    26d2:	d1 2a       	or	r13, r17
    26d4:	e2 2a       	or	r14, r18
    26d6:	f3 2a       	or	r15, r19
    26d8:	0d a1       	lds	r16, 0x4d
    26da:	1e a1       	lds	r17, 0x4e
    26dc:	2f a1       	lds	r18, 0x4f
    26de:	38 a5       	lds	r19, 0x68
    26e0:	04 c0       	rjmp	.+8      	; 0x26ea <__udivdi3+0x15a>
    26e2:	00 0f       	add	r16, r16
    26e4:	11 1f       	adc	r17, r17
    26e6:	22 1f       	adc	r18, r18
    26e8:	33 1f       	adc	r19, r19
    26ea:	4a 95       	dec	r20
    26ec:	d2 f7       	brpl	.-12     	; 0x26e2 <__udivdi3+0x152>
    26ee:	0d a3       	lds	r16, 0x5d
    26f0:	1e a3       	lds	r17, 0x5e
    26f2:	2f a3       	lds	r18, 0x5f
    26f4:	38 a7       	lds	r19, 0x78
    26f6:	25 01       	movw	r4, r10
    26f8:	66 24       	eor	r6, r6
    26fa:	77 24       	eor	r7, r7
    26fc:	95 01       	movw	r18, r10
    26fe:	84 01       	movw	r16, r8
    2700:	20 70       	andi	r18, 0x00	; 0
    2702:	30 70       	andi	r19, 0x00	; 0
    2704:	09 a3       	lds	r16, 0x59
    2706:	1a a3       	lds	r17, 0x5a
    2708:	2b a3       	lds	r18, 0x5b
    270a:	3c a3       	lds	r19, 0x5c
    270c:	c7 01       	movw	r24, r14
    270e:	b6 01       	movw	r22, r12
    2710:	a3 01       	movw	r20, r6
    2712:	92 01       	movw	r18, r4
    2714:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2718:	2d 8f       	std	Y+29, r18	; 0x1d
    271a:	3e 8f       	std	Y+30, r19	; 0x1e
    271c:	4f 8f       	std	Y+31, r20	; 0x1f
    271e:	58 a3       	lds	r21, 0x58
    2720:	69 8f       	std	Y+25, r22	; 0x19
    2722:	7a 8f       	std	Y+26, r23	; 0x1a
    2724:	8b 8f       	std	Y+27, r24	; 0x1b
    2726:	9c 8f       	std	Y+28, r25	; 0x1c
    2728:	c7 01       	movw	r24, r14
    272a:	b6 01       	movw	r22, r12
    272c:	a3 01       	movw	r20, r6
    272e:	92 01       	movw	r18, r4
    2730:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2734:	ca 01       	movw	r24, r20
    2736:	b9 01       	movw	r22, r18
    2738:	29 a1       	lds	r18, 0x49
    273a:	3a a1       	lds	r19, 0x4a
    273c:	4b a1       	lds	r20, 0x4b
    273e:	5c a1       	lds	r21, 0x4c
    2740:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2744:	ab 01       	movw	r20, r22
    2746:	bc 01       	movw	r22, r24
    2748:	09 8d       	ldd	r16, Y+25	; 0x19
    274a:	1a 8d       	ldd	r17, Y+26	; 0x1a
    274c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    274e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2750:	78 01       	movw	r14, r16
    2752:	dd 24       	eor	r13, r13
    2754:	cc 24       	eor	r12, r12
    2756:	0d a1       	lds	r16, 0x4d
    2758:	1e a1       	lds	r17, 0x4e
    275a:	2f a1       	lds	r18, 0x4f
    275c:	38 a5       	lds	r19, 0x68
    275e:	c9 01       	movw	r24, r18
    2760:	aa 27       	eor	r26, r26
    2762:	bb 27       	eor	r27, r27
    2764:	c8 2a       	or	r12, r24
    2766:	d9 2a       	or	r13, r25
    2768:	ea 2a       	or	r14, r26
    276a:	fb 2a       	or	r15, r27
    276c:	0d 8d       	ldd	r16, Y+29	; 0x1d
    276e:	1e 8d       	ldd	r17, Y+30	; 0x1e
    2770:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2772:	38 a1       	lds	r19, 0x48
    2774:	c4 16       	cp	r12, r20
    2776:	d5 06       	cpc	r13, r21
    2778:	e6 06       	cpc	r14, r22
    277a:	f7 06       	cpc	r15, r23
    277c:	38 f5       	brcc	.+78     	; 0x27cc <__udivdi3+0x23c>
    277e:	01 50       	subi	r16, 0x01	; 1
    2780:	10 40       	sbci	r17, 0x00	; 0
    2782:	20 40       	sbci	r18, 0x00	; 0
    2784:	30 40       	sbci	r19, 0x00	; 0
    2786:	09 8f       	std	Y+25, r16	; 0x19
    2788:	1a 8f       	std	Y+26, r17	; 0x1a
    278a:	2b 8f       	std	Y+27, r18	; 0x1b
    278c:	3c 8f       	std	Y+28, r19	; 0x1c
    278e:	c8 0c       	add	r12, r8
    2790:	d9 1c       	adc	r13, r9
    2792:	ea 1c       	adc	r14, r10
    2794:	fb 1c       	adc	r15, r11
    2796:	c8 14       	cp	r12, r8
    2798:	d9 04       	cpc	r13, r9
    279a:	ea 04       	cpc	r14, r10
    279c:	fb 04       	cpc	r15, r11
    279e:	d0 f0       	brcs	.+52     	; 0x27d4 <__udivdi3+0x244>
    27a0:	c4 16       	cp	r12, r20
    27a2:	d5 06       	cpc	r13, r21
    27a4:	e6 06       	cpc	r14, r22
    27a6:	f7 06       	cpc	r15, r23
    27a8:	a8 f4       	brcc	.+42     	; 0x27d4 <__udivdi3+0x244>
    27aa:	0d 8d       	ldd	r16, Y+29	; 0x1d
    27ac:	1e 8d       	ldd	r17, Y+30	; 0x1e
    27ae:	2f 8d       	ldd	r18, Y+31	; 0x1f
    27b0:	38 a1       	lds	r19, 0x48
    27b2:	02 50       	subi	r16, 0x02	; 2
    27b4:	10 40       	sbci	r17, 0x00	; 0
    27b6:	20 40       	sbci	r18, 0x00	; 0
    27b8:	30 40       	sbci	r19, 0x00	; 0
    27ba:	09 8f       	std	Y+25, r16	; 0x19
    27bc:	1a 8f       	std	Y+26, r17	; 0x1a
    27be:	2b 8f       	std	Y+27, r18	; 0x1b
    27c0:	3c 8f       	std	Y+28, r19	; 0x1c
    27c2:	c8 0c       	add	r12, r8
    27c4:	d9 1c       	adc	r13, r9
    27c6:	ea 1c       	adc	r14, r10
    27c8:	fb 1c       	adc	r15, r11
    27ca:	04 c0       	rjmp	.+8      	; 0x27d4 <__udivdi3+0x244>
    27cc:	09 8f       	std	Y+25, r16	; 0x19
    27ce:	1a 8f       	std	Y+26, r17	; 0x1a
    27d0:	2b 8f       	std	Y+27, r18	; 0x1b
    27d2:	3c 8f       	std	Y+28, r19	; 0x1c
    27d4:	c4 1a       	sub	r12, r20
    27d6:	d5 0a       	sbc	r13, r21
    27d8:	e6 0a       	sbc	r14, r22
    27da:	f7 0a       	sbc	r15, r23
    27dc:	c7 01       	movw	r24, r14
    27de:	b6 01       	movw	r22, r12
    27e0:	a3 01       	movw	r20, r6
    27e2:	92 01       	movw	r18, r4
    27e4:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    27e8:	2d 8f       	std	Y+29, r18	; 0x1d
    27ea:	3e 8f       	std	Y+30, r19	; 0x1e
    27ec:	4f 8f       	std	Y+31, r20	; 0x1f
    27ee:	58 a3       	lds	r21, 0x58
    27f0:	69 a7       	lds	r22, 0x79
    27f2:	7a a7       	lds	r23, 0x7a
    27f4:	8b a7       	lds	r24, 0x7b
    27f6:	9c a7       	lds	r25, 0x7c
    27f8:	c7 01       	movw	r24, r14
    27fa:	b6 01       	movw	r22, r12
    27fc:	a3 01       	movw	r20, r6
    27fe:	92 01       	movw	r18, r4
    2800:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2804:	ca 01       	movw	r24, r20
    2806:	b9 01       	movw	r22, r18
    2808:	29 a1       	lds	r18, 0x49
    280a:	3a a1       	lds	r19, 0x4a
    280c:	4b a1       	lds	r20, 0x4b
    280e:	5c a1       	lds	r21, 0x4c
    2810:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2814:	6b 01       	movw	r12, r22
    2816:	7c 01       	movw	r14, r24
    2818:	49 a5       	lds	r20, 0x69
    281a:	5a a5       	lds	r21, 0x6a
    281c:	6b a5       	lds	r22, 0x6b
    281e:	7c a5       	lds	r23, 0x6c
    2820:	9a 01       	movw	r18, r20
    2822:	11 27       	eor	r17, r17
    2824:	00 27       	eor	r16, r16
    2826:	4d a1       	lds	r20, 0x4d
    2828:	5e a1       	lds	r21, 0x4e
    282a:	6f a1       	lds	r22, 0x4f
    282c:	78 a5       	lds	r23, 0x68
    282e:	60 70       	andi	r22, 0x00	; 0
    2830:	70 70       	andi	r23, 0x00	; 0
    2832:	04 2b       	or	r16, r20
    2834:	15 2b       	or	r17, r21
    2836:	26 2b       	or	r18, r22
    2838:	37 2b       	or	r19, r23
    283a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    283c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    283e:	af 8d       	ldd	r26, Y+31	; 0x1f
    2840:	b8 a1       	lds	r27, 0x48
    2842:	0c 15       	cp	r16, r12
    2844:	1d 05       	cpc	r17, r13
    2846:	2e 05       	cpc	r18, r14
    2848:	3f 05       	cpc	r19, r15
    284a:	c0 f4       	brcc	.+48     	; 0x287c <__udivdi3+0x2ec>
    284c:	01 97       	sbiw	r24, 0x01	; 1
    284e:	a1 09       	sbc	r26, r1
    2850:	b1 09       	sbc	r27, r1
    2852:	08 0d       	add	r16, r8
    2854:	19 1d       	adc	r17, r9
    2856:	2a 1d       	adc	r18, r10
    2858:	3b 1d       	adc	r19, r11
    285a:	08 15       	cp	r16, r8
    285c:	19 05       	cpc	r17, r9
    285e:	2a 05       	cpc	r18, r10
    2860:	3b 05       	cpc	r19, r11
    2862:	60 f0       	brcs	.+24     	; 0x287c <__udivdi3+0x2ec>
    2864:	0c 15       	cp	r16, r12
    2866:	1d 05       	cpc	r17, r13
    2868:	2e 05       	cpc	r18, r14
    286a:	3f 05       	cpc	r19, r15
    286c:	38 f4       	brcc	.+14     	; 0x287c <__udivdi3+0x2ec>
    286e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2870:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2872:	af 8d       	ldd	r26, Y+31	; 0x1f
    2874:	b8 a1       	lds	r27, 0x48
    2876:	02 97       	sbiw	r24, 0x02	; 2
    2878:	a1 09       	sbc	r26, r1
    287a:	b1 09       	sbc	r27, r1
    287c:	09 8d       	ldd	r16, Y+25	; 0x19
    287e:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2880:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2882:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2884:	78 01       	movw	r14, r16
    2886:	dd 24       	eor	r13, r13
    2888:	cc 24       	eor	r12, r12
    288a:	c8 2a       	or	r12, r24
    288c:	d9 2a       	or	r13, r25
    288e:	ea 2a       	or	r14, r26
    2890:	fb 2a       	or	r15, r27
    2892:	a5 c4       	rjmp	.+2378   	; 0x31de <__udivdi3+0xc4e>
    2894:	81 14       	cp	r8, r1
    2896:	91 04       	cpc	r9, r1
    2898:	a1 04       	cpc	r10, r1
    289a:	b1 04       	cpc	r11, r1
    289c:	51 f4       	brne	.+20     	; 0x28b2 <__udivdi3+0x322>
    289e:	61 e0       	ldi	r22, 0x01	; 1
    28a0:	70 e0       	ldi	r23, 0x00	; 0
    28a2:	80 e0       	ldi	r24, 0x00	; 0
    28a4:	90 e0       	ldi	r25, 0x00	; 0
    28a6:	a5 01       	movw	r20, r10
    28a8:	94 01       	movw	r18, r8
    28aa:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    28ae:	49 01       	movw	r8, r18
    28b0:	5a 01       	movw	r10, r20
    28b2:	10 e0       	ldi	r17, 0x00	; 0
    28b4:	81 16       	cp	r8, r17
    28b6:	10 e0       	ldi	r17, 0x00	; 0
    28b8:	91 06       	cpc	r9, r17
    28ba:	11 e0       	ldi	r17, 0x01	; 1
    28bc:	a1 06       	cpc	r10, r17
    28be:	10 e0       	ldi	r17, 0x00	; 0
    28c0:	b1 06       	cpc	r11, r17
    28c2:	58 f4       	brcc	.+22     	; 0x28da <__udivdi3+0x34a>
    28c4:	2f ef       	ldi	r18, 0xFF	; 255
    28c6:	82 16       	cp	r8, r18
    28c8:	91 04       	cpc	r9, r1
    28ca:	a1 04       	cpc	r10, r1
    28cc:	b1 04       	cpc	r11, r1
    28ce:	09 f0       	breq	.+2      	; 0x28d2 <__udivdi3+0x342>
    28d0:	90 f4       	brcc	.+36     	; 0x28f6 <__udivdi3+0x366>
    28d2:	80 e0       	ldi	r24, 0x00	; 0
    28d4:	90 e0       	ldi	r25, 0x00	; 0
    28d6:	dc 01       	movw	r26, r24
    28d8:	17 c0       	rjmp	.+46     	; 0x2908 <__udivdi3+0x378>
    28da:	30 e0       	ldi	r19, 0x00	; 0
    28dc:	83 16       	cp	r8, r19
    28de:	30 e0       	ldi	r19, 0x00	; 0
    28e0:	93 06       	cpc	r9, r19
    28e2:	30 e0       	ldi	r19, 0x00	; 0
    28e4:	a3 06       	cpc	r10, r19
    28e6:	31 e0       	ldi	r19, 0x01	; 1
    28e8:	b3 06       	cpc	r11, r19
    28ea:	50 f4       	brcc	.+20     	; 0x2900 <__udivdi3+0x370>
    28ec:	80 e1       	ldi	r24, 0x10	; 16
    28ee:	90 e0       	ldi	r25, 0x00	; 0
    28f0:	a0 e0       	ldi	r26, 0x00	; 0
    28f2:	b0 e0       	ldi	r27, 0x00	; 0
    28f4:	09 c0       	rjmp	.+18     	; 0x2908 <__udivdi3+0x378>
    28f6:	88 e0       	ldi	r24, 0x08	; 8
    28f8:	90 e0       	ldi	r25, 0x00	; 0
    28fa:	a0 e0       	ldi	r26, 0x00	; 0
    28fc:	b0 e0       	ldi	r27, 0x00	; 0
    28fe:	04 c0       	rjmp	.+8      	; 0x2908 <__udivdi3+0x378>
    2900:	88 e1       	ldi	r24, 0x18	; 24
    2902:	90 e0       	ldi	r25, 0x00	; 0
    2904:	a0 e0       	ldi	r26, 0x00	; 0
    2906:	b0 e0       	ldi	r27, 0x00	; 0
    2908:	b5 01       	movw	r22, r10
    290a:	a4 01       	movw	r20, r8
    290c:	08 2e       	mov	r0, r24
    290e:	04 c0       	rjmp	.+8      	; 0x2918 <__udivdi3+0x388>
    2910:	76 95       	lsr	r23
    2912:	67 95       	ror	r22
    2914:	57 95       	ror	r21
    2916:	47 95       	ror	r20
    2918:	0a 94       	dec	r0
    291a:	d2 f7       	brpl	.-12     	; 0x2910 <__udivdi3+0x380>
    291c:	fa 01       	movw	r30, r20
    291e:	e2 58       	subi	r30, 0x82	; 130
    2920:	ff 4f       	sbci	r31, 0xFF	; 255
    2922:	20 81       	ld	r18, Z
    2924:	ac 01       	movw	r20, r24
    2926:	bd 01       	movw	r22, r26
    2928:	42 0f       	add	r20, r18
    292a:	51 1d       	adc	r21, r1
    292c:	61 1d       	adc	r22, r1
    292e:	71 1d       	adc	r23, r1
    2930:	80 e2       	ldi	r24, 0x20	; 32
    2932:	90 e0       	ldi	r25, 0x00	; 0
    2934:	a0 e0       	ldi	r26, 0x00	; 0
    2936:	b0 e0       	ldi	r27, 0x00	; 0
    2938:	84 1b       	sub	r24, r20
    293a:	95 0b       	sbc	r25, r21
    293c:	a6 0b       	sbc	r26, r22
    293e:	b7 0b       	sbc	r27, r23
    2940:	51 f4       	brne	.+20     	; 0x2956 <__udivdi3+0x3c6>
    2942:	c8 18       	sub	r12, r8
    2944:	d9 08       	sbc	r13, r9
    2946:	ea 08       	sbc	r14, r10
    2948:	fb 08       	sbc	r15, r11
    294a:	f1 e0       	ldi	r31, 0x01	; 1
    294c:	4f 2e       	mov	r4, r31
    294e:	51 2c       	mov	r5, r1
    2950:	61 2c       	mov	r6, r1
    2952:	71 2c       	mov	r7, r1
    2954:	24 c1       	rjmp	.+584    	; 0x2b9e <__udivdi3+0x60e>
    2956:	08 2e       	mov	r0, r24
    2958:	04 c0       	rjmp	.+8      	; 0x2962 <__udivdi3+0x3d2>
    295a:	88 0c       	add	r8, r8
    295c:	99 1c       	adc	r9, r9
    295e:	aa 1c       	adc	r10, r10
    2960:	bb 1c       	adc	r11, r11
    2962:	0a 94       	dec	r0
    2964:	d2 f7       	brpl	.-12     	; 0x295a <__udivdi3+0x3ca>
    2966:	97 01       	movw	r18, r14
    2968:	86 01       	movw	r16, r12
    296a:	04 2e       	mov	r0, r20
    296c:	04 c0       	rjmp	.+8      	; 0x2976 <__udivdi3+0x3e6>
    296e:	36 95       	lsr	r19
    2970:	27 95       	ror	r18
    2972:	17 95       	ror	r17
    2974:	07 95       	ror	r16
    2976:	0a 94       	dec	r0
    2978:	d2 f7       	brpl	.-12     	; 0x296e <__udivdi3+0x3de>
    297a:	09 a3       	lds	r16, 0x59
    297c:	1a a3       	lds	r17, 0x5a
    297e:	2b a3       	lds	r18, 0x5b
    2980:	3c a3       	lds	r19, 0x5c
    2982:	97 01       	movw	r18, r14
    2984:	86 01       	movw	r16, r12
    2986:	08 2e       	mov	r0, r24
    2988:	04 c0       	rjmp	.+8      	; 0x2992 <__udivdi3+0x402>
    298a:	00 0f       	add	r16, r16
    298c:	11 1f       	adc	r17, r17
    298e:	22 1f       	adc	r18, r18
    2990:	33 1f       	adc	r19, r19
    2992:	0a 94       	dec	r0
    2994:	d2 f7       	brpl	.-12     	; 0x298a <__udivdi3+0x3fa>
    2996:	0d 8f       	std	Y+29, r16	; 0x1d
    2998:	1e 8f       	std	Y+30, r17	; 0x1e
    299a:	2f 8f       	std	Y+31, r18	; 0x1f
    299c:	38 a3       	lds	r19, 0x58
    299e:	0d a1       	lds	r16, 0x4d
    29a0:	1e a1       	lds	r17, 0x4e
    29a2:	2f a1       	lds	r18, 0x4f
    29a4:	38 a5       	lds	r19, 0x68
    29a6:	04 c0       	rjmp	.+8      	; 0x29b0 <__udivdi3+0x420>
    29a8:	36 95       	lsr	r19
    29aa:	27 95       	ror	r18
    29ac:	17 95       	ror	r17
    29ae:	07 95       	ror	r16
    29b0:	4a 95       	dec	r20
    29b2:	d2 f7       	brpl	.-12     	; 0x29a8 <__udivdi3+0x418>
    29b4:	b9 01       	movw	r22, r18
    29b6:	a8 01       	movw	r20, r16
    29b8:	0d 8d       	ldd	r16, Y+29	; 0x1d
    29ba:	1e 8d       	ldd	r17, Y+30	; 0x1e
    29bc:	2f 8d       	ldd	r18, Y+31	; 0x1f
    29be:	38 a1       	lds	r19, 0x48
    29c0:	04 2b       	or	r16, r20
    29c2:	15 2b       	or	r17, r21
    29c4:	26 2b       	or	r18, r22
    29c6:	37 2b       	or	r19, r23
    29c8:	0d 8f       	std	Y+29, r16	; 0x1d
    29ca:	1e 8f       	std	Y+30, r17	; 0x1e
    29cc:	2f 8f       	std	Y+31, r18	; 0x1f
    29ce:	38 a3       	lds	r19, 0x58
    29d0:	0d a1       	lds	r16, 0x4d
    29d2:	1e a1       	lds	r17, 0x4e
    29d4:	2f a1       	lds	r18, 0x4f
    29d6:	38 a5       	lds	r19, 0x68
    29d8:	04 c0       	rjmp	.+8      	; 0x29e2 <__udivdi3+0x452>
    29da:	00 0f       	add	r16, r16
    29dc:	11 1f       	adc	r17, r17
    29de:	22 1f       	adc	r18, r18
    29e0:	33 1f       	adc	r19, r19
    29e2:	8a 95       	dec	r24
    29e4:	d2 f7       	brpl	.-12     	; 0x29da <__udivdi3+0x44a>
    29e6:	0d a3       	lds	r16, 0x5d
    29e8:	1e a3       	lds	r17, 0x5e
    29ea:	2f a3       	lds	r18, 0x5f
    29ec:	38 a7       	lds	r19, 0x78
    29ee:	25 01       	movw	r4, r10
    29f0:	66 24       	eor	r6, r6
    29f2:	77 24       	eor	r7, r7
    29f4:	95 01       	movw	r18, r10
    29f6:	84 01       	movw	r16, r8
    29f8:	20 70       	andi	r18, 0x00	; 0
    29fa:	30 70       	andi	r19, 0x00	; 0
    29fc:	09 a7       	lds	r16, 0x79
    29fe:	1a a7       	lds	r17, 0x7a
    2a00:	2b a7       	lds	r18, 0x7b
    2a02:	3c a7       	lds	r19, 0x7c
    2a04:	69 a1       	lds	r22, 0x49
    2a06:	7a a1       	lds	r23, 0x4a
    2a08:	8b a1       	lds	r24, 0x4b
    2a0a:	9c a1       	lds	r25, 0x4c
    2a0c:	a3 01       	movw	r20, r6
    2a0e:	92 01       	movw	r18, r4
    2a10:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2a14:	29 8f       	std	Y+25, r18	; 0x19
    2a16:	3a 8f       	std	Y+26, r19	; 0x1a
    2a18:	4b 8f       	std	Y+27, r20	; 0x1b
    2a1a:	5c 8f       	std	Y+28, r21	; 0x1c
    2a1c:	6b 01       	movw	r12, r22
    2a1e:	7c 01       	movw	r14, r24
    2a20:	69 a1       	lds	r22, 0x49
    2a22:	7a a1       	lds	r23, 0x4a
    2a24:	8b a1       	lds	r24, 0x4b
    2a26:	9c a1       	lds	r25, 0x4c
    2a28:	a3 01       	movw	r20, r6
    2a2a:	92 01       	movw	r18, r4
    2a2c:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2a30:	ca 01       	movw	r24, r20
    2a32:	b9 01       	movw	r22, r18
    2a34:	29 a5       	lds	r18, 0x69
    2a36:	3a a5       	lds	r19, 0x6a
    2a38:	4b a5       	lds	r20, 0x6b
    2a3a:	5c a5       	lds	r21, 0x6c
    2a3c:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2a40:	ab 01       	movw	r20, r22
    2a42:	bc 01       	movw	r22, r24
    2a44:	76 01       	movw	r14, r12
    2a46:	dd 24       	eor	r13, r13
    2a48:	cc 24       	eor	r12, r12
    2a4a:	0d 8d       	ldd	r16, Y+29	; 0x1d
    2a4c:	1e 8d       	ldd	r17, Y+30	; 0x1e
    2a4e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2a50:	38 a1       	lds	r19, 0x48
    2a52:	c9 01       	movw	r24, r18
    2a54:	aa 27       	eor	r26, r26
    2a56:	bb 27       	eor	r27, r27
    2a58:	c8 2a       	or	r12, r24
    2a5a:	d9 2a       	or	r13, r25
    2a5c:	ea 2a       	or	r14, r26
    2a5e:	fb 2a       	or	r15, r27
    2a60:	09 8d       	ldd	r16, Y+25	; 0x19
    2a62:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2a64:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2a66:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2a68:	c4 16       	cp	r12, r20
    2a6a:	d5 06       	cpc	r13, r21
    2a6c:	e6 06       	cpc	r14, r22
    2a6e:	f7 06       	cpc	r15, r23
    2a70:	38 f5       	brcc	.+78     	; 0x2ac0 <__udivdi3+0x530>
    2a72:	01 50       	subi	r16, 0x01	; 1
    2a74:	10 40       	sbci	r17, 0x00	; 0
    2a76:	20 40       	sbci	r18, 0x00	; 0
    2a78:	30 40       	sbci	r19, 0x00	; 0
    2a7a:	09 a3       	lds	r16, 0x59
    2a7c:	1a a3       	lds	r17, 0x5a
    2a7e:	2b a3       	lds	r18, 0x5b
    2a80:	3c a3       	lds	r19, 0x5c
    2a82:	c8 0c       	add	r12, r8
    2a84:	d9 1c       	adc	r13, r9
    2a86:	ea 1c       	adc	r14, r10
    2a88:	fb 1c       	adc	r15, r11
    2a8a:	c8 14       	cp	r12, r8
    2a8c:	d9 04       	cpc	r13, r9
    2a8e:	ea 04       	cpc	r14, r10
    2a90:	fb 04       	cpc	r15, r11
    2a92:	d0 f0       	brcs	.+52     	; 0x2ac8 <__udivdi3+0x538>
    2a94:	c4 16       	cp	r12, r20
    2a96:	d5 06       	cpc	r13, r21
    2a98:	e6 06       	cpc	r14, r22
    2a9a:	f7 06       	cpc	r15, r23
    2a9c:	a8 f4       	brcc	.+42     	; 0x2ac8 <__udivdi3+0x538>
    2a9e:	09 8d       	ldd	r16, Y+25	; 0x19
    2aa0:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2aa2:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2aa4:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2aa6:	02 50       	subi	r16, 0x02	; 2
    2aa8:	10 40       	sbci	r17, 0x00	; 0
    2aaa:	20 40       	sbci	r18, 0x00	; 0
    2aac:	30 40       	sbci	r19, 0x00	; 0
    2aae:	09 a3       	lds	r16, 0x59
    2ab0:	1a a3       	lds	r17, 0x5a
    2ab2:	2b a3       	lds	r18, 0x5b
    2ab4:	3c a3       	lds	r19, 0x5c
    2ab6:	c8 0c       	add	r12, r8
    2ab8:	d9 1c       	adc	r13, r9
    2aba:	ea 1c       	adc	r14, r10
    2abc:	fb 1c       	adc	r15, r11
    2abe:	04 c0       	rjmp	.+8      	; 0x2ac8 <__udivdi3+0x538>
    2ac0:	09 a3       	lds	r16, 0x59
    2ac2:	1a a3       	lds	r17, 0x5a
    2ac4:	2b a3       	lds	r18, 0x5b
    2ac6:	3c a3       	lds	r19, 0x5c
    2ac8:	c4 1a       	sub	r12, r20
    2aca:	d5 0a       	sbc	r13, r21
    2acc:	e6 0a       	sbc	r14, r22
    2ace:	f7 0a       	sbc	r15, r23
    2ad0:	c7 01       	movw	r24, r14
    2ad2:	b6 01       	movw	r22, r12
    2ad4:	a3 01       	movw	r20, r6
    2ad6:	92 01       	movw	r18, r4
    2ad8:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2adc:	29 8f       	std	Y+25, r18	; 0x19
    2ade:	3a 8f       	std	Y+26, r19	; 0x1a
    2ae0:	4b 8f       	std	Y+27, r20	; 0x1b
    2ae2:	5c 8f       	std	Y+28, r21	; 0x1c
    2ae4:	6d a7       	lds	r22, 0x7d
    2ae6:	7e a7       	lds	r23, 0x7e
    2ae8:	8f a7       	lds	r24, 0x7f
    2aea:	98 ab       	sts	0x58, r25
    2aec:	c7 01       	movw	r24, r14
    2aee:	b6 01       	movw	r22, r12
    2af0:	a3 01       	movw	r20, r6
    2af2:	92 01       	movw	r18, r4
    2af4:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2af8:	ca 01       	movw	r24, r20
    2afa:	b9 01       	movw	r22, r18
    2afc:	29 a5       	lds	r18, 0x69
    2afe:	3a a5       	lds	r19, 0x6a
    2b00:	4b a5       	lds	r20, 0x6b
    2b02:	5c a5       	lds	r21, 0x6c
    2b04:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2b08:	8b 01       	movw	r16, r22
    2b0a:	9c 01       	movw	r18, r24
    2b0c:	4d a5       	lds	r20, 0x6d
    2b0e:	5e a5       	lds	r21, 0x6e
    2b10:	6f a5       	lds	r22, 0x6f
    2b12:	78 a9       	sts	0x48, r23
    2b14:	da 01       	movw	r26, r20
    2b16:	99 27       	eor	r25, r25
    2b18:	88 27       	eor	r24, r24
    2b1a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2b1c:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2b1e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2b20:	78 a1       	lds	r23, 0x48
    2b22:	60 70       	andi	r22, 0x00	; 0
    2b24:	70 70       	andi	r23, 0x00	; 0
    2b26:	84 2b       	or	r24, r20
    2b28:	95 2b       	or	r25, r21
    2b2a:	a6 2b       	or	r26, r22
    2b2c:	b7 2b       	or	r27, r23
    2b2e:	49 8d       	ldd	r20, Y+25	; 0x19
    2b30:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2b32:	6b 8d       	ldd	r22, Y+27	; 0x1b
    2b34:	7c 8d       	ldd	r23, Y+28	; 0x1c
    2b36:	80 17       	cp	r24, r16
    2b38:	91 07       	cpc	r25, r17
    2b3a:	a2 07       	cpc	r26, r18
    2b3c:	b3 07       	cpc	r27, r19
    2b3e:	f0 f4       	brcc	.+60     	; 0x2b7c <__udivdi3+0x5ec>
    2b40:	41 50       	subi	r20, 0x01	; 1
    2b42:	50 40       	sbci	r21, 0x00	; 0
    2b44:	60 40       	sbci	r22, 0x00	; 0
    2b46:	70 40       	sbci	r23, 0x00	; 0
    2b48:	88 0d       	add	r24, r8
    2b4a:	99 1d       	adc	r25, r9
    2b4c:	aa 1d       	adc	r26, r10
    2b4e:	bb 1d       	adc	r27, r11
    2b50:	88 15       	cp	r24, r8
    2b52:	99 05       	cpc	r25, r9
    2b54:	aa 05       	cpc	r26, r10
    2b56:	bb 05       	cpc	r27, r11
    2b58:	88 f0       	brcs	.+34     	; 0x2b7c <__udivdi3+0x5ec>
    2b5a:	80 17       	cp	r24, r16
    2b5c:	91 07       	cpc	r25, r17
    2b5e:	a2 07       	cpc	r26, r18
    2b60:	b3 07       	cpc	r27, r19
    2b62:	60 f4       	brcc	.+24     	; 0x2b7c <__udivdi3+0x5ec>
    2b64:	49 8d       	ldd	r20, Y+25	; 0x19
    2b66:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2b68:	6b 8d       	ldd	r22, Y+27	; 0x1b
    2b6a:	7c 8d       	ldd	r23, Y+28	; 0x1c
    2b6c:	42 50       	subi	r20, 0x02	; 2
    2b6e:	50 40       	sbci	r21, 0x00	; 0
    2b70:	60 40       	sbci	r22, 0x00	; 0
    2b72:	70 40       	sbci	r23, 0x00	; 0
    2b74:	88 0d       	add	r24, r8
    2b76:	99 1d       	adc	r25, r9
    2b78:	aa 1d       	adc	r26, r10
    2b7a:	bb 1d       	adc	r27, r11
    2b7c:	6c 01       	movw	r12, r24
    2b7e:	7d 01       	movw	r14, r26
    2b80:	c0 1a       	sub	r12, r16
    2b82:	d1 0a       	sbc	r13, r17
    2b84:	e2 0a       	sbc	r14, r18
    2b86:	f3 0a       	sbc	r15, r19
    2b88:	09 a1       	lds	r16, 0x49
    2b8a:	1a a1       	lds	r17, 0x4a
    2b8c:	2b a1       	lds	r18, 0x4b
    2b8e:	3c a1       	lds	r19, 0x4c
    2b90:	38 01       	movw	r6, r16
    2b92:	55 24       	eor	r5, r5
    2b94:	44 24       	eor	r4, r4
    2b96:	44 2a       	or	r4, r20
    2b98:	55 2a       	or	r5, r21
    2b9a:	66 2a       	or	r6, r22
    2b9c:	77 2a       	or	r7, r23
    2b9e:	85 01       	movw	r16, r10
    2ba0:	22 27       	eor	r18, r18
    2ba2:	33 27       	eor	r19, r19
    2ba4:	0d 8f       	std	Y+29, r16	; 0x1d
    2ba6:	1e 8f       	std	Y+30, r17	; 0x1e
    2ba8:	2f 8f       	std	Y+31, r18	; 0x1f
    2baa:	38 a3       	lds	r19, 0x58
    2bac:	95 01       	movw	r18, r10
    2bae:	84 01       	movw	r16, r8
    2bb0:	20 70       	andi	r18, 0x00	; 0
    2bb2:	30 70       	andi	r19, 0x00	; 0
    2bb4:	09 a7       	lds	r16, 0x79
    2bb6:	1a a7       	lds	r17, 0x7a
    2bb8:	2b a7       	lds	r18, 0x7b
    2bba:	3c a7       	lds	r19, 0x7c
    2bbc:	c7 01       	movw	r24, r14
    2bbe:	b6 01       	movw	r22, r12
    2bc0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2bc2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2bc4:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2bc6:	58 a1       	lds	r21, 0x48
    2bc8:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2bcc:	29 8f       	std	Y+25, r18	; 0x19
    2bce:	3a 8f       	std	Y+26, r19	; 0x1a
    2bd0:	4b 8f       	std	Y+27, r20	; 0x1b
    2bd2:	5c 8f       	std	Y+28, r21	; 0x1c
    2bd4:	69 a3       	lds	r22, 0x59
    2bd6:	7a a3       	lds	r23, 0x5a
    2bd8:	8b a3       	lds	r24, 0x5b
    2bda:	9c a3       	lds	r25, 0x5c
    2bdc:	c7 01       	movw	r24, r14
    2bde:	b6 01       	movw	r22, r12
    2be0:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2be2:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2be4:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2be6:	58 a1       	lds	r21, 0x48
    2be8:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2bec:	ca 01       	movw	r24, r20
    2bee:	b9 01       	movw	r22, r18
    2bf0:	29 a5       	lds	r18, 0x69
    2bf2:	3a a5       	lds	r19, 0x6a
    2bf4:	4b a5       	lds	r20, 0x6b
    2bf6:	5c a5       	lds	r21, 0x6c
    2bf8:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2bfc:	ab 01       	movw	r20, r22
    2bfe:	bc 01       	movw	r22, r24
    2c00:	09 a1       	lds	r16, 0x49
    2c02:	1a a1       	lds	r17, 0x4a
    2c04:	2b a1       	lds	r18, 0x4b
    2c06:	3c a1       	lds	r19, 0x4c
    2c08:	78 01       	movw	r14, r16
    2c0a:	dd 24       	eor	r13, r13
    2c0c:	cc 24       	eor	r12, r12
    2c0e:	0d a1       	lds	r16, 0x4d
    2c10:	1e a1       	lds	r17, 0x4e
    2c12:	2f a1       	lds	r18, 0x4f
    2c14:	38 a5       	lds	r19, 0x68
    2c16:	c9 01       	movw	r24, r18
    2c18:	aa 27       	eor	r26, r26
    2c1a:	bb 27       	eor	r27, r27
    2c1c:	c8 2a       	or	r12, r24
    2c1e:	d9 2a       	or	r13, r25
    2c20:	ea 2a       	or	r14, r26
    2c22:	fb 2a       	or	r15, r27
    2c24:	09 8d       	ldd	r16, Y+25	; 0x19
    2c26:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2c28:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2c2a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2c2c:	c4 16       	cp	r12, r20
    2c2e:	d5 06       	cpc	r13, r21
    2c30:	e6 06       	cpc	r14, r22
    2c32:	f7 06       	cpc	r15, r23
    2c34:	38 f5       	brcc	.+78     	; 0x2c84 <__udivdi3+0x6f4>
    2c36:	01 50       	subi	r16, 0x01	; 1
    2c38:	10 40       	sbci	r17, 0x00	; 0
    2c3a:	20 40       	sbci	r18, 0x00	; 0
    2c3c:	30 40       	sbci	r19, 0x00	; 0
    2c3e:	09 a3       	lds	r16, 0x59
    2c40:	1a a3       	lds	r17, 0x5a
    2c42:	2b a3       	lds	r18, 0x5b
    2c44:	3c a3       	lds	r19, 0x5c
    2c46:	c8 0c       	add	r12, r8
    2c48:	d9 1c       	adc	r13, r9
    2c4a:	ea 1c       	adc	r14, r10
    2c4c:	fb 1c       	adc	r15, r11
    2c4e:	c8 14       	cp	r12, r8
    2c50:	d9 04       	cpc	r13, r9
    2c52:	ea 04       	cpc	r14, r10
    2c54:	fb 04       	cpc	r15, r11
    2c56:	d0 f0       	brcs	.+52     	; 0x2c8c <__udivdi3+0x6fc>
    2c58:	c4 16       	cp	r12, r20
    2c5a:	d5 06       	cpc	r13, r21
    2c5c:	e6 06       	cpc	r14, r22
    2c5e:	f7 06       	cpc	r15, r23
    2c60:	a8 f4       	brcc	.+42     	; 0x2c8c <__udivdi3+0x6fc>
    2c62:	09 8d       	ldd	r16, Y+25	; 0x19
    2c64:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2c66:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2c68:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2c6a:	02 50       	subi	r16, 0x02	; 2
    2c6c:	10 40       	sbci	r17, 0x00	; 0
    2c6e:	20 40       	sbci	r18, 0x00	; 0
    2c70:	30 40       	sbci	r19, 0x00	; 0
    2c72:	09 a3       	lds	r16, 0x59
    2c74:	1a a3       	lds	r17, 0x5a
    2c76:	2b a3       	lds	r18, 0x5b
    2c78:	3c a3       	lds	r19, 0x5c
    2c7a:	c8 0c       	add	r12, r8
    2c7c:	d9 1c       	adc	r13, r9
    2c7e:	ea 1c       	adc	r14, r10
    2c80:	fb 1c       	adc	r15, r11
    2c82:	04 c0       	rjmp	.+8      	; 0x2c8c <__udivdi3+0x6fc>
    2c84:	09 a3       	lds	r16, 0x59
    2c86:	1a a3       	lds	r17, 0x5a
    2c88:	2b a3       	lds	r18, 0x5b
    2c8a:	3c a3       	lds	r19, 0x5c
    2c8c:	c4 1a       	sub	r12, r20
    2c8e:	d5 0a       	sbc	r13, r21
    2c90:	e6 0a       	sbc	r14, r22
    2c92:	f7 0a       	sbc	r15, r23
    2c94:	c7 01       	movw	r24, r14
    2c96:	b6 01       	movw	r22, r12
    2c98:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2c9a:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2c9c:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2c9e:	58 a1       	lds	r21, 0x48
    2ca0:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2ca4:	29 8f       	std	Y+25, r18	; 0x19
    2ca6:	3a 8f       	std	Y+26, r19	; 0x1a
    2ca8:	4b 8f       	std	Y+27, r20	; 0x1b
    2caa:	5c 8f       	std	Y+28, r21	; 0x1c
    2cac:	6d a7       	lds	r22, 0x7d
    2cae:	7e a7       	lds	r23, 0x7e
    2cb0:	8f a7       	lds	r24, 0x7f
    2cb2:	98 ab       	sts	0x58, r25
    2cb4:	c7 01       	movw	r24, r14
    2cb6:	b6 01       	movw	r22, r12
    2cb8:	2d 8d       	ldd	r18, Y+29	; 0x1d
    2cba:	3e 8d       	ldd	r19, Y+30	; 0x1e
    2cbc:	4f 8d       	ldd	r20, Y+31	; 0x1f
    2cbe:	58 a1       	lds	r21, 0x48
    2cc0:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2cc4:	ca 01       	movw	r24, r20
    2cc6:	b9 01       	movw	r22, r18
    2cc8:	29 a5       	lds	r18, 0x69
    2cca:	3a a5       	lds	r19, 0x6a
    2ccc:	4b a5       	lds	r20, 0x6b
    2cce:	5c a5       	lds	r21, 0x6c
    2cd0:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2cd4:	8b 01       	movw	r16, r22
    2cd6:	9c 01       	movw	r18, r24
    2cd8:	4d a5       	lds	r20, 0x6d
    2cda:	5e a5       	lds	r21, 0x6e
    2cdc:	6f a5       	lds	r22, 0x6f
    2cde:	78 a9       	sts	0x48, r23
    2ce0:	da 01       	movw	r26, r20
    2ce2:	99 27       	eor	r25, r25
    2ce4:	88 27       	eor	r24, r24
    2ce6:	4d a1       	lds	r20, 0x4d
    2ce8:	5e a1       	lds	r21, 0x4e
    2cea:	6f a1       	lds	r22, 0x4f
    2cec:	78 a5       	lds	r23, 0x68
    2cee:	60 70       	andi	r22, 0x00	; 0
    2cf0:	70 70       	andi	r23, 0x00	; 0
    2cf2:	84 2b       	or	r24, r20
    2cf4:	95 2b       	or	r25, r21
    2cf6:	a6 2b       	or	r26, r22
    2cf8:	b7 2b       	or	r27, r23
    2cfa:	49 8d       	ldd	r20, Y+25	; 0x19
    2cfc:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2cfe:	6b 8d       	ldd	r22, Y+27	; 0x1b
    2d00:	7c 8d       	ldd	r23, Y+28	; 0x1c
    2d02:	80 17       	cp	r24, r16
    2d04:	91 07       	cpc	r25, r17
    2d06:	a2 07       	cpc	r26, r18
    2d08:	b3 07       	cpc	r27, r19
    2d0a:	d0 f4       	brcc	.+52     	; 0x2d40 <__udivdi3+0x7b0>
    2d0c:	41 50       	subi	r20, 0x01	; 1
    2d0e:	50 40       	sbci	r21, 0x00	; 0
    2d10:	60 40       	sbci	r22, 0x00	; 0
    2d12:	70 40       	sbci	r23, 0x00	; 0
    2d14:	88 0d       	add	r24, r8
    2d16:	99 1d       	adc	r25, r9
    2d18:	aa 1d       	adc	r26, r10
    2d1a:	bb 1d       	adc	r27, r11
    2d1c:	88 15       	cp	r24, r8
    2d1e:	99 05       	cpc	r25, r9
    2d20:	aa 05       	cpc	r26, r10
    2d22:	bb 05       	cpc	r27, r11
    2d24:	68 f0       	brcs	.+26     	; 0x2d40 <__udivdi3+0x7b0>
    2d26:	80 17       	cp	r24, r16
    2d28:	91 07       	cpc	r25, r17
    2d2a:	a2 07       	cpc	r26, r18
    2d2c:	b3 07       	cpc	r27, r19
    2d2e:	40 f4       	brcc	.+16     	; 0x2d40 <__udivdi3+0x7b0>
    2d30:	49 8d       	ldd	r20, Y+25	; 0x19
    2d32:	5a 8d       	ldd	r21, Y+26	; 0x1a
    2d34:	6b 8d       	ldd	r22, Y+27	; 0x1b
    2d36:	7c 8d       	ldd	r23, Y+28	; 0x1c
    2d38:	42 50       	subi	r20, 0x02	; 2
    2d3a:	50 40       	sbci	r21, 0x00	; 0
    2d3c:	60 40       	sbci	r22, 0x00	; 0
    2d3e:	70 40       	sbci	r23, 0x00	; 0
    2d40:	09 a1       	lds	r16, 0x49
    2d42:	1a a1       	lds	r17, 0x4a
    2d44:	2b a1       	lds	r18, 0x4b
    2d46:	3c a1       	lds	r19, 0x4c
    2d48:	78 01       	movw	r14, r16
    2d4a:	dd 24       	eor	r13, r13
    2d4c:	cc 24       	eor	r12, r12
    2d4e:	c4 2a       	or	r12, r20
    2d50:	d5 2a       	or	r13, r21
    2d52:	e6 2a       	or	r14, r22
    2d54:	f7 2a       	or	r15, r23
    2d56:	46 c2       	rjmp	.+1164   	; 0x31e4 <__udivdi3+0xc54>
    2d58:	c8 16       	cp	r12, r24
    2d5a:	d9 06       	cpc	r13, r25
    2d5c:	ea 06       	cpc	r14, r26
    2d5e:	fb 06       	cpc	r15, r27
    2d60:	08 f4       	brcc	.+2      	; 0x2d64 <__udivdi3+0x7d4>
    2d62:	2d c2       	rjmp	.+1114   	; 0x31be <__udivdi3+0xc2e>
    2d64:	80 30       	cpi	r24, 0x00	; 0
    2d66:	10 e0       	ldi	r17, 0x00	; 0
    2d68:	91 07       	cpc	r25, r17
    2d6a:	11 e0       	ldi	r17, 0x01	; 1
    2d6c:	a1 07       	cpc	r26, r17
    2d6e:	10 e0       	ldi	r17, 0x00	; 0
    2d70:	b1 07       	cpc	r27, r17
    2d72:	50 f4       	brcc	.+20     	; 0x2d88 <__udivdi3+0x7f8>
    2d74:	8f 3f       	cpi	r24, 0xFF	; 255
    2d76:	91 05       	cpc	r25, r1
    2d78:	a1 05       	cpc	r26, r1
    2d7a:	b1 05       	cpc	r27, r1
    2d7c:	09 f0       	breq	.+2      	; 0x2d80 <__udivdi3+0x7f0>
    2d7e:	88 f4       	brcc	.+34     	; 0x2da2 <__udivdi3+0x812>
    2d80:	00 e0       	ldi	r16, 0x00	; 0
    2d82:	10 e0       	ldi	r17, 0x00	; 0
    2d84:	98 01       	movw	r18, r16
    2d86:	16 c0       	rjmp	.+44     	; 0x2db4 <__udivdi3+0x824>
    2d88:	80 30       	cpi	r24, 0x00	; 0
    2d8a:	20 e0       	ldi	r18, 0x00	; 0
    2d8c:	92 07       	cpc	r25, r18
    2d8e:	20 e0       	ldi	r18, 0x00	; 0
    2d90:	a2 07       	cpc	r26, r18
    2d92:	21 e0       	ldi	r18, 0x01	; 1
    2d94:	b2 07       	cpc	r27, r18
    2d96:	50 f4       	brcc	.+20     	; 0x2dac <__udivdi3+0x81c>
    2d98:	00 e1       	ldi	r16, 0x10	; 16
    2d9a:	10 e0       	ldi	r17, 0x00	; 0
    2d9c:	20 e0       	ldi	r18, 0x00	; 0
    2d9e:	30 e0       	ldi	r19, 0x00	; 0
    2da0:	09 c0       	rjmp	.+18     	; 0x2db4 <__udivdi3+0x824>
    2da2:	08 e0       	ldi	r16, 0x08	; 8
    2da4:	10 e0       	ldi	r17, 0x00	; 0
    2da6:	20 e0       	ldi	r18, 0x00	; 0
    2da8:	30 e0       	ldi	r19, 0x00	; 0
    2daa:	04 c0       	rjmp	.+8      	; 0x2db4 <__udivdi3+0x824>
    2dac:	08 e1       	ldi	r16, 0x18	; 24
    2dae:	10 e0       	ldi	r17, 0x00	; 0
    2db0:	20 e0       	ldi	r18, 0x00	; 0
    2db2:	30 e0       	ldi	r19, 0x00	; 0
    2db4:	ac 01       	movw	r20, r24
    2db6:	bd 01       	movw	r22, r26
    2db8:	00 2e       	mov	r0, r16
    2dba:	04 c0       	rjmp	.+8      	; 0x2dc4 <__udivdi3+0x834>
    2dbc:	76 95       	lsr	r23
    2dbe:	67 95       	ror	r22
    2dc0:	57 95       	ror	r21
    2dc2:	47 95       	ror	r20
    2dc4:	0a 94       	dec	r0
    2dc6:	d2 f7       	brpl	.-12     	; 0x2dbc <__udivdi3+0x82c>
    2dc8:	fa 01       	movw	r30, r20
    2dca:	e2 58       	subi	r30, 0x82	; 130
    2dcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2dce:	40 81       	ld	r20, Z
    2dd0:	04 0f       	add	r16, r20
    2dd2:	11 1d       	adc	r17, r1
    2dd4:	21 1d       	adc	r18, r1
    2dd6:	31 1d       	adc	r19, r1
    2dd8:	40 e2       	ldi	r20, 0x20	; 32
    2dda:	50 e0       	ldi	r21, 0x00	; 0
    2ddc:	60 e0       	ldi	r22, 0x00	; 0
    2dde:	70 e0       	ldi	r23, 0x00	; 0
    2de0:	40 1b       	sub	r20, r16
    2de2:	51 0b       	sbc	r21, r17
    2de4:	62 0b       	sbc	r22, r18
    2de6:	73 0b       	sbc	r23, r19
    2de8:	a1 f4       	brne	.+40     	; 0x2e12 <__udivdi3+0x882>
    2dea:	8c 15       	cp	r24, r12
    2dec:	9d 05       	cpc	r25, r13
    2dee:	ae 05       	cpc	r26, r14
    2df0:	bf 05       	cpc	r27, r15
    2df2:	08 f4       	brcc	.+2      	; 0x2df6 <__udivdi3+0x866>
    2df4:	eb c1       	rjmp	.+982    	; 0x31cc <__udivdi3+0xc3c>
    2df6:	0d a1       	lds	r16, 0x4d
    2df8:	1e a1       	lds	r17, 0x4e
    2dfa:	2f a1       	lds	r18, 0x4f
    2dfc:	38 a5       	lds	r19, 0x68
    2dfe:	44 24       	eor	r4, r4
    2e00:	55 24       	eor	r5, r5
    2e02:	32 01       	movw	r6, r4
    2e04:	08 15       	cp	r16, r8
    2e06:	19 05       	cpc	r17, r9
    2e08:	2a 05       	cpc	r18, r10
    2e0a:	3b 05       	cpc	r19, r11
    2e0c:	08 f0       	brcs	.+2      	; 0x2e10 <__udivdi3+0x880>
    2e0e:	e1 c1       	rjmp	.+962    	; 0x31d2 <__udivdi3+0xc42>
    2e10:	d9 c1       	rjmp	.+946    	; 0x31c4 <__udivdi3+0xc34>
    2e12:	34 2e       	mov	r3, r20
    2e14:	2c 01       	movw	r4, r24
    2e16:	3d 01       	movw	r6, r26
    2e18:	04 c0       	rjmp	.+8      	; 0x2e22 <__udivdi3+0x892>
    2e1a:	44 0c       	add	r4, r4
    2e1c:	55 1c       	adc	r5, r5
    2e1e:	66 1c       	adc	r6, r6
    2e20:	77 1c       	adc	r7, r7
    2e22:	4a 95       	dec	r20
    2e24:	d2 f7       	brpl	.-12     	; 0x2e1a <__udivdi3+0x88a>
    2e26:	d5 01       	movw	r26, r10
    2e28:	c4 01       	movw	r24, r8
    2e2a:	00 2e       	mov	r0, r16
    2e2c:	04 c0       	rjmp	.+8      	; 0x2e36 <__udivdi3+0x8a6>
    2e2e:	b6 95       	lsr	r27
    2e30:	a7 95       	ror	r26
    2e32:	97 95       	ror	r25
    2e34:	87 95       	ror	r24
    2e36:	0a 94       	dec	r0
    2e38:	d2 f7       	brpl	.-12     	; 0x2e2e <__udivdi3+0x89e>
    2e3a:	48 2a       	or	r4, r24
    2e3c:	59 2a       	or	r5, r25
    2e3e:	6a 2a       	or	r6, r26
    2e40:	7b 2a       	or	r7, r27
    2e42:	a5 01       	movw	r20, r10
    2e44:	94 01       	movw	r18, r8
    2e46:	03 2c       	mov	r0, r3
    2e48:	04 c0       	rjmp	.+8      	; 0x2e52 <__udivdi3+0x8c2>
    2e4a:	22 0f       	add	r18, r18
    2e4c:	33 1f       	adc	r19, r19
    2e4e:	44 1f       	adc	r20, r20
    2e50:	55 1f       	adc	r21, r21
    2e52:	0a 94       	dec	r0
    2e54:	d2 f7       	brpl	.-12     	; 0x2e4a <__udivdi3+0x8ba>
    2e56:	29 a7       	lds	r18, 0x79
    2e58:	3a a7       	lds	r19, 0x7a
    2e5a:	4b a7       	lds	r20, 0x7b
    2e5c:	5c a7       	lds	r21, 0x7c
    2e5e:	b7 01       	movw	r22, r14
    2e60:	a6 01       	movw	r20, r12
    2e62:	00 2e       	mov	r0, r16
    2e64:	04 c0       	rjmp	.+8      	; 0x2e6e <__udivdi3+0x8de>
    2e66:	76 95       	lsr	r23
    2e68:	67 95       	ror	r22
    2e6a:	57 95       	ror	r21
    2e6c:	47 95       	ror	r20
    2e6e:	0a 94       	dec	r0
    2e70:	d2 f7       	brpl	.-12     	; 0x2e66 <__udivdi3+0x8d6>
    2e72:	49 a3       	lds	r20, 0x59
    2e74:	5a a3       	lds	r21, 0x5a
    2e76:	6b a3       	lds	r22, 0x5b
    2e78:	7c a3       	lds	r23, 0x5c
    2e7a:	c7 01       	movw	r24, r14
    2e7c:	b6 01       	movw	r22, r12
    2e7e:	03 2c       	mov	r0, r3
    2e80:	04 c0       	rjmp	.+8      	; 0x2e8a <__udivdi3+0x8fa>
    2e82:	66 0f       	add	r22, r22
    2e84:	77 1f       	adc	r23, r23
    2e86:	88 1f       	adc	r24, r24
    2e88:	99 1f       	adc	r25, r25
    2e8a:	0a 94       	dec	r0
    2e8c:	d2 f7       	brpl	.-12     	; 0x2e82 <__udivdi3+0x8f2>
    2e8e:	6d 8f       	std	Y+29, r22	; 0x1d
    2e90:	7e 8f       	std	Y+30, r23	; 0x1e
    2e92:	8f 8f       	std	Y+31, r24	; 0x1f
    2e94:	98 a3       	lds	r25, 0x58
    2e96:	8d a1       	lds	r24, 0x4d
    2e98:	9e a1       	lds	r25, 0x4e
    2e9a:	af a1       	lds	r26, 0x4f
    2e9c:	b8 a5       	lds	r27, 0x68
    2e9e:	04 c0       	rjmp	.+8      	; 0x2ea8 <__udivdi3+0x918>
    2ea0:	b6 95       	lsr	r27
    2ea2:	a7 95       	ror	r26
    2ea4:	97 95       	ror	r25
    2ea6:	87 95       	ror	r24
    2ea8:	0a 95       	dec	r16
    2eaa:	d2 f7       	brpl	.-12     	; 0x2ea0 <__udivdi3+0x910>
    2eac:	4d 8d       	ldd	r20, Y+29	; 0x1d
    2eae:	5e 8d       	ldd	r21, Y+30	; 0x1e
    2eb0:	6f 8d       	ldd	r22, Y+31	; 0x1f
    2eb2:	78 a1       	lds	r23, 0x48
    2eb4:	48 2b       	or	r20, r24
    2eb6:	59 2b       	or	r21, r25
    2eb8:	6a 2b       	or	r22, r26
    2eba:	7b 2b       	or	r23, r27
    2ebc:	4d 8f       	std	Y+29, r20	; 0x1d
    2ebe:	5e 8f       	std	Y+30, r21	; 0x1e
    2ec0:	6f 8f       	std	Y+31, r22	; 0x1f
    2ec2:	78 a3       	lds	r23, 0x58
    2ec4:	43 01       	movw	r8, r6
    2ec6:	aa 24       	eor	r10, r10
    2ec8:	bb 24       	eor	r11, r11
    2eca:	93 01       	movw	r18, r6
    2ecc:	82 01       	movw	r16, r4
    2ece:	20 70       	andi	r18, 0x00	; 0
    2ed0:	30 70       	andi	r19, 0x00	; 0
    2ed2:	0d a7       	lds	r16, 0x7d
    2ed4:	1e a7       	lds	r17, 0x7e
    2ed6:	2f a7       	lds	r18, 0x7f
    2ed8:	38 ab       	sts	0x58, r19
    2eda:	69 a1       	lds	r22, 0x49
    2edc:	7a a1       	lds	r23, 0x4a
    2ede:	8b a1       	lds	r24, 0x4b
    2ee0:	9c a1       	lds	r25, 0x4c
    2ee2:	a5 01       	movw	r20, r10
    2ee4:	94 01       	movw	r18, r8
    2ee6:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2eea:	29 8f       	std	Y+25, r18	; 0x19
    2eec:	3a 8f       	std	Y+26, r19	; 0x1a
    2eee:	4b 8f       	std	Y+27, r20	; 0x1b
    2ef0:	5c 8f       	std	Y+28, r21	; 0x1c
    2ef2:	6b 01       	movw	r12, r22
    2ef4:	7c 01       	movw	r14, r24
    2ef6:	69 a1       	lds	r22, 0x49
    2ef8:	7a a1       	lds	r23, 0x4a
    2efa:	8b a1       	lds	r24, 0x4b
    2efc:	9c a1       	lds	r25, 0x4c
    2efe:	a5 01       	movw	r20, r10
    2f00:	94 01       	movw	r18, r8
    2f02:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2f06:	ca 01       	movw	r24, r20
    2f08:	b9 01       	movw	r22, r18
    2f0a:	2d a5       	lds	r18, 0x6d
    2f0c:	3e a5       	lds	r19, 0x6e
    2f0e:	4f a5       	lds	r20, 0x6f
    2f10:	58 a9       	sts	0x48, r21
    2f12:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2f16:	dc 01       	movw	r26, r24
    2f18:	cb 01       	movw	r24, r22
    2f1a:	76 01       	movw	r14, r12
    2f1c:	dd 24       	eor	r13, r13
    2f1e:	cc 24       	eor	r12, r12
    2f20:	0d 8d       	ldd	r16, Y+29	; 0x1d
    2f22:	1e 8d       	ldd	r17, Y+30	; 0x1e
    2f24:	2f 8d       	ldd	r18, Y+31	; 0x1f
    2f26:	38 a1       	lds	r19, 0x48
    2f28:	a9 01       	movw	r20, r18
    2f2a:	66 27       	eor	r22, r22
    2f2c:	77 27       	eor	r23, r23
    2f2e:	c4 2a       	or	r12, r20
    2f30:	d5 2a       	or	r13, r21
    2f32:	e6 2a       	or	r14, r22
    2f34:	f7 2a       	or	r15, r23
    2f36:	09 8d       	ldd	r16, Y+25	; 0x19
    2f38:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2f3a:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2f3c:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2f3e:	c8 16       	cp	r12, r24
    2f40:	d9 06       	cpc	r13, r25
    2f42:	ea 06       	cpc	r14, r26
    2f44:	fb 06       	cpc	r15, r27
    2f46:	38 f5       	brcc	.+78     	; 0x2f96 <__udivdi3+0xa06>
    2f48:	01 50       	subi	r16, 0x01	; 1
    2f4a:	10 40       	sbci	r17, 0x00	; 0
    2f4c:	20 40       	sbci	r18, 0x00	; 0
    2f4e:	30 40       	sbci	r19, 0x00	; 0
    2f50:	09 a3       	lds	r16, 0x59
    2f52:	1a a3       	lds	r17, 0x5a
    2f54:	2b a3       	lds	r18, 0x5b
    2f56:	3c a3       	lds	r19, 0x5c
    2f58:	c4 0c       	add	r12, r4
    2f5a:	d5 1c       	adc	r13, r5
    2f5c:	e6 1c       	adc	r14, r6
    2f5e:	f7 1c       	adc	r15, r7
    2f60:	c4 14       	cp	r12, r4
    2f62:	d5 04       	cpc	r13, r5
    2f64:	e6 04       	cpc	r14, r6
    2f66:	f7 04       	cpc	r15, r7
    2f68:	d0 f0       	brcs	.+52     	; 0x2f9e <__udivdi3+0xa0e>
    2f6a:	c8 16       	cp	r12, r24
    2f6c:	d9 06       	cpc	r13, r25
    2f6e:	ea 06       	cpc	r14, r26
    2f70:	fb 06       	cpc	r15, r27
    2f72:	a8 f4       	brcc	.+42     	; 0x2f9e <__udivdi3+0xa0e>
    2f74:	09 8d       	ldd	r16, Y+25	; 0x19
    2f76:	1a 8d       	ldd	r17, Y+26	; 0x1a
    2f78:	2b 8d       	ldd	r18, Y+27	; 0x1b
    2f7a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    2f7c:	02 50       	subi	r16, 0x02	; 2
    2f7e:	10 40       	sbci	r17, 0x00	; 0
    2f80:	20 40       	sbci	r18, 0x00	; 0
    2f82:	30 40       	sbci	r19, 0x00	; 0
    2f84:	09 a3       	lds	r16, 0x59
    2f86:	1a a3       	lds	r17, 0x5a
    2f88:	2b a3       	lds	r18, 0x5b
    2f8a:	3c a3       	lds	r19, 0x5c
    2f8c:	c4 0c       	add	r12, r4
    2f8e:	d5 1c       	adc	r13, r5
    2f90:	e6 1c       	adc	r14, r6
    2f92:	f7 1c       	adc	r15, r7
    2f94:	04 c0       	rjmp	.+8      	; 0x2f9e <__udivdi3+0xa0e>
    2f96:	09 a3       	lds	r16, 0x59
    2f98:	1a a3       	lds	r17, 0x5a
    2f9a:	2b a3       	lds	r18, 0x5b
    2f9c:	3c a3       	lds	r19, 0x5c
    2f9e:	c8 1a       	sub	r12, r24
    2fa0:	d9 0a       	sbc	r13, r25
    2fa2:	ea 0a       	sbc	r14, r26
    2fa4:	fb 0a       	sbc	r15, r27
    2fa6:	c7 01       	movw	r24, r14
    2fa8:	b6 01       	movw	r22, r12
    2faa:	a5 01       	movw	r20, r10
    2fac:	94 01       	movw	r18, r8
    2fae:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2fb2:	29 8f       	std	Y+25, r18	; 0x19
    2fb4:	3a 8f       	std	Y+26, r19	; 0x1a
    2fb6:	4b 8f       	std	Y+27, r20	; 0x1b
    2fb8:	5c 8f       	std	Y+28, r21	; 0x1c
    2fba:	69 ab       	sts	0x59, r22
    2fbc:	7a ab       	sts	0x5a, r23
    2fbe:	8b ab       	sts	0x5b, r24
    2fc0:	9c ab       	sts	0x5c, r25
    2fc2:	c7 01       	movw	r24, r14
    2fc4:	b6 01       	movw	r22, r12
    2fc6:	a5 01       	movw	r20, r10
    2fc8:	94 01       	movw	r18, r8
    2fca:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    2fce:	ca 01       	movw	r24, r20
    2fd0:	b9 01       	movw	r22, r18
    2fd2:	2d a5       	lds	r18, 0x6d
    2fd4:	3e a5       	lds	r19, 0x6e
    2fd6:	4f a5       	lds	r20, 0x6f
    2fd8:	58 a9       	sts	0x48, r21
    2fda:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    2fde:	4b 01       	movw	r8, r22
    2fe0:	5c 01       	movw	r10, r24
    2fe2:	49 a9       	sts	0x49, r20
    2fe4:	5a a9       	sts	0x4a, r21
    2fe6:	6b a9       	sts	0x4b, r22
    2fe8:	7c a9       	sts	0x4c, r23
    2fea:	9a 01       	movw	r18, r20
    2fec:	11 27       	eor	r17, r17
    2fee:	00 27       	eor	r16, r16
    2ff0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2ff2:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2ff4:	af 8d       	ldd	r26, Y+31	; 0x1f
    2ff6:	b8 a1       	lds	r27, 0x48
    2ff8:	a0 70       	andi	r26, 0x00	; 0
    2ffa:	b0 70       	andi	r27, 0x00	; 0
    2ffc:	08 2b       	or	r16, r24
    2ffe:	19 2b       	or	r17, r25
    3000:	2a 2b       	or	r18, r26
    3002:	3b 2b       	or	r19, r27
    3004:	89 8d       	ldd	r24, Y+25	; 0x19
    3006:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3008:	ab 8d       	ldd	r26, Y+27	; 0x1b
    300a:	bc 8d       	ldd	r27, Y+28	; 0x1c
    300c:	08 15       	cp	r16, r8
    300e:	19 05       	cpc	r17, r9
    3010:	2a 05       	cpc	r18, r10
    3012:	3b 05       	cpc	r19, r11
    3014:	e0 f4       	brcc	.+56     	; 0x304e <__udivdi3+0xabe>
    3016:	01 97       	sbiw	r24, 0x01	; 1
    3018:	a1 09       	sbc	r26, r1
    301a:	b1 09       	sbc	r27, r1
    301c:	04 0d       	add	r16, r4
    301e:	15 1d       	adc	r17, r5
    3020:	26 1d       	adc	r18, r6
    3022:	37 1d       	adc	r19, r7
    3024:	04 15       	cp	r16, r4
    3026:	15 05       	cpc	r17, r5
    3028:	26 05       	cpc	r18, r6
    302a:	37 05       	cpc	r19, r7
    302c:	80 f0       	brcs	.+32     	; 0x304e <__udivdi3+0xabe>
    302e:	08 15       	cp	r16, r8
    3030:	19 05       	cpc	r17, r9
    3032:	2a 05       	cpc	r18, r10
    3034:	3b 05       	cpc	r19, r11
    3036:	58 f4       	brcc	.+22     	; 0x304e <__udivdi3+0xabe>
    3038:	89 8d       	ldd	r24, Y+25	; 0x19
    303a:	9a 8d       	ldd	r25, Y+26	; 0x1a
    303c:	ab 8d       	ldd	r26, Y+27	; 0x1b
    303e:	bc 8d       	ldd	r27, Y+28	; 0x1c
    3040:	02 97       	sbiw	r24, 0x02	; 2
    3042:	a1 09       	sbc	r26, r1
    3044:	b1 09       	sbc	r27, r1
    3046:	04 0d       	add	r16, r4
    3048:	15 1d       	adc	r17, r5
    304a:	26 1d       	adc	r18, r6
    304c:	37 1d       	adc	r19, r7
    304e:	b9 01       	movw	r22, r18
    3050:	a8 01       	movw	r20, r16
    3052:	48 19       	sub	r20, r8
    3054:	59 09       	sbc	r21, r9
    3056:	6a 09       	sbc	r22, r10
    3058:	7b 09       	sbc	r23, r11
    305a:	4d 8f       	std	Y+29, r20	; 0x1d
    305c:	5e 8f       	std	Y+30, r21	; 0x1e
    305e:	6f 8f       	std	Y+31, r22	; 0x1f
    3060:	78 a3       	lds	r23, 0x58
    3062:	09 a1       	lds	r16, 0x49
    3064:	1a a1       	lds	r17, 0x4a
    3066:	2b a1       	lds	r18, 0x4b
    3068:	3c a1       	lds	r19, 0x4c
    306a:	78 01       	movw	r14, r16
    306c:	dd 24       	eor	r13, r13
    306e:	cc 24       	eor	r12, r12
    3070:	c8 2a       	or	r12, r24
    3072:	d9 2a       	or	r13, r25
    3074:	ea 2a       	or	r14, r26
    3076:	fb 2a       	or	r15, r27
    3078:	ff ef       	ldi	r31, 0xFF	; 255
    307a:	8f 2e       	mov	r8, r31
    307c:	ff ef       	ldi	r31, 0xFF	; 255
    307e:	9f 2e       	mov	r9, r31
    3080:	a1 2c       	mov	r10, r1
    3082:	b1 2c       	mov	r11, r1
    3084:	8c 20       	and	r8, r12
    3086:	9d 20       	and	r9, r13
    3088:	ae 20       	and	r10, r14
    308a:	bf 20       	and	r11, r15
    308c:	87 01       	movw	r16, r14
    308e:	22 27       	eor	r18, r18
    3090:	33 27       	eor	r19, r19
    3092:	09 8f       	std	Y+25, r16	; 0x19
    3094:	1a 8f       	std	Y+26, r17	; 0x1a
    3096:	2b 8f       	std	Y+27, r18	; 0x1b
    3098:	3c 8f       	std	Y+28, r19	; 0x1c
    309a:	49 a4       	lds	r20, 0xa9
    309c:	5a a4       	lds	r21, 0xaa
    309e:	6b a4       	lds	r22, 0xab
    30a0:	7c a4       	lds	r23, 0xac
    30a2:	2f ef       	ldi	r18, 0xFF	; 255
    30a4:	3f ef       	ldi	r19, 0xFF	; 255
    30a6:	40 e0       	ldi	r20, 0x00	; 0
    30a8:	50 e0       	ldi	r21, 0x00	; 0
    30aa:	42 22       	and	r4, r18
    30ac:	53 22       	and	r5, r19
    30ae:	64 22       	and	r6, r20
    30b0:	75 22       	and	r7, r21
    30b2:	29 a5       	lds	r18, 0x69
    30b4:	3a a5       	lds	r19, 0x6a
    30b6:	4b a5       	lds	r20, 0x6b
    30b8:	5c a5       	lds	r21, 0x6c
    30ba:	8a 01       	movw	r16, r20
    30bc:	22 27       	eor	r18, r18
    30be:	33 27       	eor	r19, r19
    30c0:	09 a3       	lds	r16, 0x59
    30c2:	1a a3       	lds	r17, 0x5a
    30c4:	2b a3       	lds	r18, 0x5b
    30c6:	3c a3       	lds	r19, 0x5c
    30c8:	c5 01       	movw	r24, r10
    30ca:	b4 01       	movw	r22, r8
    30cc:	a3 01       	movw	r20, r6
    30ce:	92 01       	movw	r18, r4
    30d0:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    30d4:	69 a7       	lds	r22, 0x79
    30d6:	7a a7       	lds	r23, 0x7a
    30d8:	8b a7       	lds	r24, 0x7b
    30da:	9c a7       	lds	r25, 0x7c
    30dc:	c5 01       	movw	r24, r10
    30de:	b4 01       	movw	r22, r8
    30e0:	29 a1       	lds	r18, 0x49
    30e2:	3a a1       	lds	r19, 0x4a
    30e4:	4b a1       	lds	r20, 0x4b
    30e6:	5c a1       	lds	r21, 0x4c
    30e8:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    30ec:	4b 01       	movw	r8, r22
    30ee:	5c 01       	movw	r10, r24
    30f0:	69 8d       	ldd	r22, Y+25	; 0x19
    30f2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    30f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    30f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    30f8:	a3 01       	movw	r20, r6
    30fa:	92 01       	movw	r18, r4
    30fc:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3100:	2b 01       	movw	r4, r22
    3102:	3c 01       	movw	r6, r24
    3104:	69 8d       	ldd	r22, Y+25	; 0x19
    3106:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3108:	8b 8d       	ldd	r24, Y+27	; 0x1b
    310a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    310c:	29 a1       	lds	r18, 0x49
    310e:	3a a1       	lds	r19, 0x4a
    3110:	4b a1       	lds	r20, 0x4b
    3112:	5c a1       	lds	r21, 0x4c
    3114:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3118:	ab 01       	movw	r20, r22
    311a:	bc 01       	movw	r22, r24
    311c:	84 0c       	add	r8, r4
    311e:	95 1c       	adc	r9, r5
    3120:	a6 1c       	adc	r10, r6
    3122:	b7 1c       	adc	r11, r7
    3124:	09 a5       	lds	r16, 0x69
    3126:	1a a5       	lds	r17, 0x6a
    3128:	2b a5       	lds	r18, 0x6b
    312a:	3c a5       	lds	r19, 0x6c
    312c:	c9 01       	movw	r24, r18
    312e:	aa 27       	eor	r26, r26
    3130:	bb 27       	eor	r27, r27
    3132:	88 0e       	add	r8, r24
    3134:	99 1e       	adc	r9, r25
    3136:	aa 1e       	adc	r10, r26
    3138:	bb 1e       	adc	r11, r27
    313a:	84 14       	cp	r8, r4
    313c:	95 04       	cpc	r9, r5
    313e:	a6 04       	cpc	r10, r6
    3140:	b7 04       	cpc	r11, r7
    3142:	20 f4       	brcc	.+8      	; 0x314c <__udivdi3+0xbbc>
    3144:	40 50       	subi	r20, 0x00	; 0
    3146:	50 40       	sbci	r21, 0x00	; 0
    3148:	6f 4f       	sbci	r22, 0xFF	; 255
    314a:	7f 4f       	sbci	r23, 0xFF	; 255
    314c:	c5 01       	movw	r24, r10
    314e:	aa 27       	eor	r26, r26
    3150:	bb 27       	eor	r27, r27
    3152:	84 0f       	add	r24, r20
    3154:	95 1f       	adc	r25, r21
    3156:	a6 1f       	adc	r26, r22
    3158:	b7 1f       	adc	r27, r23
    315a:	0d 8d       	ldd	r16, Y+29	; 0x1d
    315c:	1e 8d       	ldd	r17, Y+30	; 0x1e
    315e:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3160:	38 a1       	lds	r19, 0x48
    3162:	08 17       	cp	r16, r24
    3164:	19 07       	cpc	r17, r25
    3166:	2a 07       	cpc	r18, r26
    3168:	3b 07       	cpc	r19, r27
    316a:	18 f1       	brcs	.+70     	; 0x31b2 <__udivdi3+0xc22>
    316c:	80 17       	cp	r24, r16
    316e:	91 07       	cpc	r25, r17
    3170:	a2 07       	cpc	r26, r18
    3172:	b3 07       	cpc	r27, r19
    3174:	a1 f5       	brne	.+104    	; 0x31de <__udivdi3+0xc4e>
    3176:	54 01       	movw	r10, r8
    3178:	99 24       	eor	r9, r9
    317a:	88 24       	eor	r8, r8
    317c:	89 a5       	lds	r24, 0x69
    317e:	9a a5       	lds	r25, 0x6a
    3180:	ab a5       	lds	r26, 0x6b
    3182:	bc a5       	lds	r27, 0x6c
    3184:	a0 70       	andi	r26, 0x00	; 0
    3186:	b0 70       	andi	r27, 0x00	; 0
    3188:	88 0e       	add	r8, r24
    318a:	99 1e       	adc	r9, r25
    318c:	aa 1e       	adc	r10, r26
    318e:	bb 1e       	adc	r11, r27
    3190:	4d a1       	lds	r20, 0x4d
    3192:	5e a1       	lds	r21, 0x4e
    3194:	6f a1       	lds	r22, 0x4f
    3196:	78 a5       	lds	r23, 0x68
    3198:	03 2c       	mov	r0, r3
    319a:	04 c0       	rjmp	.+8      	; 0x31a4 <__udivdi3+0xc14>
    319c:	44 0f       	add	r20, r20
    319e:	55 1f       	adc	r21, r21
    31a0:	66 1f       	adc	r22, r22
    31a2:	77 1f       	adc	r23, r23
    31a4:	0a 94       	dec	r0
    31a6:	d2 f7       	brpl	.-12     	; 0x319c <__udivdi3+0xc0c>
    31a8:	48 15       	cp	r20, r8
    31aa:	59 05       	cpc	r21, r9
    31ac:	6a 05       	cpc	r22, r10
    31ae:	7b 05       	cpc	r23, r11
    31b0:	b0 f4       	brcc	.+44     	; 0x31de <__udivdi3+0xc4e>
    31b2:	08 94       	sec
    31b4:	c1 08       	sbc	r12, r1
    31b6:	d1 08       	sbc	r13, r1
    31b8:	e1 08       	sbc	r14, r1
    31ba:	f1 08       	sbc	r15, r1
    31bc:	10 c0       	rjmp	.+32     	; 0x31de <__udivdi3+0xc4e>
    31be:	44 24       	eor	r4, r4
    31c0:	55 24       	eor	r5, r5
    31c2:	32 01       	movw	r6, r4
    31c4:	cc 24       	eor	r12, r12
    31c6:	dd 24       	eor	r13, r13
    31c8:	76 01       	movw	r14, r12
    31ca:	0c c0       	rjmp	.+24     	; 0x31e4 <__udivdi3+0xc54>
    31cc:	44 24       	eor	r4, r4
    31ce:	55 24       	eor	r5, r5
    31d0:	32 01       	movw	r6, r4
    31d2:	81 e0       	ldi	r24, 0x01	; 1
    31d4:	c8 2e       	mov	r12, r24
    31d6:	d1 2c       	mov	r13, r1
    31d8:	e1 2c       	mov	r14, r1
    31da:	f1 2c       	mov	r15, r1
    31dc:	03 c0       	rjmp	.+6      	; 0x31e4 <__udivdi3+0xc54>
    31de:	44 24       	eor	r4, r4
    31e0:	55 24       	eor	r5, r5
    31e2:	32 01       	movw	r6, r4
    31e4:	fe 01       	movw	r30, r28
    31e6:	31 96       	adiw	r30, 0x01	; 1
    31e8:	88 e0       	ldi	r24, 0x08	; 8
    31ea:	df 01       	movw	r26, r30
    31ec:	1d 92       	st	X+, r1
    31ee:	8a 95       	dec	r24
    31f0:	e9 f7       	brne	.-6      	; 0x31ec <__udivdi3+0xc5c>
    31f2:	c9 82       	std	Y+1, r12	; 0x01
    31f4:	da 82       	std	Y+2, r13	; 0x02
    31f6:	eb 82       	std	Y+3, r14	; 0x03
    31f8:	fc 82       	std	Y+4, r15	; 0x04
    31fa:	4d 82       	std	Y+5, r4	; 0x05
    31fc:	5e 82       	std	Y+6, r5	; 0x06
    31fe:	6f 82       	std	Y+7, r6	; 0x07
    3200:	78 86       	std	Y+8, r7	; 0x08
    3202:	2c 2d       	mov	r18, r12
    3204:	3a 81       	ldd	r19, Y+2	; 0x02
    3206:	4b 81       	ldd	r20, Y+3	; 0x03
    3208:	5c 81       	ldd	r21, Y+4	; 0x04
    320a:	64 2d       	mov	r22, r4
    320c:	7e 81       	ldd	r23, Y+6	; 0x06
    320e:	8f 81       	ldd	r24, Y+7	; 0x07
    3210:	98 85       	ldd	r25, Y+8	; 0x08
    3212:	e4 96       	adiw	r28, 0x34	; 52
    3214:	e1 e1       	ldi	r30, 0x11	; 17
    3216:	0c 94 09 1f 	jmp	0x3e12	; 0x3e12 <__epilogue_restores__+0x2>

0000321a <__umoddi3>:
    321a:	a4 e3       	ldi	r26, 0x34	; 52
    321c:	b0 e0       	ldi	r27, 0x00	; 0
    321e:	e3 e1       	ldi	r30, 0x13	; 19
    3220:	f9 e1       	ldi	r31, 0x19	; 25
    3222:	0c 94 ec 1e 	jmp	0x3dd8	; 0x3dd8 <__prologue_saves__>
    3226:	f8 2f       	mov	r31, r24
    3228:	e9 2f       	mov	r30, r25
    322a:	a9 86       	std	Y+9, r10	; 0x09
    322c:	ba 86       	std	Y+10, r11	; 0x0a
    322e:	cb 86       	std	Y+11, r12	; 0x0b
    3230:	dc 86       	std	Y+12, r13	; 0x0c
    3232:	ed 86       	std	Y+13, r14	; 0x0d
    3234:	fe 86       	std	Y+14, r15	; 0x0e
    3236:	0f 87       	std	Y+15, r16	; 0x0f
    3238:	18 8b       	std	Y+16, r17	; 0x10
    323a:	89 84       	ldd	r8, Y+9	; 0x09
    323c:	9a 84       	ldd	r9, Y+10	; 0x0a
    323e:	ab 84       	ldd	r10, Y+11	; 0x0b
    3240:	bc 84       	ldd	r11, Y+12	; 0x0c
    3242:	8d 85       	ldd	r24, Y+13	; 0x0d
    3244:	9e 85       	ldd	r25, Y+14	; 0x0e
    3246:	af 85       	ldd	r26, Y+15	; 0x0f
    3248:	b8 89       	ldd	r27, Y+16	; 0x10
    324a:	29 8f       	std	Y+25, r18	; 0x19
    324c:	3a 8f       	std	Y+26, r19	; 0x1a
    324e:	4b 8f       	std	Y+27, r20	; 0x1b
    3250:	5c 8f       	std	Y+28, r21	; 0x1c
    3252:	6b 01       	movw	r12, r22
    3254:	ef 2e       	mov	r14, r31
    3256:	fe 2e       	mov	r15, r30
    3258:	00 97       	sbiw	r24, 0x00	; 0
    325a:	a1 05       	cpc	r26, r1
    325c:	b1 05       	cpc	r27, r1
    325e:	09 f0       	breq	.+2      	; 0x3262 <__umoddi3+0x48>
    3260:	a2 c2       	rjmp	.+1348   	; 0x37a6 <__umoddi3+0x58c>
    3262:	c8 14       	cp	r12, r8
    3264:	d9 04       	cpc	r13, r9
    3266:	ea 04       	cpc	r14, r10
    3268:	fb 04       	cpc	r15, r11
    326a:	08 f0       	brcs	.+2      	; 0x326e <__umoddi3+0x54>
    326c:	87 c0       	rjmp	.+270    	; 0x337c <__umoddi3+0x162>
    326e:	00 e0       	ldi	r16, 0x00	; 0
    3270:	80 16       	cp	r8, r16
    3272:	00 e0       	ldi	r16, 0x00	; 0
    3274:	90 06       	cpc	r9, r16
    3276:	01 e0       	ldi	r16, 0x01	; 1
    3278:	a0 06       	cpc	r10, r16
    327a:	00 e0       	ldi	r16, 0x00	; 0
    327c:	b0 06       	cpc	r11, r16
    327e:	58 f4       	brcc	.+22     	; 0x3296 <__umoddi3+0x7c>
    3280:	1f ef       	ldi	r17, 0xFF	; 255
    3282:	81 16       	cp	r8, r17
    3284:	91 04       	cpc	r9, r1
    3286:	a1 04       	cpc	r10, r1
    3288:	b1 04       	cpc	r11, r1
    328a:	09 f0       	breq	.+2      	; 0x328e <__umoddi3+0x74>
    328c:	90 f4       	brcc	.+36     	; 0x32b2 <__umoddi3+0x98>
    328e:	80 e0       	ldi	r24, 0x00	; 0
    3290:	90 e0       	ldi	r25, 0x00	; 0
    3292:	dc 01       	movw	r26, r24
    3294:	17 c0       	rjmp	.+46     	; 0x32c4 <__umoddi3+0xaa>
    3296:	20 e0       	ldi	r18, 0x00	; 0
    3298:	82 16       	cp	r8, r18
    329a:	20 e0       	ldi	r18, 0x00	; 0
    329c:	92 06       	cpc	r9, r18
    329e:	20 e0       	ldi	r18, 0x00	; 0
    32a0:	a2 06       	cpc	r10, r18
    32a2:	21 e0       	ldi	r18, 0x01	; 1
    32a4:	b2 06       	cpc	r11, r18
    32a6:	50 f4       	brcc	.+20     	; 0x32bc <__umoddi3+0xa2>
    32a8:	80 e1       	ldi	r24, 0x10	; 16
    32aa:	90 e0       	ldi	r25, 0x00	; 0
    32ac:	a0 e0       	ldi	r26, 0x00	; 0
    32ae:	b0 e0       	ldi	r27, 0x00	; 0
    32b0:	09 c0       	rjmp	.+18     	; 0x32c4 <__umoddi3+0xaa>
    32b2:	88 e0       	ldi	r24, 0x08	; 8
    32b4:	90 e0       	ldi	r25, 0x00	; 0
    32b6:	a0 e0       	ldi	r26, 0x00	; 0
    32b8:	b0 e0       	ldi	r27, 0x00	; 0
    32ba:	04 c0       	rjmp	.+8      	; 0x32c4 <__umoddi3+0xaa>
    32bc:	88 e1       	ldi	r24, 0x18	; 24
    32be:	90 e0       	ldi	r25, 0x00	; 0
    32c0:	a0 e0       	ldi	r26, 0x00	; 0
    32c2:	b0 e0       	ldi	r27, 0x00	; 0
    32c4:	b5 01       	movw	r22, r10
    32c6:	a4 01       	movw	r20, r8
    32c8:	08 2e       	mov	r0, r24
    32ca:	04 c0       	rjmp	.+8      	; 0x32d4 <__umoddi3+0xba>
    32cc:	76 95       	lsr	r23
    32ce:	67 95       	ror	r22
    32d0:	57 95       	ror	r21
    32d2:	47 95       	ror	r20
    32d4:	0a 94       	dec	r0
    32d6:	d2 f7       	brpl	.-12     	; 0x32cc <__umoddi3+0xb2>
    32d8:	fa 01       	movw	r30, r20
    32da:	e2 58       	subi	r30, 0x82	; 130
    32dc:	ff 4f       	sbci	r31, 0xFF	; 255
    32de:	20 81       	ld	r18, Z
    32e0:	40 e2       	ldi	r20, 0x20	; 32
    32e2:	50 e0       	ldi	r21, 0x00	; 0
    32e4:	60 e0       	ldi	r22, 0x00	; 0
    32e6:	70 e0       	ldi	r23, 0x00	; 0
    32e8:	48 1b       	sub	r20, r24
    32ea:	59 0b       	sbc	r21, r25
    32ec:	6a 0b       	sbc	r22, r26
    32ee:	7b 0b       	sbc	r23, r27
    32f0:	42 1b       	sub	r20, r18
    32f2:	51 09       	sbc	r21, r1
    32f4:	61 09       	sbc	r22, r1
    32f6:	71 09       	sbc	r23, r1
    32f8:	4d 8f       	std	Y+29, r20	; 0x1d
    32fa:	5e 8f       	std	Y+30, r21	; 0x1e
    32fc:	6f 8f       	std	Y+31, r22	; 0x1f
    32fe:	78 a3       	lds	r23, 0x58
    3300:	41 15       	cp	r20, r1
    3302:	51 05       	cpc	r21, r1
    3304:	61 05       	cpc	r22, r1
    3306:	71 05       	cpc	r23, r1
    3308:	09 f4       	brne	.+2      	; 0x330c <__umoddi3+0xf2>
    330a:	85 c1       	rjmp	.+778    	; 0x3616 <__umoddi3+0x3fc>
    330c:	2d 8d       	ldd	r18, Y+29	; 0x1d
    330e:	02 2e       	mov	r0, r18
    3310:	04 c0       	rjmp	.+8      	; 0x331a <__umoddi3+0x100>
    3312:	88 0c       	add	r8, r8
    3314:	99 1c       	adc	r9, r9
    3316:	aa 1c       	adc	r10, r10
    3318:	bb 1c       	adc	r11, r11
    331a:	0a 94       	dec	r0
    331c:	d2 f7       	brpl	.-12     	; 0x3312 <__umoddi3+0xf8>
    331e:	b7 01       	movw	r22, r14
    3320:	a6 01       	movw	r20, r12
    3322:	02 2e       	mov	r0, r18
    3324:	04 c0       	rjmp	.+8      	; 0x332e <__umoddi3+0x114>
    3326:	44 0f       	add	r20, r20
    3328:	55 1f       	adc	r21, r21
    332a:	66 1f       	adc	r22, r22
    332c:	77 1f       	adc	r23, r23
    332e:	0a 94       	dec	r0
    3330:	d2 f7       	brpl	.-12     	; 0x3326 <__umoddi3+0x10c>
    3332:	80 e2       	ldi	r24, 0x20	; 32
    3334:	90 e0       	ldi	r25, 0x00	; 0
    3336:	ad 8d       	ldd	r26, Y+29	; 0x1d
    3338:	be 8d       	ldd	r27, Y+30	; 0x1e
    333a:	8a 1b       	sub	r24, r26
    333c:	9b 0b       	sbc	r25, r27
    333e:	c9 8c       	ldd	r12, Y+25	; 0x19
    3340:	da 8c       	ldd	r13, Y+26	; 0x1a
    3342:	eb 8c       	ldd	r14, Y+27	; 0x1b
    3344:	fc 8c       	ldd	r15, Y+28	; 0x1c
    3346:	04 c0       	rjmp	.+8      	; 0x3350 <__umoddi3+0x136>
    3348:	f6 94       	lsr	r15
    334a:	e7 94       	ror	r14
    334c:	d7 94       	ror	r13
    334e:	c7 94       	ror	r12
    3350:	8a 95       	dec	r24
    3352:	d2 f7       	brpl	.-12     	; 0x3348 <__umoddi3+0x12e>
    3354:	c4 2a       	or	r12, r20
    3356:	d5 2a       	or	r13, r21
    3358:	e6 2a       	or	r14, r22
    335a:	f7 2a       	or	r15, r23
    335c:	49 8d       	ldd	r20, Y+25	; 0x19
    335e:	5a 8d       	ldd	r21, Y+26	; 0x1a
    3360:	6b 8d       	ldd	r22, Y+27	; 0x1b
    3362:	7c 8d       	ldd	r23, Y+28	; 0x1c
    3364:	04 c0       	rjmp	.+8      	; 0x336e <__umoddi3+0x154>
    3366:	44 0f       	add	r20, r20
    3368:	55 1f       	adc	r21, r21
    336a:	66 1f       	adc	r22, r22
    336c:	77 1f       	adc	r23, r23
    336e:	2a 95       	dec	r18
    3370:	d2 f7       	brpl	.-12     	; 0x3366 <__umoddi3+0x14c>
    3372:	49 8f       	std	Y+25, r20	; 0x19
    3374:	5a 8f       	std	Y+26, r21	; 0x1a
    3376:	6b 8f       	std	Y+27, r22	; 0x1b
    3378:	7c 8f       	std	Y+28, r23	; 0x1c
    337a:	4d c1       	rjmp	.+666    	; 0x3616 <__umoddi3+0x3fc>
    337c:	81 14       	cp	r8, r1
    337e:	91 04       	cpc	r9, r1
    3380:	a1 04       	cpc	r10, r1
    3382:	b1 04       	cpc	r11, r1
    3384:	51 f4       	brne	.+20     	; 0x339a <__umoddi3+0x180>
    3386:	61 e0       	ldi	r22, 0x01	; 1
    3388:	70 e0       	ldi	r23, 0x00	; 0
    338a:	80 e0       	ldi	r24, 0x00	; 0
    338c:	90 e0       	ldi	r25, 0x00	; 0
    338e:	a5 01       	movw	r20, r10
    3390:	94 01       	movw	r18, r8
    3392:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    3396:	49 01       	movw	r8, r18
    3398:	5a 01       	movw	r10, r20
    339a:	00 e0       	ldi	r16, 0x00	; 0
    339c:	80 16       	cp	r8, r16
    339e:	00 e0       	ldi	r16, 0x00	; 0
    33a0:	90 06       	cpc	r9, r16
    33a2:	01 e0       	ldi	r16, 0x01	; 1
    33a4:	a0 06       	cpc	r10, r16
    33a6:	00 e0       	ldi	r16, 0x00	; 0
    33a8:	b0 06       	cpc	r11, r16
    33aa:	58 f4       	brcc	.+22     	; 0x33c2 <__umoddi3+0x1a8>
    33ac:	1f ef       	ldi	r17, 0xFF	; 255
    33ae:	81 16       	cp	r8, r17
    33b0:	91 04       	cpc	r9, r1
    33b2:	a1 04       	cpc	r10, r1
    33b4:	b1 04       	cpc	r11, r1
    33b6:	09 f0       	breq	.+2      	; 0x33ba <__umoddi3+0x1a0>
    33b8:	90 f4       	brcc	.+36     	; 0x33de <__umoddi3+0x1c4>
    33ba:	80 e0       	ldi	r24, 0x00	; 0
    33bc:	90 e0       	ldi	r25, 0x00	; 0
    33be:	dc 01       	movw	r26, r24
    33c0:	17 c0       	rjmp	.+46     	; 0x33f0 <__umoddi3+0x1d6>
    33c2:	20 e0       	ldi	r18, 0x00	; 0
    33c4:	82 16       	cp	r8, r18
    33c6:	20 e0       	ldi	r18, 0x00	; 0
    33c8:	92 06       	cpc	r9, r18
    33ca:	20 e0       	ldi	r18, 0x00	; 0
    33cc:	a2 06       	cpc	r10, r18
    33ce:	21 e0       	ldi	r18, 0x01	; 1
    33d0:	b2 06       	cpc	r11, r18
    33d2:	50 f4       	brcc	.+20     	; 0x33e8 <__umoddi3+0x1ce>
    33d4:	80 e1       	ldi	r24, 0x10	; 16
    33d6:	90 e0       	ldi	r25, 0x00	; 0
    33d8:	a0 e0       	ldi	r26, 0x00	; 0
    33da:	b0 e0       	ldi	r27, 0x00	; 0
    33dc:	09 c0       	rjmp	.+18     	; 0x33f0 <__umoddi3+0x1d6>
    33de:	88 e0       	ldi	r24, 0x08	; 8
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	a0 e0       	ldi	r26, 0x00	; 0
    33e4:	b0 e0       	ldi	r27, 0x00	; 0
    33e6:	04 c0       	rjmp	.+8      	; 0x33f0 <__umoddi3+0x1d6>
    33e8:	88 e1       	ldi	r24, 0x18	; 24
    33ea:	90 e0       	ldi	r25, 0x00	; 0
    33ec:	a0 e0       	ldi	r26, 0x00	; 0
    33ee:	b0 e0       	ldi	r27, 0x00	; 0
    33f0:	b5 01       	movw	r22, r10
    33f2:	a4 01       	movw	r20, r8
    33f4:	08 2e       	mov	r0, r24
    33f6:	04 c0       	rjmp	.+8      	; 0x3400 <__umoddi3+0x1e6>
    33f8:	76 95       	lsr	r23
    33fa:	67 95       	ror	r22
    33fc:	57 95       	ror	r21
    33fe:	47 95       	ror	r20
    3400:	0a 94       	dec	r0
    3402:	d2 f7       	brpl	.-12     	; 0x33f8 <__umoddi3+0x1de>
    3404:	fa 01       	movw	r30, r20
    3406:	e2 58       	subi	r30, 0x82	; 130
    3408:	ff 4f       	sbci	r31, 0xFF	; 255
    340a:	20 81       	ld	r18, Z
    340c:	82 0f       	add	r24, r18
    340e:	91 1d       	adc	r25, r1
    3410:	a1 1d       	adc	r26, r1
    3412:	b1 1d       	adc	r27, r1
    3414:	00 e2       	ldi	r16, 0x20	; 32
    3416:	10 e0       	ldi	r17, 0x00	; 0
    3418:	20 e0       	ldi	r18, 0x00	; 0
    341a:	30 e0       	ldi	r19, 0x00	; 0
    341c:	08 1b       	sub	r16, r24
    341e:	19 0b       	sbc	r17, r25
    3420:	2a 0b       	sbc	r18, r26
    3422:	3b 0b       	sbc	r19, r27
    3424:	0d 8f       	std	Y+29, r16	; 0x1d
    3426:	1e 8f       	std	Y+30, r17	; 0x1e
    3428:	2f 8f       	std	Y+31, r18	; 0x1f
    342a:	38 a3       	lds	r19, 0x58
    342c:	01 15       	cp	r16, r1
    342e:	11 05       	cpc	r17, r1
    3430:	21 05       	cpc	r18, r1
    3432:	31 05       	cpc	r19, r1
    3434:	29 f4       	brne	.+10     	; 0x3440 <__umoddi3+0x226>
    3436:	c8 18       	sub	r12, r8
    3438:	d9 08       	sbc	r13, r9
    343a:	ea 08       	sbc	r14, r10
    343c:	fb 08       	sbc	r15, r11
    343e:	eb c0       	rjmp	.+470    	; 0x3616 <__umoddi3+0x3fc>
    3440:	2d 8d       	ldd	r18, Y+29	; 0x1d
    3442:	02 2e       	mov	r0, r18
    3444:	04 c0       	rjmp	.+8      	; 0x344e <__umoddi3+0x234>
    3446:	88 0c       	add	r8, r8
    3448:	99 1c       	adc	r9, r9
    344a:	aa 1c       	adc	r10, r10
    344c:	bb 1c       	adc	r11, r11
    344e:	0a 94       	dec	r0
    3450:	d2 f7       	brpl	.-12     	; 0x3446 <__umoddi3+0x22c>
    3452:	b7 01       	movw	r22, r14
    3454:	a6 01       	movw	r20, r12
    3456:	08 2e       	mov	r0, r24
    3458:	04 c0       	rjmp	.+8      	; 0x3462 <__umoddi3+0x248>
    345a:	76 95       	lsr	r23
    345c:	67 95       	ror	r22
    345e:	57 95       	ror	r21
    3460:	47 95       	ror	r20
    3462:	0a 94       	dec	r0
    3464:	d2 f7       	brpl	.-12     	; 0x345a <__umoddi3+0x240>
    3466:	49 a7       	lds	r20, 0x79
    3468:	5a a7       	lds	r21, 0x7a
    346a:	6b a7       	lds	r22, 0x7b
    346c:	7c a7       	lds	r23, 0x7c
    346e:	b7 01       	movw	r22, r14
    3470:	a6 01       	movw	r20, r12
    3472:	02 2e       	mov	r0, r18
    3474:	04 c0       	rjmp	.+8      	; 0x347e <__umoddi3+0x264>
    3476:	44 0f       	add	r20, r20
    3478:	55 1f       	adc	r21, r21
    347a:	66 1f       	adc	r22, r22
    347c:	77 1f       	adc	r23, r23
    347e:	0a 94       	dec	r0
    3480:	d2 f7       	brpl	.-12     	; 0x3476 <__umoddi3+0x25c>
    3482:	c9 8c       	ldd	r12, Y+25	; 0x19
    3484:	da 8c       	ldd	r13, Y+26	; 0x1a
    3486:	eb 8c       	ldd	r14, Y+27	; 0x1b
    3488:	fc 8c       	ldd	r15, Y+28	; 0x1c
    348a:	04 c0       	rjmp	.+8      	; 0x3494 <__umoddi3+0x27a>
    348c:	f6 94       	lsr	r15
    348e:	e7 94       	ror	r14
    3490:	d7 94       	ror	r13
    3492:	c7 94       	ror	r12
    3494:	8a 95       	dec	r24
    3496:	d2 f7       	brpl	.-12     	; 0x348c <__umoddi3+0x272>
    3498:	4c 29       	or	r20, r12
    349a:	5d 29       	or	r21, r13
    349c:	6e 29       	or	r22, r14
    349e:	7f 29       	or	r23, r15
    34a0:	49 a3       	lds	r20, 0x59
    34a2:	5a a3       	lds	r21, 0x5a
    34a4:	6b a3       	lds	r22, 0x5b
    34a6:	7c a3       	lds	r23, 0x5c
    34a8:	e9 8c       	ldd	r14, Y+25	; 0x19
    34aa:	fa 8c       	ldd	r15, Y+26	; 0x1a
    34ac:	0b 8d       	ldd	r16, Y+27	; 0x1b
    34ae:	1c 8d       	ldd	r17, Y+28	; 0x1c
    34b0:	04 c0       	rjmp	.+8      	; 0x34ba <__umoddi3+0x2a0>
    34b2:	ee 0c       	add	r14, r14
    34b4:	ff 1c       	adc	r15, r15
    34b6:	00 1f       	adc	r16, r16
    34b8:	11 1f       	adc	r17, r17
    34ba:	2a 95       	dec	r18
    34bc:	d2 f7       	brpl	.-12     	; 0x34b2 <__umoddi3+0x298>
    34be:	e9 8e       	std	Y+25, r14	; 0x19
    34c0:	fa 8e       	std	Y+26, r15	; 0x1a
    34c2:	0b 8f       	std	Y+27, r16	; 0x1b
    34c4:	1c 8f       	std	Y+28, r17	; 0x1c
    34c6:	25 01       	movw	r4, r10
    34c8:	66 24       	eor	r6, r6
    34ca:	77 24       	eor	r7, r7
    34cc:	95 01       	movw	r18, r10
    34ce:	84 01       	movw	r16, r8
    34d0:	20 70       	andi	r18, 0x00	; 0
    34d2:	30 70       	andi	r19, 0x00	; 0
    34d4:	0d a3       	lds	r16, 0x5d
    34d6:	1e a3       	lds	r17, 0x5e
    34d8:	2f a3       	lds	r18, 0x5f
    34da:	38 a7       	lds	r19, 0x78
    34dc:	69 a5       	lds	r22, 0x69
    34de:	7a a5       	lds	r23, 0x6a
    34e0:	8b a5       	lds	r24, 0x6b
    34e2:	9c a5       	lds	r25, 0x6c
    34e4:	a3 01       	movw	r20, r6
    34e6:	92 01       	movw	r18, r4
    34e8:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    34ec:	02 2f       	mov	r16, r18
    34ee:	c3 2e       	mov	r12, r19
    34f0:	14 2f       	mov	r17, r20
    34f2:	f5 2e       	mov	r15, r21
    34f4:	6d a7       	lds	r22, 0x7d
    34f6:	7e a7       	lds	r23, 0x7e
    34f8:	8f a7       	lds	r24, 0x7f
    34fa:	98 ab       	sts	0x58, r25
    34fc:	69 a5       	lds	r22, 0x69
    34fe:	7a a5       	lds	r23, 0x6a
    3500:	8b a5       	lds	r24, 0x6b
    3502:	9c a5       	lds	r25, 0x6c
    3504:	a3 01       	movw	r20, r6
    3506:	92 01       	movw	r18, r4
    3508:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    350c:	60 2f       	mov	r22, r16
    350e:	7c 2d       	mov	r23, r12
    3510:	81 2f       	mov	r24, r17
    3512:	9f 2d       	mov	r25, r15
    3514:	2d a1       	lds	r18, 0x4d
    3516:	3e a1       	lds	r19, 0x4e
    3518:	4f a1       	lds	r20, 0x4f
    351a:	58 a5       	lds	r21, 0x68
    351c:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3520:	dc 01       	movw	r26, r24
    3522:	cb 01       	movw	r24, r22
    3524:	0d a5       	lds	r16, 0x6d
    3526:	1e a5       	lds	r17, 0x6e
    3528:	2f a5       	lds	r18, 0x6f
    352a:	38 a9       	sts	0x48, r19
    352c:	78 01       	movw	r14, r16
    352e:	dd 24       	eor	r13, r13
    3530:	cc 24       	eor	r12, r12
    3532:	09 a1       	lds	r16, 0x49
    3534:	1a a1       	lds	r17, 0x4a
    3536:	2b a1       	lds	r18, 0x4b
    3538:	3c a1       	lds	r19, 0x4c
    353a:	a9 01       	movw	r20, r18
    353c:	66 27       	eor	r22, r22
    353e:	77 27       	eor	r23, r23
    3540:	c4 2a       	or	r12, r20
    3542:	d5 2a       	or	r13, r21
    3544:	e6 2a       	or	r14, r22
    3546:	f7 2a       	or	r15, r23
    3548:	c8 16       	cp	r12, r24
    354a:	d9 06       	cpc	r13, r25
    354c:	ea 06       	cpc	r14, r26
    354e:	fb 06       	cpc	r15, r27
    3550:	90 f4       	brcc	.+36     	; 0x3576 <__umoddi3+0x35c>
    3552:	c8 0c       	add	r12, r8
    3554:	d9 1c       	adc	r13, r9
    3556:	ea 1c       	adc	r14, r10
    3558:	fb 1c       	adc	r15, r11
    355a:	c8 14       	cp	r12, r8
    355c:	d9 04       	cpc	r13, r9
    355e:	ea 04       	cpc	r14, r10
    3560:	fb 04       	cpc	r15, r11
    3562:	48 f0       	brcs	.+18     	; 0x3576 <__umoddi3+0x35c>
    3564:	c8 16       	cp	r12, r24
    3566:	d9 06       	cpc	r13, r25
    3568:	ea 06       	cpc	r14, r26
    356a:	fb 06       	cpc	r15, r27
    356c:	20 f4       	brcc	.+8      	; 0x3576 <__umoddi3+0x35c>
    356e:	c8 0c       	add	r12, r8
    3570:	d9 1c       	adc	r13, r9
    3572:	ea 1c       	adc	r14, r10
    3574:	fb 1c       	adc	r15, r11
    3576:	c8 1a       	sub	r12, r24
    3578:	d9 0a       	sbc	r13, r25
    357a:	ea 0a       	sbc	r14, r26
    357c:	fb 0a       	sbc	r15, r27
    357e:	c7 01       	movw	r24, r14
    3580:	b6 01       	movw	r22, r12
    3582:	a3 01       	movw	r20, r6
    3584:	92 01       	movw	r18, r4
    3586:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    358a:	12 2f       	mov	r17, r18
    358c:	03 2f       	mov	r16, r19
    358e:	34 2e       	mov	r3, r20
    3590:	25 2e       	mov	r2, r21
    3592:	69 a7       	lds	r22, 0x79
    3594:	7a a7       	lds	r23, 0x7a
    3596:	8b a7       	lds	r24, 0x7b
    3598:	9c a7       	lds	r25, 0x7c
    359a:	c7 01       	movw	r24, r14
    359c:	b6 01       	movw	r22, r12
    359e:	a3 01       	movw	r20, r6
    35a0:	92 01       	movw	r18, r4
    35a2:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    35a6:	61 2f       	mov	r22, r17
    35a8:	70 2f       	mov	r23, r16
    35aa:	83 2d       	mov	r24, r3
    35ac:	92 2d       	mov	r25, r2
    35ae:	2d a1       	lds	r18, 0x4d
    35b0:	3e a1       	lds	r19, 0x4e
    35b2:	4f a1       	lds	r20, 0x4f
    35b4:	58 a5       	lds	r21, 0x68
    35b6:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    35ba:	dc 01       	movw	r26, r24
    35bc:	cb 01       	movw	r24, r22
    35be:	09 a5       	lds	r16, 0x69
    35c0:	1a a5       	lds	r17, 0x6a
    35c2:	2b a5       	lds	r18, 0x6b
    35c4:	3c a5       	lds	r19, 0x6c
    35c6:	78 01       	movw	r14, r16
    35c8:	dd 24       	eor	r13, r13
    35ca:	cc 24       	eor	r12, r12
    35cc:	49 a1       	lds	r20, 0x49
    35ce:	5a a1       	lds	r21, 0x4a
    35d0:	6b a1       	lds	r22, 0x4b
    35d2:	7c a1       	lds	r23, 0x4c
    35d4:	60 70       	andi	r22, 0x00	; 0
    35d6:	70 70       	andi	r23, 0x00	; 0
    35d8:	c4 2a       	or	r12, r20
    35da:	d5 2a       	or	r13, r21
    35dc:	e6 2a       	or	r14, r22
    35de:	f7 2a       	or	r15, r23
    35e0:	c8 16       	cp	r12, r24
    35e2:	d9 06       	cpc	r13, r25
    35e4:	ea 06       	cpc	r14, r26
    35e6:	fb 06       	cpc	r15, r27
    35e8:	90 f4       	brcc	.+36     	; 0x360e <__umoddi3+0x3f4>
    35ea:	c8 0c       	add	r12, r8
    35ec:	d9 1c       	adc	r13, r9
    35ee:	ea 1c       	adc	r14, r10
    35f0:	fb 1c       	adc	r15, r11
    35f2:	c8 14       	cp	r12, r8
    35f4:	d9 04       	cpc	r13, r9
    35f6:	ea 04       	cpc	r14, r10
    35f8:	fb 04       	cpc	r15, r11
    35fa:	48 f0       	brcs	.+18     	; 0x360e <__umoddi3+0x3f4>
    35fc:	c8 16       	cp	r12, r24
    35fe:	d9 06       	cpc	r13, r25
    3600:	ea 06       	cpc	r14, r26
    3602:	fb 06       	cpc	r15, r27
    3604:	20 f4       	brcc	.+8      	; 0x360e <__umoddi3+0x3f4>
    3606:	c8 0c       	add	r12, r8
    3608:	d9 1c       	adc	r13, r9
    360a:	ea 1c       	adc	r14, r10
    360c:	fb 1c       	adc	r15, r11
    360e:	c8 1a       	sub	r12, r24
    3610:	d9 0a       	sbc	r13, r25
    3612:	ea 0a       	sbc	r14, r26
    3614:	fb 0a       	sbc	r15, r27
    3616:	85 01       	movw	r16, r10
    3618:	22 27       	eor	r18, r18
    361a:	33 27       	eor	r19, r19
    361c:	09 a3       	lds	r16, 0x59
    361e:	1a a3       	lds	r17, 0x5a
    3620:	2b a3       	lds	r18, 0x5b
    3622:	3c a3       	lds	r19, 0x5c
    3624:	95 01       	movw	r18, r10
    3626:	84 01       	movw	r16, r8
    3628:	20 70       	andi	r18, 0x00	; 0
    362a:	30 70       	andi	r19, 0x00	; 0
    362c:	09 a7       	lds	r16, 0x79
    362e:	1a a7       	lds	r17, 0x7a
    3630:	2b a7       	lds	r18, 0x7b
    3632:	3c a7       	lds	r19, 0x7c
    3634:	c7 01       	movw	r24, r14
    3636:	b6 01       	movw	r22, r12
    3638:	29 a1       	lds	r18, 0x49
    363a:	3a a1       	lds	r19, 0x4a
    363c:	4b a1       	lds	r20, 0x4b
    363e:	5c a1       	lds	r21, 0x4c
    3640:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    3644:	12 2f       	mov	r17, r18
    3646:	03 2f       	mov	r16, r19
    3648:	44 2e       	mov	r4, r20
    364a:	75 2e       	mov	r7, r21
    364c:	6d a3       	lds	r22, 0x5d
    364e:	7e a3       	lds	r23, 0x5e
    3650:	8f a3       	lds	r24, 0x5f
    3652:	98 a7       	lds	r25, 0x78
    3654:	c7 01       	movw	r24, r14
    3656:	b6 01       	movw	r22, r12
    3658:	29 a1       	lds	r18, 0x49
    365a:	3a a1       	lds	r19, 0x4a
    365c:	4b a1       	lds	r20, 0x4b
    365e:	5c a1       	lds	r21, 0x4c
    3660:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    3664:	61 2f       	mov	r22, r17
    3666:	70 2f       	mov	r23, r16
    3668:	84 2d       	mov	r24, r4
    366a:	97 2d       	mov	r25, r7
    366c:	29 a5       	lds	r18, 0x69
    366e:	3a a5       	lds	r19, 0x6a
    3670:	4b a5       	lds	r20, 0x6b
    3672:	5c a5       	lds	r21, 0x6c
    3674:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3678:	dc 01       	movw	r26, r24
    367a:	cb 01       	movw	r24, r22
    367c:	0d a1       	lds	r16, 0x4d
    367e:	1e a1       	lds	r17, 0x4e
    3680:	2f a1       	lds	r18, 0x4f
    3682:	38 a5       	lds	r19, 0x68
    3684:	78 01       	movw	r14, r16
    3686:	dd 24       	eor	r13, r13
    3688:	cc 24       	eor	r12, r12
    368a:	09 8d       	ldd	r16, Y+25	; 0x19
    368c:	1a 8d       	ldd	r17, Y+26	; 0x1a
    368e:	2b 8d       	ldd	r18, Y+27	; 0x1b
    3690:	3c 8d       	ldd	r19, Y+28	; 0x1c
    3692:	a9 01       	movw	r20, r18
    3694:	66 27       	eor	r22, r22
    3696:	77 27       	eor	r23, r23
    3698:	c4 2a       	or	r12, r20
    369a:	d5 2a       	or	r13, r21
    369c:	e6 2a       	or	r14, r22
    369e:	f7 2a       	or	r15, r23
    36a0:	c8 16       	cp	r12, r24
    36a2:	d9 06       	cpc	r13, r25
    36a4:	ea 06       	cpc	r14, r26
    36a6:	fb 06       	cpc	r15, r27
    36a8:	90 f4       	brcc	.+36     	; 0x36ce <__umoddi3+0x4b4>
    36aa:	c8 0c       	add	r12, r8
    36ac:	d9 1c       	adc	r13, r9
    36ae:	ea 1c       	adc	r14, r10
    36b0:	fb 1c       	adc	r15, r11
    36b2:	c8 14       	cp	r12, r8
    36b4:	d9 04       	cpc	r13, r9
    36b6:	ea 04       	cpc	r14, r10
    36b8:	fb 04       	cpc	r15, r11
    36ba:	48 f0       	brcs	.+18     	; 0x36ce <__umoddi3+0x4b4>
    36bc:	c8 16       	cp	r12, r24
    36be:	d9 06       	cpc	r13, r25
    36c0:	ea 06       	cpc	r14, r26
    36c2:	fb 06       	cpc	r15, r27
    36c4:	20 f4       	brcc	.+8      	; 0x36ce <__umoddi3+0x4b4>
    36c6:	c8 0c       	add	r12, r8
    36c8:	d9 1c       	adc	r13, r9
    36ca:	ea 1c       	adc	r14, r10
    36cc:	fb 1c       	adc	r15, r11
    36ce:	c8 1a       	sub	r12, r24
    36d0:	d9 0a       	sbc	r13, r25
    36d2:	ea 0a       	sbc	r14, r26
    36d4:	fb 0a       	sbc	r15, r27
    36d6:	c7 01       	movw	r24, r14
    36d8:	b6 01       	movw	r22, r12
    36da:	29 a1       	lds	r18, 0x49
    36dc:	3a a1       	lds	r19, 0x4a
    36de:	4b a1       	lds	r20, 0x4b
    36e0:	5c a1       	lds	r21, 0x4c
    36e2:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    36e6:	12 2f       	mov	r17, r18
    36e8:	03 2f       	mov	r16, r19
    36ea:	44 2e       	mov	r4, r20
    36ec:	75 2e       	mov	r7, r21
    36ee:	6d a3       	lds	r22, 0x5d
    36f0:	7e a3       	lds	r23, 0x5e
    36f2:	8f a3       	lds	r24, 0x5f
    36f4:	98 a7       	lds	r25, 0x78
    36f6:	c7 01       	movw	r24, r14
    36f8:	b6 01       	movw	r22, r12
    36fa:	29 a1       	lds	r18, 0x49
    36fc:	3a a1       	lds	r19, 0x4a
    36fe:	4b a1       	lds	r20, 0x4b
    3700:	5c a1       	lds	r21, 0x4c
    3702:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    3706:	61 2f       	mov	r22, r17
    3708:	70 2f       	mov	r23, r16
    370a:	84 2d       	mov	r24, r4
    370c:	97 2d       	mov	r25, r7
    370e:	29 a5       	lds	r18, 0x69
    3710:	3a a5       	lds	r19, 0x6a
    3712:	4b a5       	lds	r20, 0x6b
    3714:	5c a5       	lds	r21, 0x6c
    3716:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    371a:	ab 01       	movw	r20, r22
    371c:	bc 01       	movw	r22, r24
    371e:	cd a0       	lds	r28, 0x8d
    3720:	de a0       	lds	r29, 0x8e
    3722:	ef a0       	lds	r30, 0x8f
    3724:	f8 a4       	lds	r31, 0xa8
    3726:	d6 01       	movw	r26, r12
    3728:	99 27       	eor	r25, r25
    372a:	88 27       	eor	r24, r24
    372c:	09 8d       	ldd	r16, Y+25	; 0x19
    372e:	1a 8d       	ldd	r17, Y+26	; 0x1a
    3730:	2b 8d       	ldd	r18, Y+27	; 0x1b
    3732:	3c 8d       	ldd	r19, Y+28	; 0x1c
    3734:	20 70       	andi	r18, 0x00	; 0
    3736:	30 70       	andi	r19, 0x00	; 0
    3738:	80 2b       	or	r24, r16
    373a:	91 2b       	or	r25, r17
    373c:	a2 2b       	or	r26, r18
    373e:	b3 2b       	or	r27, r19
    3740:	84 17       	cp	r24, r20
    3742:	95 07       	cpc	r25, r21
    3744:	a6 07       	cpc	r26, r22
    3746:	b7 07       	cpc	r27, r23
    3748:	90 f4       	brcc	.+36     	; 0x376e <__umoddi3+0x554>
    374a:	88 0d       	add	r24, r8
    374c:	99 1d       	adc	r25, r9
    374e:	aa 1d       	adc	r26, r10
    3750:	bb 1d       	adc	r27, r11
    3752:	88 15       	cp	r24, r8
    3754:	99 05       	cpc	r25, r9
    3756:	aa 05       	cpc	r26, r10
    3758:	bb 05       	cpc	r27, r11
    375a:	48 f0       	brcs	.+18     	; 0x376e <__umoddi3+0x554>
    375c:	84 17       	cp	r24, r20
    375e:	95 07       	cpc	r25, r21
    3760:	a6 07       	cpc	r26, r22
    3762:	b7 07       	cpc	r27, r23
    3764:	20 f4       	brcc	.+8      	; 0x376e <__umoddi3+0x554>
    3766:	88 0d       	add	r24, r8
    3768:	99 1d       	adc	r25, r9
    376a:	aa 1d       	adc	r26, r10
    376c:	bb 1d       	adc	r27, r11
    376e:	84 1b       	sub	r24, r20
    3770:	95 0b       	sbc	r25, r21
    3772:	a6 0b       	sbc	r26, r22
    3774:	b7 0b       	sbc	r27, r23
    3776:	8c 01       	movw	r16, r24
    3778:	9d 01       	movw	r18, r26
    377a:	0d 8c       	ldd	r0, Y+29	; 0x1d
    377c:	04 c0       	rjmp	.+8      	; 0x3786 <__umoddi3+0x56c>
    377e:	36 95       	lsr	r19
    3780:	27 95       	ror	r18
    3782:	17 95       	ror	r17
    3784:	07 95       	ror	r16
    3786:	0a 94       	dec	r0
    3788:	d2 f7       	brpl	.-12     	; 0x377e <__umoddi3+0x564>
    378a:	09 83       	std	Y+1, r16	; 0x01
    378c:	1a 83       	std	Y+2, r17	; 0x02
    378e:	2b 83       	std	Y+3, r18	; 0x03
    3790:	3c 83       	std	Y+4, r19	; 0x04
    3792:	1d 82       	std	Y+5, r1	; 0x05
    3794:	1e 82       	std	Y+6, r1	; 0x06
    3796:	1f 82       	std	Y+7, r1	; 0x07
    3798:	18 86       	std	Y+8, r1	; 0x08
    379a:	20 2f       	mov	r18, r16
    379c:	3a 81       	ldd	r19, Y+2	; 0x02
    379e:	4b 81       	ldd	r20, Y+3	; 0x03
    37a0:	5c 81       	ldd	r21, Y+4	; 0x04
    37a2:	60 e0       	ldi	r22, 0x00	; 0
    37a4:	d1 c2       	rjmp	.+1442   	; 0x3d48 <__umoddi3+0xb2e>
    37a6:	c8 16       	cp	r12, r24
    37a8:	d9 06       	cpc	r13, r25
    37aa:	ea 06       	cpc	r14, r26
    37ac:	fb 06       	cpc	r15, r27
    37ae:	18 f4       	brcc	.+6      	; 0x37b6 <__umoddi3+0x59c>
    37b0:	8f 2f       	mov	r24, r31
    37b2:	9e 2f       	mov	r25, r30
    37b4:	cc c2       	rjmp	.+1432   	; 0x3d4e <__umoddi3+0xb34>
    37b6:	80 30       	cpi	r24, 0x00	; 0
    37b8:	00 e0       	ldi	r16, 0x00	; 0
    37ba:	90 07       	cpc	r25, r16
    37bc:	01 e0       	ldi	r16, 0x01	; 1
    37be:	a0 07       	cpc	r26, r16
    37c0:	00 e0       	ldi	r16, 0x00	; 0
    37c2:	b0 07       	cpc	r27, r16
    37c4:	50 f4       	brcc	.+20     	; 0x37da <__umoddi3+0x5c0>
    37c6:	8f 3f       	cpi	r24, 0xFF	; 255
    37c8:	91 05       	cpc	r25, r1
    37ca:	a1 05       	cpc	r26, r1
    37cc:	b1 05       	cpc	r27, r1
    37ce:	09 f0       	breq	.+2      	; 0x37d2 <__umoddi3+0x5b8>
    37d0:	88 f4       	brcc	.+34     	; 0x37f4 <__umoddi3+0x5da>
    37d2:	00 e0       	ldi	r16, 0x00	; 0
    37d4:	10 e0       	ldi	r17, 0x00	; 0
    37d6:	98 01       	movw	r18, r16
    37d8:	16 c0       	rjmp	.+44     	; 0x3806 <__umoddi3+0x5ec>
    37da:	80 30       	cpi	r24, 0x00	; 0
    37dc:	10 e0       	ldi	r17, 0x00	; 0
    37de:	91 07       	cpc	r25, r17
    37e0:	10 e0       	ldi	r17, 0x00	; 0
    37e2:	a1 07       	cpc	r26, r17
    37e4:	11 e0       	ldi	r17, 0x01	; 1
    37e6:	b1 07       	cpc	r27, r17
    37e8:	50 f4       	brcc	.+20     	; 0x37fe <__umoddi3+0x5e4>
    37ea:	00 e1       	ldi	r16, 0x10	; 16
    37ec:	10 e0       	ldi	r17, 0x00	; 0
    37ee:	20 e0       	ldi	r18, 0x00	; 0
    37f0:	30 e0       	ldi	r19, 0x00	; 0
    37f2:	09 c0       	rjmp	.+18     	; 0x3806 <__umoddi3+0x5ec>
    37f4:	08 e0       	ldi	r16, 0x08	; 8
    37f6:	10 e0       	ldi	r17, 0x00	; 0
    37f8:	20 e0       	ldi	r18, 0x00	; 0
    37fa:	30 e0       	ldi	r19, 0x00	; 0
    37fc:	04 c0       	rjmp	.+8      	; 0x3806 <__umoddi3+0x5ec>
    37fe:	08 e1       	ldi	r16, 0x18	; 24
    3800:	10 e0       	ldi	r17, 0x00	; 0
    3802:	20 e0       	ldi	r18, 0x00	; 0
    3804:	30 e0       	ldi	r19, 0x00	; 0
    3806:	ac 01       	movw	r20, r24
    3808:	bd 01       	movw	r22, r26
    380a:	00 2e       	mov	r0, r16
    380c:	04 c0       	rjmp	.+8      	; 0x3816 <__umoddi3+0x5fc>
    380e:	76 95       	lsr	r23
    3810:	67 95       	ror	r22
    3812:	57 95       	ror	r21
    3814:	47 95       	ror	r20
    3816:	0a 94       	dec	r0
    3818:	d2 f7       	brpl	.-12     	; 0x380e <__umoddi3+0x5f4>
    381a:	fa 01       	movw	r30, r20
    381c:	e2 58       	subi	r30, 0x82	; 130
    381e:	ff 4f       	sbci	r31, 0xFF	; 255
    3820:	40 81       	ld	r20, Z
    3822:	04 0f       	add	r16, r20
    3824:	11 1d       	adc	r17, r1
    3826:	21 1d       	adc	r18, r1
    3828:	31 1d       	adc	r19, r1
    382a:	40 e2       	ldi	r20, 0x20	; 32
    382c:	50 e0       	ldi	r21, 0x00	; 0
    382e:	60 e0       	ldi	r22, 0x00	; 0
    3830:	70 e0       	ldi	r23, 0x00	; 0
    3832:	40 1b       	sub	r20, r16
    3834:	51 0b       	sbc	r21, r17
    3836:	62 0b       	sbc	r22, r18
    3838:	73 0b       	sbc	r23, r19
    383a:	09 f0       	breq	.+2      	; 0x383e <__umoddi3+0x624>
    383c:	40 c0       	rjmp	.+128    	; 0x38be <__umoddi3+0x6a4>
    383e:	8c 15       	cp	r24, r12
    3840:	9d 05       	cpc	r25, r13
    3842:	ae 05       	cpc	r26, r14
    3844:	bf 05       	cpc	r27, r15
    3846:	48 f0       	brcs	.+18     	; 0x385a <__umoddi3+0x640>
    3848:	09 8d       	ldd	r16, Y+25	; 0x19
    384a:	1a 8d       	ldd	r17, Y+26	; 0x1a
    384c:	2b 8d       	ldd	r18, Y+27	; 0x1b
    384e:	3c 8d       	ldd	r19, Y+28	; 0x1c
    3850:	08 15       	cp	r16, r8
    3852:	19 05       	cpc	r17, r9
    3854:	2a 05       	cpc	r18, r10
    3856:	3b 05       	cpc	r19, r11
    3858:	20 f1       	brcs	.+72     	; 0x38a2 <__umoddi3+0x688>
    385a:	49 8d       	ldd	r20, Y+25	; 0x19
    385c:	5a 8d       	ldd	r21, Y+26	; 0x1a
    385e:	6b 8d       	ldd	r22, Y+27	; 0x1b
    3860:	7c 8d       	ldd	r23, Y+28	; 0x1c
    3862:	48 19       	sub	r20, r8
    3864:	59 09       	sbc	r21, r9
    3866:	6a 09       	sbc	r22, r10
    3868:	7b 09       	sbc	r23, r11
    386a:	c8 1a       	sub	r12, r24
    386c:	d9 0a       	sbc	r13, r25
    386e:	ea 0a       	sbc	r14, r26
    3870:	fb 0a       	sbc	r15, r27
    3872:	81 e0       	ldi	r24, 0x01	; 1
    3874:	90 e0       	ldi	r25, 0x00	; 0
    3876:	a0 e0       	ldi	r26, 0x00	; 0
    3878:	b0 e0       	ldi	r27, 0x00	; 0
    387a:	89 8c       	ldd	r8, Y+25	; 0x19
    387c:	9a 8c       	ldd	r9, Y+26	; 0x1a
    387e:	ab 8c       	ldd	r10, Y+27	; 0x1b
    3880:	bc 8c       	ldd	r11, Y+28	; 0x1c
    3882:	84 16       	cp	r8, r20
    3884:	95 06       	cpc	r9, r21
    3886:	a6 06       	cpc	r10, r22
    3888:	b7 06       	cpc	r11, r23
    388a:	18 f0       	brcs	.+6      	; 0x3892 <__umoddi3+0x678>
    388c:	80 e0       	ldi	r24, 0x00	; 0
    388e:	90 e0       	ldi	r25, 0x00	; 0
    3890:	dc 01       	movw	r26, r24
    3892:	c8 1a       	sub	r12, r24
    3894:	d9 0a       	sbc	r13, r25
    3896:	ea 0a       	sbc	r14, r26
    3898:	fb 0a       	sbc	r15, r27
    389a:	49 8f       	std	Y+25, r20	; 0x19
    389c:	5a 8f       	std	Y+26, r21	; 0x1a
    389e:	6b 8f       	std	Y+27, r22	; 0x1b
    38a0:	7c 8f       	std	Y+28, r23	; 0x1c
    38a2:	09 8d       	ldd	r16, Y+25	; 0x19
    38a4:	1a 8d       	ldd	r17, Y+26	; 0x1a
    38a6:	2b 8d       	ldd	r18, Y+27	; 0x1b
    38a8:	3c 8d       	ldd	r19, Y+28	; 0x1c
    38aa:	09 83       	std	Y+1, r16	; 0x01
    38ac:	1a 83       	std	Y+2, r17	; 0x02
    38ae:	2b 83       	std	Y+3, r18	; 0x03
    38b0:	3c 83       	std	Y+4, r19	; 0x04
    38b2:	cd 82       	std	Y+5, r12	; 0x05
    38b4:	de 82       	std	Y+6, r13	; 0x06
    38b6:	ef 82       	std	Y+7, r14	; 0x07
    38b8:	f8 86       	std	Y+8, r15	; 0x08
    38ba:	29 8d       	ldd	r18, Y+25	; 0x19
    38bc:	41 c2       	rjmp	.+1154   	; 0x3d40 <__umoddi3+0xb26>
    38be:	34 2e       	mov	r3, r20
    38c0:	ac 01       	movw	r20, r24
    38c2:	bd 01       	movw	r22, r26
    38c4:	03 2c       	mov	r0, r3
    38c6:	04 c0       	rjmp	.+8      	; 0x38d0 <__umoddi3+0x6b6>
    38c8:	44 0f       	add	r20, r20
    38ca:	55 1f       	adc	r21, r21
    38cc:	66 1f       	adc	r22, r22
    38ce:	77 1f       	adc	r23, r23
    38d0:	0a 94       	dec	r0
    38d2:	d2 f7       	brpl	.-12     	; 0x38c8 <__umoddi3+0x6ae>
    38d4:	20 2e       	mov	r2, r16
    38d6:	d5 01       	movw	r26, r10
    38d8:	c4 01       	movw	r24, r8
    38da:	04 c0       	rjmp	.+8      	; 0x38e4 <__umoddi3+0x6ca>
    38dc:	b6 95       	lsr	r27
    38de:	a7 95       	ror	r26
    38e0:	97 95       	ror	r25
    38e2:	87 95       	ror	r24
    38e4:	0a 95       	dec	r16
    38e6:	d2 f7       	brpl	.-12     	; 0x38dc <__umoddi3+0x6c2>
    38e8:	48 2b       	or	r20, r24
    38ea:	59 2b       	or	r21, r25
    38ec:	6a 2b       	or	r22, r26
    38ee:	7b 2b       	or	r23, r27
    38f0:	4d 8f       	std	Y+29, r20	; 0x1d
    38f2:	5e 8f       	std	Y+30, r21	; 0x1e
    38f4:	6f 8f       	std	Y+31, r22	; 0x1f
    38f6:	78 a3       	lds	r23, 0x58
    38f8:	95 01       	movw	r18, r10
    38fa:	84 01       	movw	r16, r8
    38fc:	03 2c       	mov	r0, r3
    38fe:	04 c0       	rjmp	.+8      	; 0x3908 <__umoddi3+0x6ee>
    3900:	00 0f       	add	r16, r16
    3902:	11 1f       	adc	r17, r17
    3904:	22 1f       	adc	r18, r18
    3906:	33 1f       	adc	r19, r19
    3908:	0a 94       	dec	r0
    390a:	d2 f7       	brpl	.-12     	; 0x3900 <__umoddi3+0x6e6>
    390c:	09 a7       	lds	r16, 0x79
    390e:	1a a7       	lds	r17, 0x7a
    3910:	2b a7       	lds	r18, 0x7b
    3912:	3c a7       	lds	r19, 0x7c
    3914:	46 01       	movw	r8, r12
    3916:	57 01       	movw	r10, r14
    3918:	02 2c       	mov	r0, r2
    391a:	04 c0       	rjmp	.+8      	; 0x3924 <__umoddi3+0x70a>
    391c:	b6 94       	lsr	r11
    391e:	a7 94       	ror	r10
    3920:	97 94       	ror	r9
    3922:	87 94       	ror	r8
    3924:	0a 94       	dec	r0
    3926:	d2 f7       	brpl	.-12     	; 0x391c <__umoddi3+0x702>
    3928:	8d a2       	lds	r24, 0x9d
    392a:	9e a2       	lds	r25, 0x9e
    392c:	af a2       	lds	r26, 0x9f
    392e:	b8 a6       	lds	r27, 0xb8
    3930:	97 01       	movw	r18, r14
    3932:	86 01       	movw	r16, r12
    3934:	03 2c       	mov	r0, r3
    3936:	04 c0       	rjmp	.+8      	; 0x3940 <__umoddi3+0x726>
    3938:	00 0f       	add	r16, r16
    393a:	11 1f       	adc	r17, r17
    393c:	22 1f       	adc	r18, r18
    393e:	33 1f       	adc	r19, r19
    3940:	0a 94       	dec	r0
    3942:	d2 f7       	brpl	.-12     	; 0x3938 <__umoddi3+0x71e>
    3944:	89 8d       	ldd	r24, Y+25	; 0x19
    3946:	9a 8d       	ldd	r25, Y+26	; 0x1a
    3948:	ab 8d       	ldd	r26, Y+27	; 0x1b
    394a:	bc 8d       	ldd	r27, Y+28	; 0x1c
    394c:	02 2c       	mov	r0, r2
    394e:	04 c0       	rjmp	.+8      	; 0x3958 <__umoddi3+0x73e>
    3950:	b6 95       	lsr	r27
    3952:	a7 95       	ror	r26
    3954:	97 95       	ror	r25
    3956:	87 95       	ror	r24
    3958:	0a 94       	dec	r0
    395a:	d2 f7       	brpl	.-12     	; 0x3950 <__umoddi3+0x736>
    395c:	08 2b       	or	r16, r24
    395e:	19 2b       	or	r17, r25
    3960:	2a 2b       	or	r18, r26
    3962:	3b 2b       	or	r19, r27
    3964:	09 a3       	lds	r16, 0x59
    3966:	1a a3       	lds	r17, 0x5a
    3968:	2b a3       	lds	r18, 0x5b
    396a:	3c a3       	lds	r19, 0x5c
    396c:	89 8c       	ldd	r8, Y+25	; 0x19
    396e:	9a 8c       	ldd	r9, Y+26	; 0x1a
    3970:	ab 8c       	ldd	r10, Y+27	; 0x1b
    3972:	bc 8c       	ldd	r11, Y+28	; 0x1c
    3974:	03 2c       	mov	r0, r3
    3976:	04 c0       	rjmp	.+8      	; 0x3980 <__umoddi3+0x766>
    3978:	88 0c       	add	r8, r8
    397a:	99 1c       	adc	r9, r9
    397c:	aa 1c       	adc	r10, r10
    397e:	bb 1c       	adc	r11, r11
    3980:	0a 94       	dec	r0
    3982:	d2 f7       	brpl	.-12     	; 0x3978 <__umoddi3+0x75e>
    3984:	89 8e       	std	Y+25, r8	; 0x19
    3986:	9a 8e       	std	Y+26, r9	; 0x1a
    3988:	ab 8e       	std	Y+27, r10	; 0x1b
    398a:	bc 8e       	std	Y+28, r11	; 0x1c
    398c:	4b 01       	movw	r8, r22
    398e:	aa 24       	eor	r10, r10
    3990:	bb 24       	eor	r11, r11
    3992:	60 70       	andi	r22, 0x00	; 0
    3994:	70 70       	andi	r23, 0x00	; 0
    3996:	4d a7       	lds	r20, 0x7d
    3998:	5e a7       	lds	r21, 0x7e
    399a:	6f a7       	lds	r22, 0x7f
    399c:	78 ab       	sts	0x58, r23
    399e:	6d a1       	lds	r22, 0x4d
    39a0:	7e a1       	lds	r23, 0x4e
    39a2:	8f a1       	lds	r24, 0x4f
    39a4:	98 a5       	lds	r25, 0x68
    39a6:	a5 01       	movw	r20, r10
    39a8:	94 01       	movw	r18, r8
    39aa:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    39ae:	29 01       	movw	r4, r18
    39b0:	3a 01       	movw	r6, r20
    39b2:	6b 01       	movw	r12, r22
    39b4:	7c 01       	movw	r14, r24
    39b6:	6d a1       	lds	r22, 0x4d
    39b8:	7e a1       	lds	r23, 0x4e
    39ba:	8f a1       	lds	r24, 0x4f
    39bc:	98 a5       	lds	r25, 0x68
    39be:	a5 01       	movw	r20, r10
    39c0:	94 01       	movw	r18, r8
    39c2:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    39c6:	c3 01       	movw	r24, r6
    39c8:	b2 01       	movw	r22, r4
    39ca:	2d a5       	lds	r18, 0x6d
    39cc:	3e a5       	lds	r19, 0x6e
    39ce:	4f a5       	lds	r20, 0x6f
    39d0:	58 a9       	sts	0x48, r21
    39d2:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    39d6:	dc 01       	movw	r26, r24
    39d8:	cb 01       	movw	r24, r22
    39da:	76 01       	movw	r14, r12
    39dc:	dd 24       	eor	r13, r13
    39de:	cc 24       	eor	r12, r12
    39e0:	09 a1       	lds	r16, 0x49
    39e2:	1a a1       	lds	r17, 0x4a
    39e4:	2b a1       	lds	r18, 0x4b
    39e6:	3c a1       	lds	r19, 0x4c
    39e8:	a9 01       	movw	r20, r18
    39ea:	66 27       	eor	r22, r22
    39ec:	77 27       	eor	r23, r23
    39ee:	c4 2a       	or	r12, r20
    39f0:	d5 2a       	or	r13, r21
    39f2:	e6 2a       	or	r14, r22
    39f4:	f7 2a       	or	r15, r23
    39f6:	c8 16       	cp	r12, r24
    39f8:	d9 06       	cpc	r13, r25
    39fa:	ea 06       	cpc	r14, r26
    39fc:	fb 06       	cpc	r15, r27
    39fe:	78 f5       	brcc	.+94     	; 0x3a5e <__umoddi3+0x844>
    3a00:	93 01       	movw	r18, r6
    3a02:	82 01       	movw	r16, r4
    3a04:	01 50       	subi	r16, 0x01	; 1
    3a06:	10 40       	sbci	r17, 0x00	; 0
    3a08:	20 40       	sbci	r18, 0x00	; 0
    3a0a:	30 40       	sbci	r19, 0x00	; 0
    3a0c:	0d a3       	lds	r16, 0x5d
    3a0e:	1e a3       	lds	r17, 0x5e
    3a10:	2f a3       	lds	r18, 0x5f
    3a12:	38 a7       	lds	r19, 0x78
    3a14:	0d 8d       	ldd	r16, Y+29	; 0x1d
    3a16:	1e 8d       	ldd	r17, Y+30	; 0x1e
    3a18:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a1a:	38 a1       	lds	r19, 0x48
    3a1c:	c0 0e       	add	r12, r16
    3a1e:	d1 1e       	adc	r13, r17
    3a20:	e2 1e       	adc	r14, r18
    3a22:	f3 1e       	adc	r15, r19
    3a24:	c0 16       	cp	r12, r16
    3a26:	d1 06       	cpc	r13, r17
    3a28:	e2 06       	cpc	r14, r18
    3a2a:	f3 06       	cpc	r15, r19
    3a2c:	e0 f0       	brcs	.+56     	; 0x3a66 <__umoddi3+0x84c>
    3a2e:	c8 16       	cp	r12, r24
    3a30:	d9 06       	cpc	r13, r25
    3a32:	ea 06       	cpc	r14, r26
    3a34:	fb 06       	cpc	r15, r27
    3a36:	b8 f4       	brcc	.+46     	; 0x3a66 <__umoddi3+0x84c>
    3a38:	93 01       	movw	r18, r6
    3a3a:	82 01       	movw	r16, r4
    3a3c:	02 50       	subi	r16, 0x02	; 2
    3a3e:	10 40       	sbci	r17, 0x00	; 0
    3a40:	20 40       	sbci	r18, 0x00	; 0
    3a42:	30 40       	sbci	r19, 0x00	; 0
    3a44:	0d a3       	lds	r16, 0x5d
    3a46:	1e a3       	lds	r17, 0x5e
    3a48:	2f a3       	lds	r18, 0x5f
    3a4a:	38 a7       	lds	r19, 0x78
    3a4c:	0d 8d       	ldd	r16, Y+29	; 0x1d
    3a4e:	1e 8d       	ldd	r17, Y+30	; 0x1e
    3a50:	2f 8d       	ldd	r18, Y+31	; 0x1f
    3a52:	38 a1       	lds	r19, 0x48
    3a54:	c0 0e       	add	r12, r16
    3a56:	d1 1e       	adc	r13, r17
    3a58:	e2 1e       	adc	r14, r18
    3a5a:	f3 1e       	adc	r15, r19
    3a5c:	04 c0       	rjmp	.+8      	; 0x3a66 <__umoddi3+0x84c>
    3a5e:	4d a2       	lds	r20, 0x9d
    3a60:	5e a2       	lds	r21, 0x9e
    3a62:	6f a2       	lds	r22, 0x9f
    3a64:	78 a6       	lds	r23, 0xb8
    3a66:	c8 1a       	sub	r12, r24
    3a68:	d9 0a       	sbc	r13, r25
    3a6a:	ea 0a       	sbc	r14, r26
    3a6c:	fb 0a       	sbc	r15, r27
    3a6e:	c7 01       	movw	r24, r14
    3a70:	b6 01       	movw	r22, r12
    3a72:	a5 01       	movw	r20, r10
    3a74:	94 01       	movw	r18, r8
    3a76:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    3a7a:	29 01       	movw	r4, r18
    3a7c:	3a 01       	movw	r6, r20
    3a7e:	69 ab       	sts	0x59, r22
    3a80:	7a ab       	sts	0x5a, r23
    3a82:	8b ab       	sts	0x5b, r24
    3a84:	9c ab       	sts	0x5c, r25
    3a86:	c7 01       	movw	r24, r14
    3a88:	b6 01       	movw	r22, r12
    3a8a:	a5 01       	movw	r20, r10
    3a8c:	94 01       	movw	r18, r8
    3a8e:	0e 94 ca 1e 	call	0x3d94	; 0x3d94 <__udivmodsi4>
    3a92:	c3 01       	movw	r24, r6
    3a94:	b2 01       	movw	r22, r4
    3a96:	2d a5       	lds	r18, 0x6d
    3a98:	3e a5       	lds	r19, 0x6e
    3a9a:	4f a5       	lds	r20, 0x6f
    3a9c:	58 a9       	sts	0x48, r21
    3a9e:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3aa2:	8b 01       	movw	r16, r22
    3aa4:	9c 01       	movw	r18, r24
    3aa6:	89 a8       	sts	0x89, r24
    3aa8:	9a a8       	sts	0x8a, r25
    3aaa:	ab a8       	sts	0x8b, r26
    3aac:	bc a8       	sts	0x8c, r27
    3aae:	b4 01       	movw	r22, r8
    3ab0:	55 27       	eor	r21, r21
    3ab2:	44 27       	eor	r20, r20
    3ab4:	89 a1       	lds	r24, 0x49
    3ab6:	9a a1       	lds	r25, 0x4a
    3ab8:	ab a1       	lds	r26, 0x4b
    3aba:	bc a1       	lds	r27, 0x4c
    3abc:	a0 70       	andi	r26, 0x00	; 0
    3abe:	b0 70       	andi	r27, 0x00	; 0
    3ac0:	48 2b       	or	r20, r24
    3ac2:	59 2b       	or	r21, r25
    3ac4:	6a 2b       	or	r22, r26
    3ac6:	7b 2b       	or	r23, r27
    3ac8:	d3 01       	movw	r26, r6
    3aca:	c2 01       	movw	r24, r4
    3acc:	40 17       	cp	r20, r16
    3ace:	51 07       	cpc	r21, r17
    3ad0:	62 07       	cpc	r22, r18
    3ad2:	73 07       	cpc	r23, r19
    3ad4:	f0 f4       	brcc	.+60     	; 0x3b12 <__umoddi3+0x8f8>
    3ad6:	01 97       	sbiw	r24, 0x01	; 1
    3ad8:	a1 09       	sbc	r26, r1
    3ada:	b1 09       	sbc	r27, r1
    3adc:	ad 8c       	ldd	r10, Y+29	; 0x1d
    3ade:	be 8c       	ldd	r11, Y+30	; 0x1e
    3ae0:	cf 8c       	ldd	r12, Y+31	; 0x1f
    3ae2:	d8 a0       	lds	r29, 0x88
    3ae4:	4a 0d       	add	r20, r10
    3ae6:	5b 1d       	adc	r21, r11
    3ae8:	6c 1d       	adc	r22, r12
    3aea:	7d 1d       	adc	r23, r13
    3aec:	4a 15       	cp	r20, r10
    3aee:	5b 05       	cpc	r21, r11
    3af0:	6c 05       	cpc	r22, r12
    3af2:	7d 05       	cpc	r23, r13
    3af4:	70 f0       	brcs	.+28     	; 0x3b12 <__umoddi3+0x8f8>
    3af6:	40 17       	cp	r20, r16
    3af8:	51 07       	cpc	r21, r17
    3afa:	62 07       	cpc	r22, r18
    3afc:	73 07       	cpc	r23, r19
    3afe:	48 f4       	brcc	.+18     	; 0x3b12 <__umoddi3+0x8f8>
    3b00:	d3 01       	movw	r26, r6
    3b02:	c2 01       	movw	r24, r4
    3b04:	02 97       	sbiw	r24, 0x02	; 2
    3b06:	a1 09       	sbc	r26, r1
    3b08:	b1 09       	sbc	r27, r1
    3b0a:	4a 0d       	add	r20, r10
    3b0c:	5b 1d       	adc	r21, r11
    3b0e:	6c 1d       	adc	r22, r12
    3b10:	7d 1d       	adc	r23, r13
    3b12:	6a 01       	movw	r12, r20
    3b14:	7b 01       	movw	r14, r22
    3b16:	c0 1a       	sub	r12, r16
    3b18:	d1 0a       	sbc	r13, r17
    3b1a:	e2 0a       	sbc	r14, r18
    3b1c:	f3 0a       	sbc	r15, r19
    3b1e:	c9 a2       	lds	r28, 0x99
    3b20:	da a2       	lds	r29, 0x9a
    3b22:	eb a2       	lds	r30, 0x9b
    3b24:	fc a2       	lds	r31, 0x9c
    3b26:	ed a0       	lds	r30, 0x8d
    3b28:	fe a0       	lds	r31, 0x8e
    3b2a:	0f a1       	lds	r16, 0x4f
    3b2c:	18 a5       	lds	r17, 0x68
    3b2e:	b7 01       	movw	r22, r14
    3b30:	55 27       	eor	r21, r21
    3b32:	44 27       	eor	r20, r20
    3b34:	48 2b       	or	r20, r24
    3b36:	59 2b       	or	r21, r25
    3b38:	6a 2b       	or	r22, r26
    3b3a:	7b 2b       	or	r23, r27
    3b3c:	ff ef       	ldi	r31, 0xFF	; 255
    3b3e:	cf 2e       	mov	r12, r31
    3b40:	ff ef       	ldi	r31, 0xFF	; 255
    3b42:	df 2e       	mov	r13, r31
    3b44:	e1 2c       	mov	r14, r1
    3b46:	f1 2c       	mov	r15, r1
    3b48:	c4 22       	and	r12, r20
    3b4a:	d5 22       	and	r13, r21
    3b4c:	e6 22       	and	r14, r22
    3b4e:	f7 22       	and	r15, r23
    3b50:	2b 01       	movw	r4, r22
    3b52:	66 24       	eor	r6, r6
    3b54:	77 24       	eor	r7, r7
    3b56:	89 a4       	lds	r24, 0xa9
    3b58:	9a a4       	lds	r25, 0xaa
    3b5a:	ab a4       	lds	r26, 0xab
    3b5c:	bc a4       	lds	r27, 0xac
    3b5e:	0f ef       	ldi	r16, 0xFF	; 255
    3b60:	1f ef       	ldi	r17, 0xFF	; 255
    3b62:	20 e0       	ldi	r18, 0x00	; 0
    3b64:	30 e0       	ldi	r19, 0x00	; 0
    3b66:	80 22       	and	r8, r16
    3b68:	91 22       	and	r9, r17
    3b6a:	a2 22       	and	r10, r18
    3b6c:	b3 22       	and	r11, r19
    3b6e:	29 a5       	lds	r18, 0x69
    3b70:	3a a5       	lds	r19, 0x6a
    3b72:	4b a5       	lds	r20, 0x6b
    3b74:	5c a5       	lds	r21, 0x6c
    3b76:	8a 01       	movw	r16, r20
    3b78:	22 27       	eor	r18, r18
    3b7a:	33 27       	eor	r19, r19
    3b7c:	0d a3       	lds	r16, 0x5d
    3b7e:	1e a3       	lds	r17, 0x5e
    3b80:	2f a3       	lds	r18, 0x5f
    3b82:	38 a7       	lds	r19, 0x78
    3b84:	c7 01       	movw	r24, r14
    3b86:	b6 01       	movw	r22, r12
    3b88:	a5 01       	movw	r20, r10
    3b8a:	94 01       	movw	r18, r8
    3b8c:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3b90:	6d a7       	lds	r22, 0x7d
    3b92:	7e a7       	lds	r23, 0x7e
    3b94:	8f a7       	lds	r24, 0x7f
    3b96:	98 ab       	sts	0x58, r25
    3b98:	c7 01       	movw	r24, r14
    3b9a:	b6 01       	movw	r22, r12
    3b9c:	2d a1       	lds	r18, 0x4d
    3b9e:	3e a1       	lds	r19, 0x4e
    3ba0:	4f a1       	lds	r20, 0x4f
    3ba2:	58 a5       	lds	r21, 0x68
    3ba4:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3ba8:	6b 01       	movw	r12, r22
    3baa:	7c 01       	movw	r14, r24
    3bac:	c3 01       	movw	r24, r6
    3bae:	b2 01       	movw	r22, r4
    3bb0:	a5 01       	movw	r20, r10
    3bb2:	94 01       	movw	r18, r8
    3bb4:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3bb8:	4b 01       	movw	r8, r22
    3bba:	5c 01       	movw	r10, r24
    3bbc:	c3 01       	movw	r24, r6
    3bbe:	b2 01       	movw	r22, r4
    3bc0:	2d a1       	lds	r18, 0x4d
    3bc2:	3e a1       	lds	r19, 0x4e
    3bc4:	4f a1       	lds	r20, 0x4f
    3bc6:	58 a5       	lds	r21, 0x68
    3bc8:	0e 94 ab 1e 	call	0x3d56	; 0x3d56 <__mulsi3>
    3bcc:	ab 01       	movw	r20, r22
    3bce:	bc 01       	movw	r22, r24
    3bd0:	c8 0c       	add	r12, r8
    3bd2:	d9 1c       	adc	r13, r9
    3bd4:	ea 1c       	adc	r14, r10
    3bd6:	fb 1c       	adc	r15, r11
    3bd8:	0d a5       	lds	r16, 0x6d
    3bda:	1e a5       	lds	r17, 0x6e
    3bdc:	2f a5       	lds	r18, 0x6f
    3bde:	38 a9       	sts	0x48, r19
    3be0:	c9 01       	movw	r24, r18
    3be2:	aa 27       	eor	r26, r26
    3be4:	bb 27       	eor	r27, r27
    3be6:	c8 0e       	add	r12, r24
    3be8:	d9 1e       	adc	r13, r25
    3bea:	ea 1e       	adc	r14, r26
    3bec:	fb 1e       	adc	r15, r27
    3bee:	c8 14       	cp	r12, r8
    3bf0:	d9 04       	cpc	r13, r9
    3bf2:	ea 04       	cpc	r14, r10
    3bf4:	fb 04       	cpc	r15, r11
    3bf6:	20 f4       	brcc	.+8      	; 0x3c00 <__umoddi3+0x9e6>
    3bf8:	40 50       	subi	r20, 0x00	; 0
    3bfa:	50 40       	sbci	r21, 0x00	; 0
    3bfc:	6f 4f       	sbci	r22, 0xFF	; 255
    3bfe:	7f 4f       	sbci	r23, 0xFF	; 255
    3c00:	c7 01       	movw	r24, r14
    3c02:	aa 27       	eor	r26, r26
    3c04:	bb 27       	eor	r27, r27
    3c06:	84 0f       	add	r24, r20
    3c08:	95 1f       	adc	r25, r21
    3c0a:	a6 1f       	adc	r26, r22
    3c0c:	b7 1f       	adc	r27, r23
    3c0e:	76 01       	movw	r14, r12
    3c10:	dd 24       	eor	r13, r13
    3c12:	cc 24       	eor	r12, r12
    3c14:	4d a5       	lds	r20, 0x6d
    3c16:	5e a5       	lds	r21, 0x6e
    3c18:	6f a5       	lds	r22, 0x6f
    3c1a:	78 a9       	sts	0x48, r23
    3c1c:	60 70       	andi	r22, 0x00	; 0
    3c1e:	70 70       	andi	r23, 0x00	; 0
    3c20:	c4 0e       	add	r12, r20
    3c22:	d5 1e       	adc	r13, r21
    3c24:	e6 1e       	adc	r14, r22
    3c26:	f7 1e       	adc	r15, r23
    3c28:	89 a0       	lds	r24, 0x89
    3c2a:	9a a0       	lds	r25, 0x8a
    3c2c:	ab a0       	lds	r26, 0x8b
    3c2e:	bc a0       	lds	r27, 0x8c
    3c30:	88 16       	cp	r8, r24
    3c32:	99 06       	cpc	r9, r25
    3c34:	aa 06       	cpc	r10, r26
    3c36:	bb 06       	cpc	r11, r27
    3c38:	70 f0       	brcs	.+28     	; 0x3c56 <__umoddi3+0xa3c>
    3c3a:	88 15       	cp	r24, r8
    3c3c:	99 05       	cpc	r25, r9
    3c3e:	aa 05       	cpc	r26, r10
    3c40:	bb 05       	cpc	r27, r11
    3c42:	99 f5       	brne	.+102    	; 0x3caa <__umoddi3+0xa90>
    3c44:	09 8d       	ldd	r16, Y+25	; 0x19
    3c46:	1a 8d       	ldd	r17, Y+26	; 0x1a
    3c48:	2b 8d       	ldd	r18, Y+27	; 0x1b
    3c4a:	3c 8d       	ldd	r19, Y+28	; 0x1c
    3c4c:	0c 15       	cp	r16, r12
    3c4e:	1d 05       	cpc	r17, r13
    3c50:	2e 05       	cpc	r18, r14
    3c52:	3f 05       	cpc	r19, r15
    3c54:	50 f5       	brcc	.+84     	; 0x3caa <__umoddi3+0xa90>
    3c56:	b7 01       	movw	r22, r14
    3c58:	a6 01       	movw	r20, r12
    3c5a:	89 a4       	lds	r24, 0xa9
    3c5c:	9a a4       	lds	r25, 0xaa
    3c5e:	ab a4       	lds	r26, 0xab
    3c60:	bc a4       	lds	r27, 0xac
    3c62:	48 19       	sub	r20, r8
    3c64:	59 09       	sbc	r21, r9
    3c66:	6a 09       	sbc	r22, r10
    3c68:	7b 09       	sbc	r23, r11
    3c6a:	8c 01       	movw	r16, r24
    3c6c:	9d 01       	movw	r18, r26
    3c6e:	8d 8c       	ldd	r8, Y+29	; 0x1d
    3c70:	9e 8c       	ldd	r9, Y+30	; 0x1e
    3c72:	af 8c       	ldd	r10, Y+31	; 0x1f
    3c74:	b8 a0       	lds	r27, 0x88
    3c76:	08 19       	sub	r16, r8
    3c78:	19 09       	sbc	r17, r9
    3c7a:	2a 09       	sbc	r18, r10
    3c7c:	3b 09       	sbc	r19, r11
    3c7e:	81 e0       	ldi	r24, 0x01	; 1
    3c80:	90 e0       	ldi	r25, 0x00	; 0
    3c82:	a0 e0       	ldi	r26, 0x00	; 0
    3c84:	b0 e0       	ldi	r27, 0x00	; 0
    3c86:	c4 16       	cp	r12, r20
    3c88:	d5 06       	cpc	r13, r21
    3c8a:	e6 06       	cpc	r14, r22
    3c8c:	f7 06       	cpc	r15, r23
    3c8e:	18 f0       	brcs	.+6      	; 0x3c96 <__umoddi3+0xa7c>
    3c90:	80 e0       	ldi	r24, 0x00	; 0
    3c92:	90 e0       	ldi	r25, 0x00	; 0
    3c94:	dc 01       	movw	r26, r24
    3c96:	58 01       	movw	r10, r16
    3c98:	69 01       	movw	r12, r18
    3c9a:	a8 1a       	sub	r10, r24
    3c9c:	b9 0a       	sbc	r11, r25
    3c9e:	ca 0a       	sbc	r12, r26
    3ca0:	db 0a       	sbc	r13, r27
    3ca2:	d6 01       	movw	r26, r12
    3ca4:	c5 01       	movw	r24, r10
    3ca6:	6a 01       	movw	r12, r20
    3ca8:	7b 01       	movw	r14, r22
    3caa:	89 8c       	ldd	r8, Y+25	; 0x19
    3cac:	9a 8c       	ldd	r9, Y+26	; 0x1a
    3cae:	ab 8c       	ldd	r10, Y+27	; 0x1b
    3cb0:	bc 8c       	ldd	r11, Y+28	; 0x1c
    3cb2:	8c 18       	sub	r8, r12
    3cb4:	9d 08       	sbc	r9, r13
    3cb6:	ae 08       	sbc	r10, r14
    3cb8:	bf 08       	sbc	r11, r15
    3cba:	49 a1       	lds	r20, 0x49
    3cbc:	5a a1       	lds	r21, 0x4a
    3cbe:	6b a1       	lds	r22, 0x4b
    3cc0:	7c a1       	lds	r23, 0x4c
    3cc2:	48 1b       	sub	r20, r24
    3cc4:	59 0b       	sbc	r21, r25
    3cc6:	6a 0b       	sbc	r22, r26
    3cc8:	7b 0b       	sbc	r23, r27
    3cca:	81 e0       	ldi	r24, 0x01	; 1
    3ccc:	90 e0       	ldi	r25, 0x00	; 0
    3cce:	a0 e0       	ldi	r26, 0x00	; 0
    3cd0:	b0 e0       	ldi	r27, 0x00	; 0
    3cd2:	c9 8c       	ldd	r12, Y+25	; 0x19
    3cd4:	da 8c       	ldd	r13, Y+26	; 0x1a
    3cd6:	eb 8c       	ldd	r14, Y+27	; 0x1b
    3cd8:	fc 8c       	ldd	r15, Y+28	; 0x1c
    3cda:	c8 14       	cp	r12, r8
    3cdc:	d9 04       	cpc	r13, r9
    3cde:	ea 04       	cpc	r14, r10
    3ce0:	fb 04       	cpc	r15, r11
    3ce2:	18 f0       	brcs	.+6      	; 0x3cea <__umoddi3+0xad0>
    3ce4:	80 e0       	ldi	r24, 0x00	; 0
    3ce6:	90 e0       	ldi	r25, 0x00	; 0
    3ce8:	dc 01       	movw	r26, r24
    3cea:	48 1b       	sub	r20, r24
    3cec:	59 0b       	sbc	r21, r25
    3cee:	6a 0b       	sbc	r22, r26
    3cf0:	7b 0b       	sbc	r23, r27
    3cf2:	8a 01       	movw	r16, r20
    3cf4:	9b 01       	movw	r18, r22
    3cf6:	04 c0       	rjmp	.+8      	; 0x3d00 <__umoddi3+0xae6>
    3cf8:	00 0f       	add	r16, r16
    3cfa:	11 1f       	adc	r17, r17
    3cfc:	22 1f       	adc	r18, r18
    3cfe:	33 1f       	adc	r19, r19
    3d00:	2a 94       	dec	r2
    3d02:	d2 f7       	brpl	.-12     	; 0x3cf8 <__umoddi3+0xade>
    3d04:	03 2c       	mov	r0, r3
    3d06:	04 c0       	rjmp	.+8      	; 0x3d10 <__umoddi3+0xaf6>
    3d08:	b6 94       	lsr	r11
    3d0a:	a7 94       	ror	r10
    3d0c:	97 94       	ror	r9
    3d0e:	87 94       	ror	r8
    3d10:	0a 94       	dec	r0
    3d12:	d2 f7       	brpl	.-12     	; 0x3d08 <__umoddi3+0xaee>
    3d14:	08 29       	or	r16, r8
    3d16:	19 29       	or	r17, r9
    3d18:	2a 29       	or	r18, r10
    3d1a:	3b 29       	or	r19, r11
    3d1c:	09 83       	std	Y+1, r16	; 0x01
    3d1e:	1a 83       	std	Y+2, r17	; 0x02
    3d20:	2b 83       	std	Y+3, r18	; 0x03
    3d22:	3c 83       	std	Y+4, r19	; 0x04
    3d24:	6a 01       	movw	r12, r20
    3d26:	7b 01       	movw	r14, r22
    3d28:	04 c0       	rjmp	.+8      	; 0x3d32 <__umoddi3+0xb18>
    3d2a:	f6 94       	lsr	r15
    3d2c:	e7 94       	ror	r14
    3d2e:	d7 94       	ror	r13
    3d30:	c7 94       	ror	r12
    3d32:	3a 94       	dec	r3
    3d34:	d2 f7       	brpl	.-12     	; 0x3d2a <__umoddi3+0xb10>
    3d36:	cd 82       	std	Y+5, r12	; 0x05
    3d38:	de 82       	std	Y+6, r13	; 0x06
    3d3a:	ef 82       	std	Y+7, r14	; 0x07
    3d3c:	f8 86       	std	Y+8, r15	; 0x08
    3d3e:	20 2f       	mov	r18, r16
    3d40:	3a 81       	ldd	r19, Y+2	; 0x02
    3d42:	4b 81       	ldd	r20, Y+3	; 0x03
    3d44:	5c 81       	ldd	r21, Y+4	; 0x04
    3d46:	6c 2d       	mov	r22, r12
    3d48:	7e 81       	ldd	r23, Y+6	; 0x06
    3d4a:	8f 81       	ldd	r24, Y+7	; 0x07
    3d4c:	98 85       	ldd	r25, Y+8	; 0x08
    3d4e:	e4 96       	adiw	r28, 0x34	; 52
    3d50:	e2 e1       	ldi	r30, 0x12	; 18
    3d52:	0c 94 08 1f 	jmp	0x3e10	; 0x3e10 <__epilogue_restores__>

00003d56 <__mulsi3>:
    3d56:	62 9f       	mul	r22, r18
    3d58:	d0 01       	movw	r26, r0
    3d5a:	73 9f       	mul	r23, r19
    3d5c:	f0 01       	movw	r30, r0
    3d5e:	82 9f       	mul	r24, r18
    3d60:	e0 0d       	add	r30, r0
    3d62:	f1 1d       	adc	r31, r1
    3d64:	64 9f       	mul	r22, r20
    3d66:	e0 0d       	add	r30, r0
    3d68:	f1 1d       	adc	r31, r1
    3d6a:	92 9f       	mul	r25, r18
    3d6c:	f0 0d       	add	r31, r0
    3d6e:	83 9f       	mul	r24, r19
    3d70:	f0 0d       	add	r31, r0
    3d72:	74 9f       	mul	r23, r20
    3d74:	f0 0d       	add	r31, r0
    3d76:	65 9f       	mul	r22, r21
    3d78:	f0 0d       	add	r31, r0
    3d7a:	99 27       	eor	r25, r25
    3d7c:	72 9f       	mul	r23, r18
    3d7e:	b0 0d       	add	r27, r0
    3d80:	e1 1d       	adc	r30, r1
    3d82:	f9 1f       	adc	r31, r25
    3d84:	63 9f       	mul	r22, r19
    3d86:	b0 0d       	add	r27, r0
    3d88:	e1 1d       	adc	r30, r1
    3d8a:	f9 1f       	adc	r31, r25
    3d8c:	bd 01       	movw	r22, r26
    3d8e:	cf 01       	movw	r24, r30
    3d90:	11 24       	eor	r1, r1
    3d92:	08 95       	ret

00003d94 <__udivmodsi4>:
    3d94:	a1 e2       	ldi	r26, 0x21	; 33
    3d96:	1a 2e       	mov	r1, r26
    3d98:	aa 1b       	sub	r26, r26
    3d9a:	bb 1b       	sub	r27, r27
    3d9c:	fd 01       	movw	r30, r26
    3d9e:	0d c0       	rjmp	.+26     	; 0x3dba <__udivmodsi4_ep>

00003da0 <__udivmodsi4_loop>:
    3da0:	aa 1f       	adc	r26, r26
    3da2:	bb 1f       	adc	r27, r27
    3da4:	ee 1f       	adc	r30, r30
    3da6:	ff 1f       	adc	r31, r31
    3da8:	a2 17       	cp	r26, r18
    3daa:	b3 07       	cpc	r27, r19
    3dac:	e4 07       	cpc	r30, r20
    3dae:	f5 07       	cpc	r31, r21
    3db0:	20 f0       	brcs	.+8      	; 0x3dba <__udivmodsi4_ep>
    3db2:	a2 1b       	sub	r26, r18
    3db4:	b3 0b       	sbc	r27, r19
    3db6:	e4 0b       	sbc	r30, r20
    3db8:	f5 0b       	sbc	r31, r21

00003dba <__udivmodsi4_ep>:
    3dba:	66 1f       	adc	r22, r22
    3dbc:	77 1f       	adc	r23, r23
    3dbe:	88 1f       	adc	r24, r24
    3dc0:	99 1f       	adc	r25, r25
    3dc2:	1a 94       	dec	r1
    3dc4:	69 f7       	brne	.-38     	; 0x3da0 <__udivmodsi4_loop>
    3dc6:	60 95       	com	r22
    3dc8:	70 95       	com	r23
    3dca:	80 95       	com	r24
    3dcc:	90 95       	com	r25
    3dce:	9b 01       	movw	r18, r22
    3dd0:	ac 01       	movw	r20, r24
    3dd2:	bd 01       	movw	r22, r26
    3dd4:	cf 01       	movw	r24, r30
    3dd6:	08 95       	ret

00003dd8 <__prologue_saves__>:
    3dd8:	2f 92       	push	r2
    3dda:	3f 92       	push	r3
    3ddc:	4f 92       	push	r4
    3dde:	5f 92       	push	r5
    3de0:	6f 92       	push	r6
    3de2:	7f 92       	push	r7
    3de4:	8f 92       	push	r8
    3de6:	9f 92       	push	r9
    3de8:	af 92       	push	r10
    3dea:	bf 92       	push	r11
    3dec:	cf 92       	push	r12
    3dee:	df 92       	push	r13
    3df0:	ef 92       	push	r14
    3df2:	ff 92       	push	r15
    3df4:	0f 93       	push	r16
    3df6:	1f 93       	push	r17
    3df8:	cf 93       	push	r28
    3dfa:	df 93       	push	r29
    3dfc:	cd b7       	in	r28, 0x3d	; 61
    3dfe:	de b7       	in	r29, 0x3e	; 62
    3e00:	ca 1b       	sub	r28, r26
    3e02:	db 0b       	sbc	r29, r27
    3e04:	0f b6       	in	r0, 0x3f	; 63
    3e06:	f8 94       	cli
    3e08:	de bf       	out	0x3e, r29	; 62
    3e0a:	0f be       	out	0x3f, r0	; 63
    3e0c:	cd bf       	out	0x3d, r28	; 61
    3e0e:	09 94       	ijmp

00003e10 <__epilogue_restores__>:
    3e10:	2a 88       	ldd	r2, Y+18	; 0x12
    3e12:	39 88       	ldd	r3, Y+17	; 0x11
    3e14:	48 88       	ldd	r4, Y+16	; 0x10
    3e16:	5f 84       	ldd	r5, Y+15	; 0x0f
    3e18:	6e 84       	ldd	r6, Y+14	; 0x0e
    3e1a:	7d 84       	ldd	r7, Y+13	; 0x0d
    3e1c:	8c 84       	ldd	r8, Y+12	; 0x0c
    3e1e:	9b 84       	ldd	r9, Y+11	; 0x0b
    3e20:	aa 84       	ldd	r10, Y+10	; 0x0a
    3e22:	b9 84       	ldd	r11, Y+9	; 0x09
    3e24:	c8 84       	ldd	r12, Y+8	; 0x08
    3e26:	df 80       	ldd	r13, Y+7	; 0x07
    3e28:	ee 80       	ldd	r14, Y+6	; 0x06
    3e2a:	fd 80       	ldd	r15, Y+5	; 0x05
    3e2c:	0c 81       	ldd	r16, Y+4	; 0x04
    3e2e:	1b 81       	ldd	r17, Y+3	; 0x03
    3e30:	aa 81       	ldd	r26, Y+2	; 0x02
    3e32:	b9 81       	ldd	r27, Y+1	; 0x01
    3e34:	ce 0f       	add	r28, r30
    3e36:	d1 1d       	adc	r29, r1
    3e38:	0f b6       	in	r0, 0x3f	; 63
    3e3a:	f8 94       	cli
    3e3c:	de bf       	out	0x3e, r29	; 62
    3e3e:	0f be       	out	0x3f, r0	; 63
    3e40:	cd bf       	out	0x3d, r28	; 61
    3e42:	ed 01       	movw	r28, r26
    3e44:	08 95       	ret

00003e46 <_exit>:
    3e46:	f8 94       	cli

00003e48 <__stop_program>:
    3e48:	ff cf       	rjmp	.-2      	; 0x3e48 <__stop_program>
